{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\activitySettings\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\activitySettings\\index.vue","mtime":1615171048158},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _toConsumableArray from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EditAll from \"./components/EditAll\";\nimport EditOpen from \"./components/EditOpen\";\nimport TableComp from \"./components/TableComp\";\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport list from '@/mixins/list';\nimport tier from '@/mixins/tier';\nimport { routerNames } from '@/utils/consts';\nimport { mapGetters } from 'vuex';\nimport Modal from '@/components/Modal';\nexport default {\n  name: routerNames.activitySettings,\n  components: {\n    EditAll: EditAll,\n    EditOpen: EditOpen,\n    SelectAgentTree: SelectAgentTree,\n    Modal: Modal,\n    TableComp: TableComp\n  },\n  mixins: [list, tier],\n  data: function data() {\n    return {\n      loading: false,\n      openVisible: false,\n      dialogVisible2: false,\n      allVisible: false,\n      dialogVisible: false,\n      hasSearch: false,\n      modalType: 1,\n      form: {\n        agentId: ''\n      },\n      downForm: {\n        time: [],\n        agentType: -1,\n        status: -1,\n        walletType: '',\n        merchantType: ''\n      },\n      statusName: '',\n      type: '',\n      allType: '',\n      openData: {},\n      currentIndex: '',\n      change: '',\n      currentLevel: '',\n      currentData: {},\n      currencyList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['userInfo'])), {}, {\n    modalTitle: function modalTitle() {\n      var text;\n\n      switch (this.modalType) {\n        case 1:\n          text = this.$t('new_40');\n          break;\n\n        case 0:\n          text = this.$t('new_42');\n          break;\n      }\n\n      return text;\n    }\n  }),\n  watch: {\n    downForm: {\n      handler: function handler(val) {\n        this.loadData();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this = this;\n\n      this.loading = true;\n      this.levels = [];\n      var form = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        agentId: this.form.agentId,\n        type: 1\n      };\n      this.$api.activitySettings(form).then(function (_) {\n        _this.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this.total = data.totalRecord;\n          var _list = data.record;\n          _this.tableLists = [{\n            opened: false,\n            iconLoading: false,\n            level: 1,\n            data: _list\n          }];\n        }\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    modifyData: function modifyData(level, params, tableIndex, actType) {\n      var extraParams = {\n        startTime: this.downForm.time && this.downForm.time[0],\n        endTime: this.downForm.time && this.downForm.time[1],\n        agentType: this.downForm.agentType,\n        status: this.downForm.status,\n        agentId: params.agentId\n      };\n      this.mixinModifyData(level, params, tableIndex, actType, 'activitySettings', extraParams);\n    },\n    handleSure: function handleSure() {\n      var _this2 = this;\n\n      var params = {\n        agentId: this.currentData.agentId\n      };\n      params[this.statusName] = this.modalType;\n      this.$api.updateAgentSetting(params).then(function (res) {\n        if (res.code === 200) {\n          _this2.tableLists[_this2.currentLevel - 1].data[_this2.currentIndex][_this2.statusName] = params[_this2.statusName];\n          _this2.tableLists = _toConsumableArray(_this2.tableLists);\n          _this2.dialogVisible = false;\n          _this2.dialogVisible2 = false;\n        }\n      });\n    },\n    editFree: function editFree(index, row, level, status) {\n      if (row['chatStatus'] !== 0 && status === 'chatFreeStatus') {\n        return;\n      }\n\n      if (row['anchorTableChatStatus'] !== 0 && status === 'anchorTableFreeChatStatus') {\n        return;\n      }\n\n      this.statusName = status;\n      this.currentData = _objectSpread({}, row);\n      this.currentIndex = index;\n      this.currentLevel = level;\n      this.dialogVisible2 = true;\n      this.modalType = row[status] === 1 ? 0 : 1;\n    },\n    editAll: function editAll(type) {\n      this.allType = type;\n      this.allVisible = true;\n    },\n    editStatus: function editStatus(index, row, level, status) {\n      this.statusName = status;\n      this.currentData = _objectSpread({}, row);\n      this.currentIndex = index;\n      this.currentLevel = level;\n      this.dialogVisible = true;\n      this.modalType = row[status] === 1 ? 0 : 1;\n    },\n    selectChange: function selectChange(value) {\n      this.change = value;\n      this.$store.dispatch('tree/setSelectValue', value);\n    },\n    handleSearch: function handleSearch() {\n      var extraParams = {};\n      this.mixinHandleSearch('activitySettings', extraParams);\n    },\n    handleReset: function handleReset() {\n      this.form = {\n        agentId: ''\n      };\n      this.hasSearch = false;\n      this.loadData();\n    },\n    editOpen: function editOpen(index, row, level, type) {\n      this.currentIndex = index;\n      this.currentLevel = level;\n      this.type = type;\n      this.openData = _objectSpread({}, row);\n      this.openVisible = true;\n    },\n    closeAll: function closeAll() {\n      this.handleSearch();\n    },\n    closeEdit: function closeEdit(number) {\n      if (this.type === 'rewardAnthorAgentRate') {\n        this.tableLists[this.currentLevel - 1].data[this.currentIndex]['rewardAnthorAgentRateStr'] = number + '.00%';\n      } else if (this.type === 'rewardDealerAgentRate') {\n        this.tableLists[this.currentLevel - 1].data[this.currentIndex]['rewardDealerAgentRateStr'] = number + '.00%';\n      } else {\n        this.tableLists[this.currentLevel - 1].data[this.currentIndex]['rewardTableAnchorAgentRateStr'] = number + '.00%';\n      }\n\n      this.tableLists[this.currentLevel - 1].data[this.currentIndex][this.type] = Number(number / 100);\n      this.tableLists = _toConsumableArray(this.tableLists); // this.loadData()\n    }\n  }\n};",null]}