{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\ipwhite\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\ipwhite\\index.vue","mtime":1617695097441},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport list from '@/mixins/list';\nimport { mapGetters } from 'vuex';\nimport { routerNames } from '@/utils/consts';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport { message } from '@/utils/message';\nimport Cookies from 'js-cookie';\nimport dayjs from 'dayjs';\nexport default {\n  name: routerNames.ipwhite,\n  components: {\n    SelectAgentTree: SelectAgentTree\n  },\n  mixins: [list],\n  data: function data() {\n    return {\n      hadSearch: false,\n      loading: false,\n      ipDialogVisible: false,\n      activeName: '0',\n      form: {\n        ip: '',\n        time: '',\n        status: -1,\n        type: -1,\n        agentId: '',\n        updatedBy: '',\n        quickSearch: ''\n      },\n      ipDialogForm: {\n        type: '',\n        ip: '',\n        remark: '',\n        agentId: '',\n        updatedBy: '',\n        agentName: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['buttonPermissions'])), mapGetters(['globalDics'])), {}, {\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: [{\n          text: this.$t(\"members_betrecord_index_584\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_585\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day').subtract(1, 'd');\n            var start = dayjs().startOf('day').subtract(1, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_586\"),\n          onClick: function onClick(picker) {\n            var start, end;\n            var weekNum = dayjs().day();\n\n            if (weekNum === 0) {\n              end = dayjs().endOf('day');\n              start = dayjs().subtract(1, 'd').startOf('week').startOf('day').add(1, 'd');\n            } else {\n              end = dayjs().endOf('day');\n              start = dayjs().startOf('day').startOf('week').add(1, 'd');\n            }\n\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_587\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('month');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"merchant_dailyrateaccount_index_799\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day').subtract(89, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }]\n      };\n    },\n    whiteiptype: function whiteiptype() {\n      var types = this.globalDics.whiteiptype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    options: function options() {\n      return [{\n        value: 'self',\n        label: this.$t('systemmanagement_ipwhite_index_1458')\n      }, {\n        value: 'under',\n        label: this.$t('systemmanagement_ipwhite_index_1459')\n      }, {\n        value: 'team',\n        label: this.$t('systemmanagement_ipwhite_index_1460')\n      }];\n    },\n    ipDialogRules: function ipDialogRules() {\n      // const validateIp = (rule, value, callback) => {\n      // \tif (\n      // \t\tvalue &&\n      // \t\t!/^((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d))|\\*)((\\/([012]\\d|3[012]|\\d))?)(,((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d))|\\*)((\\/([012]\\d|3[012]|\\d))?))*$/.test(\n      // \t\t\tvalue\n      // \t\t)\n      // \t) {\n      // \t\tcallback(new Error('IP地址不符合规范，请重新输入'))\n      // \t} else {\n      // \t\tcallback()\n      // \t}\n      // }\n      return {\n        agentName: [{\n          required: true,\n          message: this.$t('systemmanagement.l_systemmanagement_146'),\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: this.$t('systemmanagement.systemmanagement_68'),\n          trigger: 'blur'\n        }],\n        ip: [{\n          required: true,\n          message: this.$t('systemmanagement_ipwhite_index_1453'),\n          trigger: 'blur'\n        } // { validator: validateIp, trigger: 'blur' }\n        ],\n        remark: [{\n          message: this.$t('systemmanagement.systemmanagement_70'),\n          trigger: 'blur'\n        }],\n        updatedBy: [{\n          required: true,\n          message: this.$t('new_81'),\n          trigger: 'blur'\n        }]\n      };\n    } // ipBatchDialogRules() {\n    // \treturn {\n    // \t\tfile: [\n    // \t\t\t{\n    // \t\t\t\trequired: true,\n    // \t\t\t\tmessage: this.$t('systemmanagement.systemmanagement_71'),\n    // \t\t\t\ttrigger: 'blur'\n    // \t\t\t}\n    // \t\t],\n    // \t\tagentName: [\n    // \t\t\t{\n    // \t\t\t\trequired: true,\n    // \t\t\t\tmessage: this.$t('systemmanagement.l_systemmanagement_146'),\n    // \t\t\t\ttrigger: 'blur'\n    // \t\t\t}\n    // \t\t],\n    // \t\tremark: [\n    // \t\t\t{\n    // \t\t\t\tmessage: this.$t('systemmanagement.systemmanagement_70'),\n    // \t\t\t\ttrigger: 'blur'\n    // \t\t\t}\n    // \t\t]\n    // \t}\n    // }\n\n  }),\n  watch: {\n    'form.quickSearch': function formQuickSearch(val) {\n      console.log('val :>> ', val); // this.loadData()\n    }\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this2 = this;\n\n      this.loading = true;\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startDate: this.form.time ? this.form.time[0] : '',\n        endDate: this.form.time ? this.form.time[1] : '',\n        quickSearch: this.form.quickSearch,\n        updatedBy: this.form.updatedBy\n      };\n      var requestData = this.hadSearch ? {\n        ip: this.form.ip,\n        agentId: this.form.agentId,\n        type: this.form.type,\n        status: this.form.status\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.systemIpwhitelist(_objectSpread({}, form)).then(function (_) {\n        _this2.loading = false;\n        var data = _.data;\n        _this2.total = data.totalRecord;\n        _this2.list = data.record;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    loadData2: function loadData2() {\n      var _this3 = this;\n\n      this.loading = true;\n      var initData = {\n        type: this.form.type,\n        agentId: this.form.agentId,\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize\n      };\n\n      var form = _objectSpread({}, initData);\n\n      this.$api.polymIpwhitelist(_objectSpread({}, form)).then(function (_) {\n        _this3.loading = false;\n        var data = _.data;\n        _this3.total = data.totalRecord;\n        _this3.list = data.record;\n      }).catch(function () {\n        _this3.loading = false;\n      });\n    },\n    clickTab: function clickTab() {\n      this.list = [];\n      this.pageIndex = 1;\n\n      if (this.activeName === '0') {\n        this.loadData();\n      } else {\n        this.loadData2();\n      }\n    },\n    handleReset: function handleReset() {\n      this.form = {\n        time: '',\n        ip: '',\n        updatedBy: '',\n        type: -1,\n        status: -1,\n        quickSearch: ''\n      };\n      this.hadSearch = false;\n      this.initList();\n    },\n    handleCreateWhite: function handleCreateWhite() {\n      this.ipDialogVisible = true;\n      this.ipDialogForm = {\n        type: 1,\n        agentId: ''\n      };\n    },\n    editRow: function editRow(row) {\n      this.ipDialogVisible = true;\n      this.ipDialogForm = _objectSpread({}, row);\n    },\n    filterIps: function filterIps(list) {\n      console.log('list :', list);\n      var ipArr = [];\n      list.forEach(function (item) {\n        // if(item.)\n        ipArr.push(item.ip);\n      });\n      return ipArr;\n    },\n    filterCheckedList: function filterCheckedList(list) {\n      console.log('list :', list);\n      var idArr = [];\n      list.forEach(function (item) {\n        // if(item.)\n        idArr.push(item.id);\n      });\n      return idArr;\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.list = [];\n\n      if (this.activeName === '0') {\n        this.loadData();\n      } else {\n        this.loadData2();\n      }\n    },\n    commitIpDialog: function commitIpDialog() {\n      var _this4 = this;\n\n      this.$refs.ipDialogForm.validate(function (val) {\n        if (val) {\n          var loading = _this4.$loading({\n            lock: true,\n            text: 'Loading',\n            spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.7)'\n          });\n\n          if (!_this4.ipDialogForm.agentId) {\n            _this4.$message.error(_this4.$t('systemmanagement.systemmanagement_74'));\n\n            return false;\n          }\n\n          var form = {\n            agentId: _this4.ipDialogForm.agentId || '',\n            type: _this4.ipDialogForm.type,\n            remark: _this4.ipDialogForm.remark,\n            updatedBy: _this4.ipDialogForm.updatedBy,\n            ip: _this4.ipDialogForm.ip,\n            id: _this4.ipDialogForm.id\n          };\n          var api = _this4.ipDialogForm.id ? 'systemUpdateIpWhite' : 'systemCreate';\n          var text = _this4.ipDialogForm.id ? _this4.$t('systemmanagement_ipwhite_index_1461') : _this4.$t('systemmanagement_ipwhite_index_1462');\n\n          _this4.$api[api](form).then(function () {\n            _this4.ipDialogVisible = false;\n\n            _this4.$message({\n              type: 'success',\n              message: _this4.$t('systemmanagement_ipwhite_index_1463', [_this4.fitlerIpScope(form.type), text])\n            });\n\n            _this4.loadData();\n\n            loading.close();\n          }).catch(function () {\n            loading.close();\n          });\n        }\n      });\n    },\n    querySearchAgentName: function querySearchAgentName(keywords, cb) {\n      var _this5 = this;\n\n      this.$api.systemSearchAgents({\n        keywords: keywords\n      }).then(function (_) {\n        if (_.code === 200) {\n          clearTimeout(_this5.timeout);\n          _this5.timeout = setTimeout(function () {\n            cb(_.data);\n          }, 500);\n        }\n      });\n    },\n    fitlerIpScope: function fitlerIpScope(c) {\n      var arr = this.whiteiptype || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    handleSizeChange: function handleSizeChange(value) {\n      this.pageSize = value;\n\n      if (this.activeName === '0') {\n        this.loadData();\n      } else {\n        this.loadData2();\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n\n      if (this.activeName === '0') {\n        this.loadData();\n      } else {\n        this.loadData2();\n      }\n    },\n    switchChange: function switchChange(val, row) {\n      var _this6 = this;\n\n      var params = {\n        id: row.id,\n        status: val ? '1' : '0'\n      };\n      this.$api.systemUpdateIpWhiteStatus(params).then(function (res) {\n        if (res.code === 200) {\n          var index = _this6.list.findIndex(function (val) {\n            return val.id === row.id;\n          });\n\n          _this6.list[index].status = params.status;\n          var statusText = params.status === '1' ? _this6.$t('systemmanagement_ipwhite_index_1438') : _this6.$t('systemmanagement_ipwhite_index_1439');\n          return message({\n            message: _this6.$t('systemmanagement_ipwhite_index_1464', [statusText]),\n            type: 'success'\n          });\n        }\n      });\n    },\n    onCancel: function onCancel() {\n      this.ipDialogVisible = false;\n      this.$refs.ipDialogForm.clearValidate();\n    }\n  }\n};",null]}