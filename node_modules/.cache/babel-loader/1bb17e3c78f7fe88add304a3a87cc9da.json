{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\layout\\components\\ModifyPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\layout\\components\\ModifyPassword.vue","mtime":1615171048036},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport router from '@/router';\nimport { validPassword } from '@/utils/validate';\nimport { mapGetters } from 'vuex'; // import md5 from 'js-md5'\n\nexport default {\n  name: 'ModifyPassword',\n  props: {\n    editVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      passDialogForm: {\n        oldPassword: '',\n        pwd: '',\n        rePwd: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['userInfo'])), {}, {\n    rules: function rules() {\n      var _this = this;\n\n      var validatePwd = function validatePwd(rule, value, callback) {\n        if (value && value.length < 6) {\n          callback(new Error(_this.$t('authoritymanagement_usermanage_components_edituser_309')));\n        } else if (value && value.length > 12) {\n          callback(new Error(_this.$t('authoritymanagement_usermanage_components_edituser_310')));\n        } else if (value === '' || !validPassword(value)) {\n          callback(new Error(_this.$t('authoritymanagement_usermanage_components_edituser_311')));\n        } else {\n          callback();\n        }\n      };\n\n      var validateRepwd = function validateRepwd(rule, value, callback) {\n        if (value !== _this.passDialogForm.password) {\n          callback(new Error(_this.$t('authoritymanagement_usermanage_components_edituser_312')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        oldPassword: [{\n          required: true,\n          message: this.$t('other_008'),\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePwd,\n          trigger: 'blur'\n        }],\n        passwordAgain: [{\n          required: true,\n          validator: validateRepwd,\n          trigger: 'blur'\n        }]\n      };\n    }\n  }),\n  watch: {\n    editVisible: function editVisible(val) {\n      this.visible = val;\n    }\n  },\n  methods: {\n    cancel: function cancel() {\n      this.$store.dispatch('app/setModify', false);\n      this.$refs.form.clearValidate();\n      this.passDialogForm = {\n        oldPassword: '',\n        pwd: '',\n        rePwd: ''\n      };\n    },\n    handleSure: function handleSure() {\n      var _this2 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          var params = {\n            agentCode: _this2.userInfo.agentCode,\n            loginName: _this2.userInfo.username,\n            // oldPassword: md5(this.passDialogForm.oldPassword + this.userInfo.username.trim()),\n            // password: md5(this.passDialogForm.password + this.userInfo.username.trim()),\n            // passwordAgain: md5(this.passDialogForm.passwordAgain + this.userInfo.username.trim())\n            oldPassword: _this2.passDialogForm.oldPassword,\n            password: _this2.passDialogForm.password,\n            passwordAgain: _this2.passDialogForm.passwordAgain\n          };\n\n          _this2.$api.changeLoginPwd(params).then( /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!(res.code === 200)) {\n                        _context.next = 9;\n                        break;\n                      }\n\n                      _context.next = 3;\n                      return _this2.$store.dispatch('user/logout');\n\n                    case 3:\n                      _context.next = 5;\n                      return _this2.$store.dispatch('permission/clearRoutes');\n\n                    case 5:\n                      _context.next = 7;\n                      return _this2.$store.dispatch('app/setModify', false);\n\n                    case 7:\n                      _this2.$router.push(\"/login?redirect=\".concat(router.history.current.fullPath));\n\n                      return _context.abrupt(\"return\", _this2.$message({\n                        type: 'success',\n                        message: _this2.$t('other_009')\n                      }));\n\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        }\n      });\n    }\n  }\n};",null]}