{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\accounttransaction\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\accounttransaction\\index.vue","mtime":1617695097414},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport list from '@/mixins/list';\nimport { mapGetters } from 'vuex';\nimport dayjs from 'dayjs';\nimport { routerNames } from '@/utils/consts';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport router from '@/router';\nimport downloadSure from '@/utils/common/downloadSure';\nimport Cookies from 'js-cookie';\nexport default {\n  name: routerNames.membersaccounttransaction,\n  components: {\n    SelectAgentTree: SelectAgentTree\n  },\n  mixins: [list],\n  data: function data() {\n    var end = dayjs().endOf('day');\n    var start = dayjs().startOf('day');\n    return {\n      hadSearch: false,\n      loading: false,\n      checkAll: true,\n      isIndeterminate: false,\n      form: {\n        playerId: '',\n        reasonKey: '',\n        playerLoginName: '',\n        nickName: '',\n        agentName: '',\n        bizType: -1,\n        isEqLoginName: 0,\n        time: [+start, +end],\n        tranType: this.$store.state.user.globalDics && this.$store.state.user.globalDics.trantype.map(function (val) {\n          return val.value;\n        }),\n        agentId: '',\n        minAmount: '',\n        maxAmount: ''\n      },\n      amountData: {},\n      prevIndex: 1,\n      summary: '',\n      hasNode: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['globalDics'])), {}, {\n    bizTypeList: function bizTypeList() {\n      return [{\n        name: this.$t('a_31'),\n        value: 2\n      }, {\n        name: this.$t('a_32'),\n        value: 4\n      }];\n    },\n    trantype: function trantype() {\n      var types = this.globalDics.trantype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    }\n  }),\n  activated: function activated() {\n    var _this = this;\n\n    window.clearInterval(window.bbbtimer);\n    window.bbbtimer = null;\n\n    if (!window.aaatimer) {\n      window.aaatimer = window.setInterval(function () {\n        _this.summary && _this.addTotalAmount();\n      }, 800);\n    }\n  },\n  destroyed: function destroyed() {\n    window.clearInterval(window.aaatimer);\n    window.aaatimer = null;\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    window.clearInterval(window.aaatimer);\n    window.aaatimer = null;\n    next();\n  },\n  methods: {\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      console.log('333');\n\n      if (this.form.time[0] < 1556640000000) {\n        this.$message({\n          message: this.$t('timeerror'),\n          type: 'error'\n        });\n        return;\n      }\n\n      this.loading = true;\n\n      if (localStorage.getItem('playerIdA')) {\n        this.form.playerLoginName = localStorage.getItem('playerLoginNameA');\n        this.form.playerId = localStorage.getItem('playerIdA');\n        this.form.isEqLoginName = 1;\n        localStorage.removeItem('playerLoginNameA');\n        localStorage.removeItem('playerIdA');\n      }\n\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startTransactionTime: this.form.time[0],\n        endTransactionTime: this.form.time[1],\n        playerLoginName: this.form.playerLoginName,\n        tranType: this.form.tranType.join(),\n        reasonKey: this.form.reasonKey,\n        minAmount: this.form.minAmount,\n        isEqLoginName: this.form.isEqLoginName,\n        id: this.form.id,\n        bizType: this.form.bizType,\n        playerId: this.form.playerId,\n        maxAmount: this.form.maxAmount\n      };\n      var requestData = this.hadSearch ? {\n        nickName: this.form.nickName,\n        searchAgentId: this.form.agentId\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.memberQueryAccountRecord(form).then(function (_) {\n        _this2.loading = false;\n        var data = _.data;\n        _this2.list = data.record;\n        _this2.total = data.totalRecord;\n        _this2.summary = data.summary;\n\n        _this2.$nextTick(function () {\n          _this2.addTotalAmount();\n        });\n      }).catch(function () {\n        _this2.pageIndex = _this2.prevIndex;\n        _this2.list = [];\n        _this2.total = 0;\n        _this2.loading = false;\n      });\n    },\n    addTotalAmount: function addTotalAmount() {\n      var totalSpan = document.querySelector('.total-span');\n      var pageNode = document.querySelector('.el-pagination');\n      var prevNode = document.querySelector('.el-pagination__total');\n      var newNode = document.createElement('span');\n\n      if (!totalSpan) {\n        newNode.innerText = this.$t('members_accounttransaction_index_506', [this.summary]);\n        newNode.style.margin = '0 15px';\n        newNode.style.fontWeight = '400';\n        newNode.className = 'total-span';\n        pageNode && pageNode.insertBefore(newNode, prevNode);\n      } else {\n        var str = this.$t('members_accounttransaction_index_506', [this.summary]);\n        totalSpan.innerText = str;\n      }\n    },\n    filterBiz: function filterBiz(value) {\n      var name = '';\n      this.bizTypeList.forEach(function (item) {\n        if (item.value === value) {\n          name = item.name;\n        }\n      });\n      return name;\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n      this.loadData();\n    },\n    handleCheckedTypesChange: function handleCheckedTypesChange(value) {\n      var checkedCount = value.length;\n      this.checkAll = checkedCount === this.trantype.length;\n    },\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      var checkedArr = val ? _toConsumableArray(this.trantype.map(function (item) {\n        return item.value;\n      })) : [];\n      this.form.tranType = checkedArr;\n      this.isIndeterminate = false;\n    },\n    filterTranType: function filterTranType(c) {\n      var arr = this.trantype || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    handleReset: function handleReset() {\n      var _this3 = this;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        router.push(this.$route.path, function () {\n          _this3.resetCommon();\n        });\n      } else {\n        this.resetCommon();\n      }\n    },\n    resetCommon: function resetCommon() {\n      var end = dayjs().endOf('day');\n      var start = dayjs().startOf('day');\n      this.isIndeterminate = false;\n      this.checkAll = true;\n      this.hadSearch = false;\n      this.form = {\n        reasonKey: '',\n        nickName: '',\n        playerId: '',\n        playerLoginName: '',\n        agentName: '',\n        time: [+start, +end],\n        minAmount: '',\n        bizType: -1,\n        isEqLoginName: 0,\n        maxAmount: '',\n        tranType: this.$store.state.user.globalDics && this.$store.state.user.globalDics.trantype.map(function (val) {\n          return val.value;\n        })\n      };\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    exportCsv: function exportCsv() {\n      var params = {\n        startTransactionTime: this.form.time[0],\n        endTransactionTime: this.form.time[1],\n        playerLoginName: this.form.playerLoginName,\n        nickName: this.form.nickName,\n        searchAgentId: this.form.agentId,\n        tranType: this.form.tranType.join()\n      };\n      downloadSure(this.$api, 'queryAccountRecordCSV', params, this.$t('members_accounttransaction_index_507'));\n    }\n  }\n};",null]}