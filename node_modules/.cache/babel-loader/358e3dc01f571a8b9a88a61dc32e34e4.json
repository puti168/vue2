{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\tableconfig\\components\\EditTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\tableconfig\\components\\EditTable.vue","mtime":1615171048116},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validPassword } from '@/utils/validate';\nexport default {\n  name: 'Edituser',\n  props: {\n    type: {\n      type: Number,\n      default: 0\n    },\n    drawer: Boolean,\n    permissions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    assignedpermissions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    userdata: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      transferKey: 0,\n      tranferVal: [],\n      elDrawer: false,\n      form: {\n        nickName: '',\n        userName: '',\n        pwd: '',\n        rePwd: ''\n      },\n      direction: 'ttb',\n      prefixAgentName: ''\n    };\n  },\n  computed: {\n    rules: function rules() {\n      var _this = this;\n\n      var validNumberEn12 = function validNumberEn12(rule, value, callback) {\n        if (/^([A-Za-z0-9_]{6,12})$/.test(value)) {\n          callback();\n        } else {\n          callback(new Error(_this.$t('merchant.merchant_137')));\n        }\n      };\n\n      var validNumberEnCn = function validNumberEnCn(rule, value, callback) {\n        if (value && /^[\\u4e00-\\u9fa5a-zA-Z0-9_]{0,30}$/.test(value)) {\n          callback();\n        } else {\n          callback(new Error(_this.$t('merchant.merchant_143')));\n        }\n      };\n\n      var validatePwd = function validatePwd(rule, value, callback) {\n        if (value === '') {\n          callback(new Error(_this.$t('systemmanagement.systemmanagement_126')));\n        } else if (!validPassword(value)) {\n          callback(new Error(_this.$t('merchant.merchant_137')));\n        } else {\n          callback();\n        }\n      };\n\n      var validateRepwd = function validateRepwd(rule, value, callback) {\n        if (value === '') {\n          callback(new Error(_this.$t('systemmanagement.systemmanagement_128')));\n        } else if (!validPassword(value)) {\n          callback(new Error(_this.$t('merchant.merchant_137')));\n        } else if (value !== _this.form.pwd) {\n          callback(new Error(_this.$t('systemmanagement.systemmanagement_129')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        userName: [{\n          required: true,\n          message: this.$t('systemmanagement.systemmanagement_130'),\n          trigger: 'blur'\n        }, {\n          validator: validNumberEn12,\n          trigger: 'blur'\n        }],\n        nickName: [{\n          required: true,\n          message: this.$t('systemmanagement.systemmanagement_119'),\n          trigger: 'blur'\n        }, {\n          validator: validNumberEnCn,\n          trigger: 'blur'\n        }],\n        pwd: [{\n          required: true,\n          validator: validatePwd,\n          trigger: 'blur'\n        }],\n        rePwd: [{\n          required: true,\n          validator: validateRepwd,\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  watch: {\n    drawer: function drawer(val) {\n      var _this2 = this;\n\n      this.elDrawer = val;\n\n      if (val) {\n        this.$nextTick(function () {\n          _this2.$refs.form.clearValidate();\n        });\n      }\n    },\n    userdata: {\n      handler: function handler(newVal) {\n        if (!newVal.userName) {// this.$nextTick(() => {\n          // \tthis.$refs.form.resetFields()\n          // })\n        }\n\n        if (newVal) {\n          this.form = _objectSpread({}, newVal);\n        }\n      },\n      deep: true\n    },\n    'userdata.agentType': {\n      handler: function handler(val) {\n        if (val) {\n          this.prefixAgentName = this.prefixByAgentType(val);\n        }\n      },\n      deep: true\n    },\n    assignedpermissions: {\n      handler: function handler(newVal, oldVal) {\n        this.tranferVal = this.filterAssignedKeys(newVal);\n      },\n      deep: true\n    }\n  },\n  methods: {\n    // 根据当前登录者的信息显示新建用户前缀\n    prefixByAgentType: function prefixByAgentType(agentType) {\n      if (agentType === 3) {\n        return 'PTZ';\n      } else if (agentType === 1) {\n        return 'XLZ';\n      } else {\n        return 'SHZ';\n      }\n    },\n    filterAssignedKeys: function filterAssignedKeys(arr) {\n      var list = [];\n      arr.forEach(function (item) {\n        if (item.isExist === '1') {\n          list.push(item.id);\n        }\n      });\n      return list;\n    },\n    handleSure: function handleSure() {\n      var _this3 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          // 获取参数\n          var form = {\n            nickName: _this3.form.nickName,\n            pwd: _this3.form.pwd,\n            rePwd: _this3.form.rePwd,\n            roleIds: _this3.tranferVal,\n            userName: (_this3.type !== 1 ? _this3.prefixByAgentType(_this3.userdata.agentType) : '') + _this3.form.userName,\n            userId: _this3.form.id\n          };\n\n          if (_this3.type === 0) {\n            _this3.$api.merchantAddUser(form).then(function (_) {\n              if (_.code === 200) {\n                _this3.$message({\n                  type: 'success',\n                  message: _this3.$t('systemmanagement.systemmanagement_103')\n                });\n\n                _this3.$emit('update:drawer', false);\n\n                _this3.$emit('handleCallBack');\n              }\n            });\n          } else {\n            _this3.$api.merchantEditUser(form).then(function (_) {\n              if (_.code === 200) {\n                _this3.resetForm();\n\n                _this3.$emit('update:drawer', false);\n\n                _this3.$message({\n                  type: 'success',\n                  message: _this3.$t('systemmanagement.systemmanagement_39')\n                });\n\n                _this3.$emit('handleCallBack');\n              }\n            });\n          }\n        }\n      });\n    },\n    handleClose: function handleClose() {\n      this.resetForm();\n      this.$emit('update:drawer', false);\n    },\n    resetForm: function resetForm() {\n      this.$refs.form.resetFields();\n      this.transferKey = +new Date();\n      this.tranferVal = [];\n    }\n  }\n};",null]}