{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\utils\\index.js","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\utils\\index.js","mtime":1615171048077},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _typeof from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/typeof\";\n\n/**\r\n * Created by PanJiaChen on 16/11/18.\r\n */\n\n/**\r\n * Parse the time to string\r\n * @param {(Object|string|number)} time\r\n * @param {string} cFormat\r\n * @returns {string}\r\n */\nexport function parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if (_typeof(time) === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time);\n    }\n\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key]; // Note: getDay() returns 0 on Sunday\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n\n    return value || 0;\n  });\n  return time_str;\n}\n/**\r\n * @param {number} time\r\n * @param {string} option\r\n * @returns {string}\r\n */\n\nexport function formatTime(time, option) {\n  if (('' + time).length === 10) {\n    time = parseInt(time) * 1000;\n  } else {\n    time = +time;\n  }\n\n  var d = new Date(time);\n  var now = Date.now();\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n}\n/**\r\n * @param {string} url\r\n * @returns {Object}\r\n */\n\nexport function param2Obj(url) {\n  var search = url.split('?')[1];\n\n  if (!search) {\n    return {};\n  }\n\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"').replace(/\\+/g, ' ') + '\"}');\n}\n/**\r\n * 格式化金钱数字\r\n * @param {number} num\r\n * @param {Boolean} precision\r\n */\n\nexport function formatCurrency(num) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (num === '-') return '-';\n  if (String(num).includes('.')) precision = true;\n\n  if (num === undefined || num === null) {\n    return '-';\n  }\n\n  if (num === 0 || num === '0') return 0;\n  num = num.toString().replace(/\\$|\\,/g, '');\n  if (isNaN(num)) num = '0';\n  var sign = +num === (num = Math.abs(num));\n  num = Math.floor(num * 100 + 0.50000000001);\n  var cents = num % 100;\n  num = Math.floor(num / 100).toString();\n  if (cents < 10) cents = '0' + cents;\n\n  for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) {\n    num = num.substring(0, num.length - (4 * i + 3)) + ',' + num.substring(num.length - (4 * i + 3));\n  }\n\n  return (sign ? '' : '-') + num + (precision ? '.' + cents : '');\n}\n/**\r\n * excel格式校验\r\n * @param {file:file} file\r\n */\n\nexport function validateExcel(file) {\n  if (!/\\.(csv|xlsx|xls|XLSX|XLS)$/.test(file.name)) {\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * 给正负数加颜色\r\n * @param {numberVal} numberVal\r\n */\n\nexport function colorNum(numberVal) {\n  var color = '';\n\n  if (!numberVal) {\n    return color;\n  }\n\n  if (numberVal > 0) {\n    color = 'danger';\n  } else if (numberVal < 0) {\n    color = 'success';\n  }\n\n  return color;\n}\n/**\r\n * @desc 判断一个对象是否为空\r\n * @param {Object} obj 对象\r\n * @return {Boolean}\r\n */\n\nexport function checkNullObj(obj) {\n  return Object.keys(obj).length === 0;\n}\n/**\r\n * 判断输入的url是否正确\r\n * @param {String} str_url\r\n */\n\nexport function IsURL(str_url) {\n  return /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(str_url);\n}\n/**\r\n * @desc 判断金额\r\n * @param {Number} num 数字\r\n */\n\nexport function isNum(num) {\n  return /^(([1-9][0-9]*)|(([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2})))$/.test(num);\n}",null]}