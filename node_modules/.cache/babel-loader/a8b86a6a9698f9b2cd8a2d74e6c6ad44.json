{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\merchant\\merchantInfo\\components\\EditTrial.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\merchant\\merchantInfo\\components\\EditTrial.vue","mtime":1615171048141},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'EditTrial',\n  props: {\n    accountData: {\n      type: Object,\n      default: function _default() {}\n    },\n    value: {\n      type: Boolean,\n      default: false\n    },\n    editTrialInfoSuccess: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      accountForm: {\n        model: 2,\n        agentName: '',\n        apiRate: '',\n        cooperations: []\n      }\n    };\n  },\n  computed: {\n    accountFormRules: function accountFormRules() {\n      var _this = this;\n\n      var validateLimit = function validateLimit(rule, value, callback) {\n        if (!/^[1-9]\\d*$/.test(value)) {\n          callback(new Error(_this.$t('merchant_merchantinfo_components_edittrial_985')));\n        } else if (value > 100000) {\n          callback(new Error(_this.$t('merchant_merchantinfo_components_edittrial_986')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        trialGameUpperLimit: [{\n          validator: validateLimit,\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  watch: {\n    accountData: function accountData(val) {\n      this.accountForm = _objectSpread(_objectSpread({}, val), {}, {\n        supportTrialGame: val.supportTrialGame !== null ? val.supportTrialGame : 1,\n        trialGameUpperLimit: val.trialGameUpperLimit === null || val.trialGameUpperLimit === 0 ? 0 : val.trialGameUpperLimit ? val.trialGameUpperLimit : 1000\n      });\n    }\n  },\n  methods: {\n    handleClose: function handleClose() {\n      this.$refs.accountForm.clearValidate();\n      this.$emit('input', false);\n    },\n    commitAccount: function commitAccount() {\n      var _this2 = this;\n\n      this.$refs.accountForm.validate(function (valid) {\n        if (valid) {\n          var form = {\n            agentId: _this2.accountForm.agentId,\n            agentName: _this2.accountForm.agentName,\n            supportTrialGame: _this2.accountForm.supportTrialGame,\n            trialGameUpperLimit: _this2.accountForm.trialGameUpperLimit\n          };\n\n          _this2.$api.setTrialGameConfig(form).then(function (_) {\n            if (_.code === 200) {\n              _this2.$emit('input', false);\n\n              _this2.$emit('editTrialInfoSuccess', form);\n\n              _this2.$message({\n                message: _this2.$t(_this2.$t('merchant_merchantinfo_components_edittrial_987')),\n                type: 'success'\n              });\n            }\n          });\n        }\n      });\n    },\n    onRadioChange: function onRadioChange(value) {\n      if (value === 0) {\n        this.accountForm.trialGameUpperLimit = 1000;\n        this.$refs.accountForm.clearValidate();\n      }\n    }\n  }\n};",null]}