{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\betlimit\\component\\LimitPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\betlimit\\component\\LimitPlan.vue","mtime":1615171048113},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatCurrency } from '@/utils';\nimport { mapGetters } from 'vuex';\nimport Cookies from 'js-cookie';\nexport default {\n  props: {\n    data: {\n      type: Object,\n      default: function _default() {}\n    },\n    value: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      status: 0,\n      limit: {},\n      originList: [],\n      list: [],\n      tabList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['globalDics'])), {}, {\n    gametype: function gametype() {\n      var types = this.globalDics.gametype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    }\n  }),\n  watch: {\n    data: {\n      handler: function handler(val) {\n        console.log('val :', val);\n\n        if (val.id) {\n          this.status = 0;\n          this.limit = val;\n          this.loadData(val);\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    formatCurrency: formatCurrency,\n    getRowClass: function getRowClass(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (rowIndex === 0) {\n        return 'background:#EFEFEF;text-align: center;';\n      } else {\n        return '';\n      }\n    },\n    loadData: function loadData(_ref2, tabIndex) {\n      var _this = this;\n\n      var id = _ref2.id,\n          type = _ref2.type;\n      this.$api.merchantGetLimitRedDetail({\n        id: id,\n        type: type\n      }).then(function (_) {\n        if (_.code === 200) {\n          _this.originList = _.data; // 初始化列表\n\n          _this.tabList = _this.filterTabs(_this.originList);\n          _this.list = _this.filterList(tabIndex, _this.originList);\n        }\n      });\n    },\n    filterTabs: function filterTabs(list) {\n      var arr = [];\n      list.forEach(function (element) {\n        arr.push(element.gameName);\n      });\n      return arr;\n    },\n    filterList: function filterList(index, list) {\n      if (index) {\n        return list[index].limits;\n      }\n\n      return list[0].limits;\n    },\n    changestatus: function changestatus(index) {\n      this.status = index;\n      this.list = this.filterList(index, this.originList);\n    },\n    handleClose: function handleClose() {\n      this.$emit('input', false);\n    },\n    filterGametype: function filterGametype(c) {\n      var arr = this.gametype || [];\n      var find = arr.find(function (item) {\n        return item.label === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    }\n  }\n};",null]}