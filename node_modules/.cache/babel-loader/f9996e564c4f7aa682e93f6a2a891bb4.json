{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\Breadcrumb\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\Breadcrumb\\index.vue","mtime":1615171047966},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pathToRegexp from 'path-to-regexp';\nimport { i18nRoute } from '@/utils/i18n';\nexport default {\n  data: function data() {\n    return {\n      levelList: null\n    };\n  },\n  watch: {\n    $route: function $route() {\n      this.getBreadcrumb();\n    }\n  },\n  created: function created() {\n    this.getBreadcrumb();\n  },\n  methods: {\n    i18nRoute: i18nRoute,\n    getBreadcrumb: function getBreadcrumb() {\n      // only show routes with meta.title\n      var matched = this.$route.matched.filter(function (item) {\n        return item.meta && item.meta.title;\n      });\n      this.levelList = matched.filter(function (item) {\n        return item.meta && item.meta.title && item.meta.breadcrumb !== false;\n      });\n    },\n    pathCompile: function pathCompile(path) {\n      // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\n      var params = this.$route.params;\n      var toPath = pathToRegexp.compile(path);\n      return toPath(params);\n    },\n    handleLink: function handleLink(item) {\n      var redirect = item.redirect,\n          path = item.path;\n\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n\n      this.$router.push(this.pathCompile(path));\n    }\n  }\n};",null]}