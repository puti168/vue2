{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\home\\components\\DashBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\home\\components\\DashBoard.vue","mtime":1616384580054},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dayjs from 'dayjs';\nimport echarts from 'echarts';\nimport { formatCurrency } from '@/utils';\nimport list from '@/mixins/list';\nimport { mapGetters } from 'vuex';\nimport chinaJson from 'echarts/map/json/china.json';\nvar start = dayjs().startOf('day').subtract(7, 'd').format('YYYY/MM/DD');\nvar end = dayjs().endOf('day').subtract(1, 'd').format('YYYY/MM/DD');\nexport default {\n  name: 'Dashboard',\n  mixins: [list],\n  props: {\n    recordType: {\n      type: Number,\n      default: 0\n    },\n    heatAnalyisData: {\n      type: Object,\n      default: function _default() {}\n    },\n    profitAnalysisData: {\n      type: Object,\n      default: function _default() {}\n    },\n    provinceAnalysisData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    systemAnalysisData: {\n      type: Array,\n      default: function _default() {\n        return [{\n          name: '网页',\n          value: 20\n        }, {\n          name: '手机网页',\n          value: 20\n        }, {\n          name: 'IOS',\n          value: 20\n        }, {\n          name: '安卓',\n          value: 20\n        }, {\n          name: '其他',\n          value: 20\n        }];\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var start1 = dayjs().startOf('day').valueOf();\n    var end1 = dayjs().endOf('day').valueOf();\n    return {\n      times: [start1, end1],\n      times2: [start1, end1],\n      btnTime: 0,\n      heatCountDown: 30,\n      profitCountDown: 30,\n      ProvinceCountDown: 30,\n      terminalCountDown: 30,\n      recordTypes: 1,\n      max: 480,\n      min: 9,\n      arr: [],\n      tableData: [{}],\n      maxSize4Pin: 100,\n      minSize4Pin: 20,\n      geoCoordMap: {\n        北京: [116.46, 39.92],\n        上海: [121.48, 31.22],\n        天津: [117.2, 39.13],\n        重庆: [107.51, 29.63],\n        河北: [114.48, 38.03],\n        山西: [112.53, 37.87],\n        辽宁: [123.38, 41.8],\n        吉林: [125.35, 43.88],\n        黑龙江: [126.63, 45.75],\n        浙江: [120.19, 30.26],\n        福建: [119.3, 26.08],\n        河南: [113.65, 34.76],\n        湖北: [114.31, 30.52],\n        湖南: [113, 28.21],\n        广东: [113.23, 23.16],\n        海南: [110.35, 20.02],\n        四川: [104.06, 30.67],\n        山东: [117.1582, 36.8701],\n        贵州: [106.71, 26.57],\n        云南: [102.73, 25.04],\n        江西: [115.89, 28.68],\n        陕西: [108.95, 34.27],\n        青海: [101.74, 36.56],\n        甘肃: [103.73, 36.03],\n        广西: [108.67, 23.68],\n        新疆: [87.68, 43.77],\n        内蒙古: [111.65, 40.82],\n        西藏: [91.11, 29.97],\n        宁夏: [106.27, 38.47],\n        台湾: [121.5, 25.14],\n        香港: [114.1, 22.2],\n        澳门: [113.33, 22.13],\n        安徽: [117.27, 31.86],\n        江苏: [118.78, 32.04]\n      },\n      scopeTime: [start, end],\n      gameHeatData: {\n        title: {\n          text: this.$t('home_totalline_components_dashboard_407')\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function formatter(params) {\n            var str = '';\n            params && params.forEach(function (element, index) {\n              if (index === 0) {\n                str = \"<div>\".concat(_this.$t('detailrecord.detailrecord_18'), \":\").concat(element.name, \" </div><div>\").concat(_this.getEnName(element.seriesName), \":\").concat(formatCurrency(element.data, false), \"</div>\");\n              } else {\n                str += \"<div>\".concat(_this.getEnName(element.seriesName), \":\").concat(formatCurrency(element.data, false), \"</div>\");\n              }\n            });\n            return str; // 最后返回拼接好的值\n          }\n        },\n        legend: {\n          data: [this.$t('home_totalline_components_dashboard_400'), this.$t('home_totalline_components_dashboard_408'), this.$t('home_totalline_components_dashboard_402')]\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: this.$t('home_totalline_components_dashboard_400'),\n          type: 'line',\n          smooth: false,\n          // 显示数值\n          itemStyle: {\n            normal: {\n              label: {\n                formatter: function formatter(params) {\n                  if (params.data !== 0) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              },\n              lineStyle: {\n                width: 2,\n                type: 'solid' // 'dotted'虚线 'solid'实线\n\n              }\n            }\n          },\n          data: []\n        }, {\n          name: this.$t('home_totalline_components_dashboard_408'),\n          type: 'line',\n          smooth: false,\n          // 关键点，为true是不支持虚线的，实线就用true\n          itemStyle: {\n            normal: {\n              label: {\n                position: 'bottom',\n                formatter: function formatter(params) {\n                  if (params.data !== 0) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              },\n              lineStyle: {\n                width: 2,\n                type: 'dotted' // 'dotted'虚线 'solid'实线\n\n              }\n            }\n          },\n          data: []\n        }, {\n          name: this.$t('home_totalline_components_dashboard_402'),\n          type: 'line',\n          smooth: false,\n          // 关键点，为true是不支持虚线的，实线就用true\n          itemStyle: {\n            normal: {\n              label: {\n                formatter: function formatter(params) {\n                  if (params.data !== 0) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              },\n              lineStyle: {\n                width: 2,\n                type: 'dashed' // 'dotted'虚线 'solid'实线\n\n              }\n            }\n          },\n          data: []\n        }]\n      },\n      other: {},\n      provinceData: {\n        backgroundColor: {\n          type: 'linear',\n          x: 0,\n          y: 0,\n          x2: 1,\n          y2: 1,\n          colorStops: [{\n            offset: 0,\n            color: '#FFFF' // 0% 处的颜色\n\n          }, {\n            offset: 1,\n            color: '#FFFF' // 100% 处的颜色\n\n          }],\n          globalCoord: false // 缺省为 false\n\n        },\n        title: {\n          top: 20,\n          text: '',\n          subtext: '',\n          x: 'center',\n          textStyle: {\n            color: '#ccc'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: function formatter(params) {\n            return params.name;\n          }\n        },\n        legend: {\n          orient: 'vertical',\n          y: 'bottom',\n          x: 'right',\n          data: ['pm2.5'],\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        visualMap: {\n          show: false,\n          min: 0,\n          max: 500,\n          left: 'left',\n          top: 'bottom',\n          text: ['高', '低'],\n          // 文本，默认为数值文本\n          calculable: true,\n          seriesIndex: [1],\n          inRange: {}\n        },\n        geo: {\n          map: 'china',\n          show: true,\n          roam: true,\n          label: {\n            normal: {\n              show: false\n            },\n            emphasis: {\n              show: false\n            }\n          },\n          itemStyle: {\n            normal: {\n              areaColor: '#3674C1',\n              borderColor: '#0a53e9',\n              // 线\n              shadowColor: '#092f8f',\n              // 外发光\n              shadowBlur: 20\n            },\n            emphasis: {\n              areaColor: '#0a2dae' // 悬浮区背景\n\n            }\n          }\n        },\n        series: [{\n          symbolSize: 5,\n          label: {\n            normal: {\n              formatter: '{b}',\n              position: 'right',\n              show: true\n            },\n            emphasis: {\n              show: true\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#FFBB45'\n            }\n          },\n          name: 'light',\n          type: 'scatter',\n          coordinateSystem: 'geo',\n          data: {}\n        }, {\n          type: 'map',\n          map: 'china',\n          geoIndex: 0,\n          aspectScale: 0.75,\n          // 长宽比\n          showLegendSymbol: false,\n          // 存在legend时显示\n          label: {\n            normal: {\n              show: false\n            },\n            emphasis: {\n              show: false,\n              textStyle: {\n                color: '#fff'\n              }\n            }\n          },\n          roam: true,\n          itemStyle: {\n            normal: {\n              areaColor: '#FFBB45',\n              borderColor: '#FFBB45'\n            },\n            emphasis: {\n              areaColor: '#FFBB45'\n            }\n          },\n          animation: false,\n          data: this.provinceAnalysisData\n        }, {\n          name: 'Top 3',\n          type: 'scatter',\n          coordinateSystem: 'geo',\n          symbol: 'pin',\n          symbolSize: [50, 50],\n          label: {\n            normal: {\n              show: true,\n              textStyle: {\n                color: '#fff',\n                fontSize: 9\n              },\n              formatter: function formatter(value) {\n                return value.data.value[2];\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#FFBB45' // 标志颜色\n\n            }\n          },\n          data: {},\n          showEffectOn: 'render',\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          hoverAnimation: true,\n          zlevel: 1\n        }, {\n          name: 'Top 4-10',\n          type: 'scatter',\n          coordinateSystem: 'geo',\n          symbol: 'pin',\n          symbolSize: [35, 35],\n          label: {\n            normal: {\n              show: true,\n              textStyle: {\n                color: '#FFBB45',\n                fontSize: 9\n              },\n              formatter: function formatter(value) {\n                return value.data.value[2];\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#FFBB45' // 标志颜色\n\n            }\n          },\n          data: {},\n          showEffectOn: 'render',\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          hoverAnimation: true,\n          zlevel: 1\n        }, {\n          name: 'others',\n          type: 'scatter',\n          coordinateSystem: 'geo',\n          symbol: 'pin',\n          symbolSize: [25, 25],\n          label: {\n            normal: {\n              show: true,\n              textStyle: {\n                color: '#fff',\n                fontSize: 9\n              },\n              formatter: function formatter(value) {\n                return value.data.value[2];\n              }\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#FFBB45' // 标志颜色\n\n            }\n          },\n          data: {},\n          showEffectOn: 'render',\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          hoverAnimation: true,\n          zlevel: 1\n        }]\n      },\n      profitData: {\n        title: {\n          text: this.$t('home_totalline_components_dashboard_407')\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function formatter(params) {\n            var str = '';\n            params && params.forEach(function (element, index) {\n              if (index === 0) {\n                str = \"<div>\".concat(_this.$t('detailrecord.detailrecord_18'), \":\").concat(element.name, \" </div><div>\").concat(_this.getEnName(element.seriesName), \":\").concat(formatCurrency(element.data, false), \"</div>\");\n              } else {\n                str += \"<div>\".concat(_this.getEnName(element.seriesName), \":\").concat(formatCurrency(element.data, false), \"</div>\");\n              }\n            });\n            return str; // 最后返回拼接好的值\n          }\n        },\n        legend: {\n          data: [this.$t('home_totalline_components_dashboard_405'), this.$t('home_totalline_components_dashboard_409')]\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: this.$t('home_totalline_components_dashboard_405'),\n          type: 'line',\n          stack: this.$t('home_totalline_components_dashboard_405'),\n          // 显示数值\n          itemStyle: {\n            normal: {\n              label: {\n                position: 'bottom',\n                formatter: function formatter(params) {\n                  if (params.data !== 0) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              }\n            }\n          },\n          data: []\n        }, {\n          name: this.$t('home_totalline_components_dashboard_409'),\n          type: 'line',\n          smooth: false,\n          // 关键点，为true是不支持虚线的，实线就用true\n          stack: this.$t('home_totalline_components_dashboard_409'),\n          itemStyle: {\n            normal: {\n              label: {\n                formatter: function formatter(params) {\n                  if (params.data !== 0) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              },\n              lineStyle: {\n                width: 2,\n                type: 'dotted' // 'dotted'虚线 'solid'实线\n\n              }\n            }\n          },\n          data: []\n        }]\n      },\n      systemData: {\n        color: ['#F96365', '#FFBB45', '#5797E6', '#62EFFC', '#9B85F9'],\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b} : {c} ({d}%)'\n        },\n        toolbox: {\n          show: true\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          align: 'right',\n          textStyle: {\n            color: '#8C8C8C'\n          },\n          height: 450\n        },\n        series: [{\n          name: '',\n          type: 'pie',\n          radius: [0, 150],\n          right: 200,\n          data: [],\n          label: {\n            formatter: '{b}：{d}%'\n          }\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['userInfo'])),\n  watch: {\n    recordType: function recordType(val) {\n      this.recordTypes = val;\n    },\n    heatAnalyisData: function heatAnalyisData(val) {\n      this.gameHeatData.xAxis['data'] = val.xaxis.data;\n      var series = [];\n      series[0] = _objectSpread(_objectSpread(_objectSpread({}, this.gameHeatData.series[0]), val.series[0]), {}, {\n        stack: this.$t('home_totalline_components_dashboard_410')\n      });\n      series[1] = _objectSpread(_objectSpread(_objectSpread({}, this.gameHeatData.series[1]), val.series[1]), {}, {\n        stack: this.$t('home_totalline_components_dashboard_411')\n      });\n\n      if (this.recordTypes === 0) {\n        series[2] = _objectSpread(_objectSpread({}, val.series[2]), {}, {\n          stack: this.$t('home_totalline_components_dashboard_412'),\n          name: '试玩上限',\n          type: 'line',\n          smooth: false,\n          // 关键点，为true是不支持虚线的，实线就用true\n          itemStyle: {\n            normal: {\n              label: {\n                formatter: function formatter(params) {\n                  if (params.data !== 0 && params.dataIndex === 23) {\n                    return formatCurrency(params.data, false);\n                  }\n\n                  return '';\n                }\n              },\n              lineStyle: {\n                width: 2,\n                type: 'dashed' // 'dotted'虚线 'solid'实线\n\n              }\n            }\n          }\n        });\n      }\n\n      this.gameHeatData = _objectSpread(_objectSpread({}, this.gameHeatData), {}, {\n        series: series\n      });\n    },\n    profitAnalysisData: function profitAnalysisData(val) {\n      this.profitData.xAxis['data'] = val.xaxis.data;\n      this.profitData.series[0] = _objectSpread(_objectSpread({}, this.profitData.series[0]), val.series[0]);\n      this.profitData.series[1] = _objectSpread(_objectSpread({}, this.profitData.series[1]), val.series[1]);\n    },\n    provinceAnalysisData: function provinceAnalysisData(val) {\n      var _this2 = this;\n\n      this.provinceAnalysisData.forEach(function (item, index) {\n        if (item.name === '其它') {\n          _this2.other = item;\n\n          _this2.provinceAnalysisData.splice(index, 1);\n        }\n\n        _this2.arr = _this2.provinceAnalysisData;\n      });\n      this.provinceData.series[0].data = this.convertData(this.provinceAnalysisData);\n      var arr1 = [];\n      var arr2 = [];\n      var arr3 = [];\n      arr1 = this.provinceAnalysisData.slice(0, 3);\n      arr2 = this.provinceAnalysisData.slice(3, 9);\n      arr3 = this.provinceAnalysisData.slice(9);\n      this.provinceData.series[2].data = this.convertData(arr1);\n      this.provinceData.series[3].data = this.convertData(arr2);\n      this.provinceData.series[4].data = this.convertData(arr3);\n    },\n    systemAnalysisData: function systemAnalysisData(val) {\n      var _this3 = this;\n\n      console.log(val);\n      this.systemData.series[0].data = JSON.parse(JSON.stringify(val));\n      this.tableData = [{}];\n      val.forEach(function (item, index) {\n        switch (item.name) {\n          case '网页':\n            _this3.tableData[0].web = item.value;\n            return;\n\n          case '手机网页':\n            _this3.tableData[0].h5 = item.value;\n            return;\n\n          case 'Ios':\n            _this3.tableData[0].ios = item.value;\n            return;\n\n          case 'Android':\n            _this3.tableData[0].android = item.value;\n            return;\n\n          case '其他设备':\n            _this3.tableData[0].other = item.value;\n            return;\n        }\n      });\n      this.$set(this.tableData);\n    }\n  },\n  mounted: function mounted() {\n    echarts.registerMap('china', chinaJson);\n    window.addEventListener('resize', this.resizeHandle);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('resize', this.resizeHandle);\n  },\n  methods: {\n    resizeHandle: function resizeHandle() {\n      this.$refs.gameEchart && this.$refs.gameEchart.resize();\n      this.$refs.profitEchart && this.$refs.profitEchart.resize();\n      this.$refs.systemEchart && this.$refs.systemEchart.resize();\n      this.$refs.provinceEchart && this.$refs.provinceEchart.resize();\n    },\n    radioChange: function radioChange(value) {\n      this.$emit('gameHeatChange', value);\n    },\n    convertData: function convertData(data) {\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var geoCoord = this.geoCoordMap[data[i].name];\n\n        if (geoCoord) {\n          res.push({\n            name: data[i].name,\n            value: geoCoord.concat(data[i].value)\n          });\n        }\n      }\n\n      return res;\n    },\n    reset: function reset() {\n      var start1 = dayjs().startOf('day').valueOf();\n      var end1 = dayjs().endOf('day').valueOf();\n      this.times = [start1, end1];\n      this.times2 = [start1, end1];\n    },\n    // 省份日期改变\n    timeChange: function timeChange(value) {\n      this.$emit('Province', this.times);\n    },\n    timeChange2: function timeChange2(value) {\n      this.$emit('terminal', this.times2);\n    },\n    // 刷新倒计时\n    refreshCountDown: function refreshCountDown(type) {\n      var _this4 = this;\n\n      var time = setInterval(function () {\n        _this4[type] = _this4[type] - 1;\n\n        if (_this4[type] === 0) {\n          clearInterval(time);\n          _this4[type] = 30;\n        }\n      }, 1000);\n    },\n    // 刷新\n    onRefresh: function onRefresh(value) {\n      if (this.btnTime) {\n        var now = +new Date();\n        if (now - this.btnTime < 1000) return;\n      }\n\n      this.btnTime = +new Date();\n\n      if (value === 1) {\n        this.$emit('gameHeatAnalyis');\n        this.refreshCountDown('heatCountDown');\n      } else if (value === 2) {\n        this.$emit('profitAnalysis');\n        this.refreshCountDown('profitCountDown');\n      } else if (value === 3) {\n        this.$emit('Province', this.times);\n        this.refreshCountDown('ProvinceCountDown');\n      } else if (value === 4) {\n        this.$emit('terminal', this.times2);\n        this.refreshCountDown('terminalCountDown');\n      }\n    },\n    getEnName: function getEnName(name) {\n      if (name.includes('在线人数')) {\n        return this.$t('home_totalline_components_dashboard_400');\n      }\n\n      if (name.includes('试玩上限')) {\n        return this.$t('home_totalline_components_dashboard_402');\n      }\n\n      if (name.includes('前七天在线均值')) {\n        return this.$t('home_totalline_components_dashboard_408');\n      }\n\n      if (name.includes('前7天盈利均值')) {\n        return this.$t('home_totalline_components_dashboard_409');\n      }\n\n      if (name.includes('盈利')) {\n        return this.$t('home_totalline_components_dashboard_405');\n      }\n\n      return name;\n    }\n  }\n};",null]}