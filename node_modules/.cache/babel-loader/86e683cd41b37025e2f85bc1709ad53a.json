{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\report\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\report\\index.vue","mtime":1617695097418},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport { colorNum as _colorNum } from '@/utils';\nimport dayjs from 'dayjs';\nimport { routerNames } from '@/utils/consts';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nexport default {\n  name: routerNames.membersreport,\n  components: {\n    SelectAgentTree: SelectAgentTree\n  },\n  mixins: [list],\n  data: function data() {\n    var end = dayjs().subtract(1, 'd').endOf('day').valueOf();\n    var start = dayjs().startOf('day').subtract(1, 'd').valueOf();\n    return {\n      hadSearch: false,\n      loading: false,\n      canDownload: true,\n      canNoticeTotal: true,\n      canNoticeTime: true,\n      amountData: {},\n      form: {\n        time: [start, end],\n        playerLoginName: '',\n        minBetAmount: undefined,\n        maxBetAmount: undefined,\n        minPayoutAmount: undefined,\n        maxPayoutAmount: undefined,\n        minValidBetAmount: undefined,\n        maxValidBetAmount: undefined,\n        minNetAmount: undefined,\n        maxNetAmount: undefined,\n        minBetCount: undefined,\n        maxBetCount: undefined,\n        orderProp: 'betAmount',\n        order: 'descending'\n      },\n      defaultSort: {\n        prop: 'betAmount',\n        order: 'descending'\n      },\n      summary: {}\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['name', 'userInfo'])),\n  methods: {\n    loadData: function loadData() {\n      var _this = this;\n\n      this.loading = true;\n      var end = dayjs().subtract(1, 'd').endOf('day').valueOf();\n      var start = dayjs().startOf('day').subtract(1, 'd').valueOf();\n      var initData = {\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        startReportTime: start,\n        endReportTime: end,\n        orderProp: this.form.orderProp,\n        order: this.form.order\n      };\n      var requestData = this.hadSearch ? {\n        searchAgentId: this.form.agentId,\n        playerLoginName: this.form.playerLoginName,\n        startReportTime: this.form.time ? this.form.time[0] : '',\n        endReportTime: this.form.time ? this.form.time[1] : '',\n        minBetAmount: this.form.minBetAmount,\n        maxBetAmount: this.form.maxBetAmount,\n        minPayoutAmount: this.form.minPayoutAmount,\n        maxPayoutAmount: this.form.maxPayoutAmount,\n        minValidBetAmount: this.form.minValidBetAmount,\n        maxValidBetAmount: this.form.maxValidBetAmount,\n        minNetAmount: this.form.minNetAmount,\n        maxNetAmount: this.form.maxNetAmount,\n        minBetCount: this.form.minBetCount,\n        maxBetCount: this.form.maxBetCount\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.memberPlayerReport(form).then(function (_) {\n        _this.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this.list = data.record || [];\n          _this.total = data.totalRecord;\n          _this.summary = data.summary;\n        }\n      }).catch(function () {\n        _this.loading = false;\n      });\n    },\n    getSummaries: function getSummaries(param) {\n      var _this2 = this;\n\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = _this2.$t('members_report_index_723');\n          return;\n        }\n\n        if (index === 1) {\n          sums[index] = _this2.$t('new_15') + _this2.summary['totalBetPlayer'];\n          return;\n        }\n\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        }) && (column.property === 'betCount' || column.property === 'betAmount' || column.property === 'netAmount' || column.property === 'cumulativePayout' || column.property === 'payoutAmount' || column.property === 'activityAmount' || column.property === 'gainAmount' || column.property === 'validBetAmount')) {\n          sums[index] = _this2.summary[column.property];\n        }\n      });\n      return sums;\n    },\n    colorNum: function colorNum(val) {\n      return _colorNum(val);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      if (this.loading) {\n        return;\n      }\n\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var end = dayjs().subtract(1, 'd').endOf('day').valueOf();\n      var start = dayjs().startOf('day').subtract(1, 'd').valueOf();\n      this.form = {\n        time: [start, end],\n        playerLoginName: '',\n        minBetAmount: undefined,\n        maxBetAmount: undefined,\n        minPayoutAmount: undefined,\n        maxPayoutAmount: undefined,\n        minValidBetAmount: undefined,\n        maxValidBetAmount: undefined,\n        minNetAmount: undefined,\n        maxNetAmount: undefined,\n        minBetCount: undefined,\n        maxBetCount: undefined,\n        orderProp: 'betAmount',\n        order: 'descending'\n      };\n      this.hadSearch = false;\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    exportCsv: function exportCsv() {\n      var _this3 = this;\n\n      if (Number(this.total) > 20000) {\n        if (this.canNoticeTotal) {\n          this.$message({\n            message: this.$t('new_2'),\n            type: 'error'\n          });\n          this.canNoticeTotal = false;\n          setTimeout(function () {\n            _this3.canNoticeTotal = true;\n          }, 3000);\n        }\n\n        return;\n      }\n\n      if (!this.canDownload) {\n        if (this.canNoticeTime) {\n          this.$message({\n            message: this.$t('new_1'),\n            type: 'error'\n          });\n          this.canNoticeTime = false;\n          setTimeout(function () {\n            _this3.canNoticeTime = true;\n          }, 3000);\n        }\n\n        return;\n      }\n\n      this.canDownload = false;\n      setTimeout(function () {\n        _this3.canDownload = true;\n      }, 60000);\n      var params = {\n        searchAgentId: this.form.agentId,\n        playerLoginName: this.form.playerLoginName,\n        minBetAmount: this.form.minBetAmount,\n        maxBetAmount: this.form.maxBetAmount,\n        minPayoutAmount: this.form.minPayoutAmount,\n        maxPayoutAmount: this.form.maxPayoutAmount,\n        minValidBetAmount: this.form.minValidBetAmount,\n        maxValidBetAmount: this.form.maxValidBetAmount,\n        minNetAmount: this.form.minNetAmount,\n        maxNetAmount: this.form.maxNetAmount,\n        minBetCount: this.form.minBetCount,\n        maxBetCount: this.form.maxBetCount,\n        startReportTime: this.form.time ? this.form.time[0] : '',\n        endReportTime: this.form.time ? this.form.time[1] : '',\n        orderProp: this.form.orderProp,\n        order: this.form.order\n      };\n      var startday = dayjs(params.startReportTime).get('date');\n      var startmonth = dayjs(params.startReportTime).get('month') + 1;\n      var endmonth = dayjs(params.endReportTime).get('month') + 1;\n      var endday = dayjs(params.endReportTime).get('date');\n      var title = this.$t('route.membersreport') + '(' + startmonth + this.$t('merchant_dailyrateaccount_index_802') + startday + this.$t('merchant_dailyrateaccount_index_803') + '-' + endmonth + this.$t('merchant_dailyrateaccount_index_802') + endday + this.$t('merchant_dailyrateaccount_index_803') + ')';\n      localStorage.setItem('title', title);\n      this.$api.reportExport(params).then(function (res) {}).catch(function () {\n        _this3.loading = false;\n      });\n    },\n    sortChange: function sortChange(val) {\n      var prop = val.prop,\n          order = val.order;\n\n      if (this.loading) {\n        return;\n      }\n\n      if (order === null) {\n        this.form.orderProp === 'descending' ? val.order = 'descending' : val.order = 'ascending';\n        val.column.order = val.order;\n        this.form.orderProp = prop;\n        this.form.order = val.order;\n        this.loadData();\n        return val;\n      }\n\n      this.form.orderProp = prop;\n      this.form.order = order;\n      this.defaultSort = {\n        prop: prop,\n        order: order || 'descending'\n      };\n      this.loadData();\n      return val;\n    },\n    showDailyDetail: function showDailyDetail(row) {\n      var _this4 = this;\n\n      var returnQuery = {\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize,\n        time: [this.form.time[0], this.form.time[1]],\n        searchAgentId: this.form.agentId,\n        playerLoginName: this.form.playerLoginNameNoMask,\n        orderProp: this.form.orderProp,\n        order: this.form.order\n      };\n      this.$store.dispatch('tagsView/delView', {\n        name: routerNames.reportDaily\n      });\n      this.$nextTick(function () {\n        var targetUrl = '/members/reportDaily';\n\n        _this4.$router.push(\"\".concat(targetUrl));\n\n        localStorage.setItem('returnQuery', JSON.stringify(returnQuery));\n        localStorage.setItem('agentId', row.agentId);\n        localStorage.setItem('playerLoginName', row.playerLoginNameNoMask);\n        localStorage.setItem('time', JSON.stringify(_this4.form.time));\n      });\n    }\n  }\n};",null]}