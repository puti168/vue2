{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\rolemanage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\rolemanage\\index.vue","mtime":1617695097407},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport EditRole from \"./components/EditRole\";\nimport RoleDetail from \"./components/RoleDetail\";\nimport Modal from '@/components/Modal';\nimport { routerNames } from '@/utils/consts';\nimport { message } from '@/utils/message';\nimport { i18nRoute } from '@/utils/i18n';\nexport default {\n  name: routerNames.systemRole,\n  components: {\n    EditRole: EditRole,\n    Modal: Modal,\n    RoleDetail: RoleDetail\n  },\n  mixins: [list],\n  data: function data() {\n    return {\n      curOperation: '',\n      hadSearch: false,\n      loading: false,\n      deleteDialog: false,\n      editType: 0,\n      // 新建为0 ,编辑为1\n      drawer: false,\n      detailDrawer: false,\n      currentPage: 1,\n      form: {\n        roleName: '',\n        status: -1\n      },\n      roleData: {},\n      permissions: [],\n      assignedPermissions: [],\n      dialogVisible: false,\n      currentData: {},\n      currentIndex: -1,\n      remark: '',\n      list: [],\n      showAccount: false,\n      relatives: [],\n      // 关联的账号\n      detailPermissions: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['name'])), mapGetters(['buttonPermissions'])), {}, {\n    relativesStr: function relativesStr() {\n      var str = '';\n\n      if (this.relatives.length === 0) {\n        str = this.$t('authoritymanagement_rolemanage_index_282');\n      } else {\n        str = this.relatives.join('，');\n      }\n\n      return str;\n    }\n  }),\n  mounted: function mounted() {\n    document.addEventListener('click', this.showRelative);\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('click', this.showRelative);\n  },\n  methods: {\n    showRelative: function showRelative(e) {\n      if (e.target.innerText && e.target.innerText.replace(' ', '') !== this.$t('authoritymanagement_rolemanage_index_1') && e.target.innerText.includes(['View', 'linked', 'accounts'])) {\n        this.showAccount = false;\n      }\n    },\n    checkRelative: function checkRelative(e, row) {\n      var _this = this;\n\n      this.showAccount = !this.showAccount;\n\n      if (this.currentData.id !== row.id) {\n        this.currentData = _objectSpread({}, row);\n        this.showAccount = true;\n      }\n\n      if (this.showAccount) {\n        this.$api.getAccList({\n          roleId: row.id\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this.relatives = res.data || [];\n          }\n        });\n        this.$nextTick(function () {\n          var scrollTop = _this.getScrollOffset().y;\n\n          var top = e.target.getBoundingClientRect().top + scrollTop + 18;\n          var accountDom = _this.$refs.account;\n          accountDom.style.display = 'block';\n          accountDom.style.top = top + 'px';\n        });\n      }\n    },\n    getScrollOffset: function getScrollOffset() {\n      if (window.pageXOffset) {\n        return {\n          x: window.pageXOffset,\n          y: window.pageYOffset\n        };\n      } else {\n        return {\n          x: document.body.scrollLeft + document.documentElement.scrollLeft,\n          y: document.body.scrollTop + document.documentElement.scrollTop\n        };\n      }\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      this.loading = true;\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        roleName: this.form.roleName,\n        status: this.form.status\n      };\n      this.$api.merchantRoleList(initData).then(function (_) {\n        _this2.loading = false;\n        var data = _.data;\n        _this2.total = data.totalRecord;\n        _this2.list = data.roleList;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    // 获取角色的所有可操作权限\n    loadPermissions: function loadPermissions() {\n      var _this3 = this;\n\n      this.$api.merchantPermissions().then(function (_) {\n        if (_.code === 200) {\n          _this3.permissions = _.data || []; // 增加查看权限，相当于菜单，这个是前端增加的，为了这个tree组件兼容，提交的时候需要过滤掉id为'list'的值\n\n          _this3.permissions.forEach(function (element) {\n            if (element.children && element.children.length !== 0) {\n              element.children.forEach(function (childElement) {\n                childElement.children = childElement.children || [];\n                childElement.children.unshift({\n                  children: null,\n                  id: 'list' + childElement.id,\n                  isExist: null,\n                  parentId: childElement.id,\n                  path: childElement,\n                  permissionName: 'view',\n                  type: 1\n                });\n              });\n            }\n          });\n\n          _this3.loopPermission(_this3.permissions);\n        } else {\n          _this3.$message({\n            type: 'error',\n            message: _this3.$t('systemmanagement.systemmanagement_111')\n          });\n        }\n      });\n    },\n    loopPermission: function loopPermission(datas) {\n      var _this4 = this;\n\n      datas.forEach(function (i) {\n        i.permissionName = i18nRoute(i.permissionName);\n\n        if (i.children && i.children.length !== 0) {\n          _this4.loopPermission(i.children);\n        }\n      });\n    },\n    switchChange: function switchChange(val, row) {\n      var _this5 = this;\n\n      var params = {\n        roleName: row.roleName,\n        id: row.id,\n        status: val ? '1' : '0',\n        systemType: row.systemType\n      };\n      this.$api.merchantModifyStatus(params).then(function (res) {\n        if (res.code === 200) {\n          if (res.data === 1) {\n            _this5.dialogVisible = true;\n            _this5.currentData = _objectSpread({}, row);\n          } else {\n            var index = _this5.list.findIndex(function (val) {\n              return val.id === row.id;\n            });\n\n            _this5.list[index].status = params.status;\n            var statusText = params.status === '1' ? _this5.$t('authoritymanagement_rolemanage_index_269') : _this5.$t('authoritymanagement_rolemanage_index_268');\n            return message({\n              message: _this5.$t('authoritymanagement_rolemanage_index_284', [row.roleName, statusText]),\n              type: 'success'\n            });\n          }\n        }\n      });\n    },\n    updateStatus: function updateStatus(form) {\n      return this.$api.merchantModifyStatus(form);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.loadData();\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      this.$api.systemDeleteRole({\n        id: this.currentData.id,\n        roleName: this.currentData.roleName,\n        remark: this.remark || ''\n      }).then(function (_) {\n        _this6.dialogVisible = false;\n        _this6.deleteDialog = false;\n\n        _this6.$message({\n          message: _this6.$t('systemmanagement.systemmanagement_73'),\n          type: 'success'\n        });\n\n        _this6.loadData();\n      });\n    },\n    handleCancle: function handleCancle() {\n      this.dialogVisible = false;\n      this.curOperation = 'cancle';\n    },\n    onClosed: function onClosed() {\n      if (this.deleteDialog) {\n        this.deleteDialog = false;\n      } else {\n        this.remark = '';\n\n        if (this.curOperation === 'cancle') {\n          this.currentData.switchStatus = this.currentData.status === '1';\n          this.list.splice(this.currentIndex, 1, this.currentData);\n        }\n      }\n    },\n    handleSure: function handleSure() {\n      var _this7 = this;\n\n      if (this.deleteDialog) {\n        this.handleDelete();\n      } else {\n        this.updateStatus({\n          roleName: this.currentData.roleName,\n          id: this.currentData.id,\n          status: this.currentData.switchStatus ? 1 : 0,\n          remark: this.remark || '',\n          systemType: this.currentData.systemType\n        }).then(function (_) {\n          if (_.code === 200) {\n            _this7.dialogVisible = false;\n            _this7.curOperation = 'sure';\n\n            _this7.$message({\n              message: _this7.$t('systemmanagement.systemmanagement_39'),\n              type: 'success'\n            });\n\n            _this7.loadData();\n          }\n        });\n      }\n    },\n    handleReset: function handleReset() {\n      this.form = {\n        roleName: '',\n        status: -1\n      };\n      this.pageIndex = 1;\n      this.hadSearch = false;\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    editRow: function editRow(index, row) {\n      var _this8 = this;\n\n      this.loadPermissions();\n      this.editType = 1;\n      this.roleData = _objectSpread({}, row);\n      this.drawer = true;\n      this.$api.merchantRoleDetail({\n        id: row.id\n      }).then(function (res) {\n        if (res.code === 200) {\n          var currentPermissions = [];\n          res.data.assignedPermissions && res.data.assignedPermissions.forEach(function (element) {\n            if (element.isExist === '1' && element.type !== '0') {\n              currentPermissions.push(element.id);\n            } else if (element.isExist === '1' && element.type === '0') {\n              currentPermissions.push(\"list\".concat(element.id));\n            }\n          });\n          _this8.assignedPermissions = currentPermissions;\n        }\n      });\n    },\n    detailRow: function detailRow(index, row) {\n      var _this9 = this;\n\n      this.editType = 1;\n      this.roleData = _objectSpread({}, row);\n      this.detailDrawer = true;\n      this.$api.getRoleDetail({\n        searchId: row.id\n      }).then(function (res) {\n        if (res.code === 200) {\n          _this9.detailPermissions = res.data || []; // 增加查看权限，相当于菜单，这个是前端增加的，为了这个tree组件兼容，提交的时候需要过滤掉id为'list'的值\n\n          _this9.detailPermissions.forEach(function (element) {\n            if (element.children && element.children.length !== 0) {\n              element.children.forEach(function (childElement) {\n                childElement.children = childElement.children || [];\n                childElement.children.unshift({\n                  children: null,\n                  id: 'list' + childElement.id,\n                  isExist: null,\n                  parentId: childElement.id,\n                  path: childElement,\n                  permissionName: 'view',\n                  type: 1\n                });\n              });\n            }\n          });\n\n          _this9.loopPermission(_this9.detailPermissions);\n        } else {\n          _this9.$message({\n            type: 'error',\n            message: _this9.$t('systemmanagement.systemmanagement_111')\n          });\n        }\n      });\n    },\n    deleteRow: function deleteRow(index, row, list) {\n      this.currentData = _objectSpread({}, row);\n      this.dialogVisible = true;\n      this.deleteDialog = true;\n    },\n    handleNewRole: function handleNewRole() {\n      this.loadPermissions();\n      this.editType = 0;\n      this.roleData = {\n        id: '',\n        roleName: '',\n        remark: ''\n      };\n      this.assignedPermissions = [];\n      this.drawer = true;\n    },\n    checkHasPermissions: function checkHasPermissions() {\n      if (!this.permissions || this.permissions.length === 0) {\n        this.$message.error(this.$t('systemmanagement.systemmanagement_116'));\n        return false;\n      }\n\n      return true;\n    },\n    editCallBack: function editCallBack() {\n      this.loadData();\n    },\n    closeEdit: function closeEdit() {\n      this.drawer = false;\n    },\n    closeDetail: function closeDetail() {\n      this.detailDrawer = false;\n    }\n  }\n};",null]}