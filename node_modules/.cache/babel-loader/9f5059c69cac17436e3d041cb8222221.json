{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\beautyGirlChange\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\beautyGirlChange\\index.vue","mtime":1616384580124},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport list from '@/mixins/list';\nimport { mapGetters } from 'vuex';\nimport dayjs from 'dayjs';\nimport { routerNames } from '@/utils/consts';\nimport router from '@/router';\nimport downloadSure from '@/utils/common/downloadSure';\nimport Cookies from 'js-cookie';\nexport default {\n  name: routerNames.membersaccounttransaction,\n  mixins: [list],\n  data: function data() {\n    var end = dayjs().endOf('day');\n    var start = dayjs().startOf('day');\n    return {\n      hadSearch: false,\n      loading: false,\n      checkAll: true,\n      isIndeterminate: false,\n      form: {\n        reasonKey: '',\n        playerLoginName: '',\n        nickName: '',\n        agentName: '',\n        time: [+start, +end],\n        tranType: this.$store.state.user.globalDics && this.$store.state.user.globalDics.trantype.map(function (val) {\n          return val.value;\n        }),\n        agentId: '',\n        minAmount: '',\n        maxAmount: ''\n      },\n      amountData: {},\n      prevIndex: 1,\n      summary: '',\n      hasNode: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['globalDics'])), {}, {\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: [{\n          text: this.$t('members_accounttransaction_index_501'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('members_accounttransaction_index_502'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day').subtract(1, 'd');\n            var start = dayjs().startOf('day').subtract(1, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('members_accounttransaction_index_503'),\n          onClick: function onClick(picker) {\n            var start, end;\n            var weekNum = dayjs().day();\n\n            if (weekNum === 0) {\n              end = dayjs().endOf('day');\n              start = dayjs().subtract(1, 'd').startOf('week').startOf('day').add(1, 'd');\n            } else {\n              end = dayjs().endOf('day');\n              start = dayjs().startOf('day').startOf('week').add(1, 'd');\n            }\n\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('members_accounttransaction_index_504'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('month');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }]\n      };\n    },\n    trantype: function trantype() {\n      var types = this.globalDics.trantype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    }\n  }),\n  activated: function activated() {\n    var _this2 = this;\n\n    window.clearInterval(window.bbbtimer);\n    window.bbbtimer = null;\n\n    if (!window.aaatimer) {\n      window.aaatimer = window.setInterval(function () {\n        _this2.summary && _this2.addTotalAmount();\n      }, 800);\n    }\n  },\n  destroyed: function destroyed() {\n    window.clearInterval(window.aaatimer);\n    window.aaatimer = null;\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    window.clearInterval(window.aaatimer);\n    window.aaatimer = null;\n    next();\n  },\n  methods: {\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    loadData: function loadData() {\n      this.list = [{\n        playerLoginName: 'ZB1234',\n        nickName: 'XXX',\n        tranType: this.$t('beautygirlchange_index_7'),\n        transactionNo: 'YBZR201910250000000001',\n        girlAccount: 'ZB1234',\n        girlName: 'ZB1234',\n        preBalance: '23333333',\n        amount: '122222',\n        afterBalance: '666666',\n        transactionTime: '2019-10-25 10:59:21',\n        remark: this.$t('beautygirlchange_index_8'),\n        roundNo: 'G101119A2401B',\n        result: this.$t('beautygirlchange_index_9')\n      }];\n      return false; // this.loading = true\n      // if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n      // \tconst query = this.$route.query || {}\n      // \tthis.form.playerLoginName = query.playerLoginName\n      // \trouter.push(this.$route.path)\n      // }\n      // const initData = {\n      // \tpageSize: this.pageSize,\n      // \tpageIndex: this.pageIndex,\n      // \tstartTransactionTime: this.form.time[0],\n      // \tendTransactionTime: this.form.time[1],\n      // \tplayerLoginName: this.form.playerLoginName,\n      // \ttranType: this.form.tranType.join(),\n      // \treasonKey: this.form.reasonKey,\n      // \tminAmount: this.form.minAmount,\n      // \tmaxAmount: this.form.maxAmount,\n      // }\n      // const requestData = this.hadSearch\n      // \t? {\n      // \t\t\tnickName: this.form.nickName,\n      // \t\t\tsearchAgentId: this.form.agentId,\n      // \t  }\n      // \t: {}\n      // const form = {\n      // \t...initData,\n      // \t...requestData,\n      // }\n      // this.$api\n      // \t.memberQueryAccountRecord(form)\n      // \t.then((_) => {\n      // \t\tthis.loading = false\n      // \t\tconst data = _.data\n      // \t\tthis.list = [\n      // \t\t\t{\n      // \t\t\t\ttransactionNo: 'YBZR201910250000000001',\n      // \t\t\t\tgirlAccount: 'ZB1234',\n      // \t\t\t\tgirlName: 'ZB1234',\n      // \t\t\t\ttranType: '派彩',\n      // \t\t\t\tpreBalance: '23333333',\n      // \t\t\t\tamount: '122222',\n      // \t\t\t\tafterBalance: '666666',\n      // \t\t\t\ttransactionTime: '2019-10-25 10:59:21',\n      // \t\t\t\tremark: '经典百家乐YYY_局号GYYY20107004',\n      // \t\t\t},\n      // \t\t]\n      // \t\tthis.total = data.totalRecord\n      // \t\tthis.summary = data.summary\n      // \t\tthis.$nextTick(() => {\n      // \t\t\tthis.addTotalAmount()\n      // \t\t})\n      // \t})\n      // \t.catch(() => {\n      // \t\tthis.pageIndex = this.prevIndex\n      // \t\tthis.list = []\n      // \t\tthis.total = 0\n      // \t\tthis.loading = false\n      // \t})\n    },\n    addTotalAmount: function addTotalAmount() {\n      var totalSpan = document.querySelector('.total-span');\n      var pageNode = document.querySelector('.el-pagination');\n      var prevNode = document.querySelector('.el-pagination__total');\n      var newNode = document.createElement('span');\n\n      if (!totalSpan) {\n        newNode.innerText = this.$t('members_accounttransaction_index_506', [this.summary]);\n        newNode.style.margin = '0 15px';\n        newNode.style.fontWeight = '400';\n        newNode.className = 'total-span';\n        pageNode && pageNode.insertBefore(newNode, prevNode);\n      } else {\n        var str = this.$t('members_accounttransaction_index_506', [this.summary]);\n        totalSpan.innerText = str;\n      }\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n      this.loadData();\n    },\n    handleCheckedTypesChange: function handleCheckedTypesChange(value) {\n      var checkedCount = value.length;\n      this.checkAll = checkedCount === this.trantype.length;\n    },\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      var checkedArr = val ? _toConsumableArray(this.trantype.map(function (item) {\n        return item.value;\n      })) : [];\n      this.form.tranType = checkedArr;\n      this.isIndeterminate = false;\n    },\n    filterTranType: function filterTranType(c) {\n      var arr = this.trantype || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    handleReset: function handleReset() {\n      var _this3 = this;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        router.push(this.$route.path, function () {\n          _this3.resetCommon();\n        });\n      } else {\n        this.resetCommon();\n      }\n    },\n    resetCommon: function resetCommon() {\n      var end = dayjs().endOf('day');\n      var start = dayjs().startOf('day');\n      this.isIndeterminate = false;\n      this.checkAll = true;\n      this.hadSearch = false;\n      this.form = {\n        reasonKey: '',\n        nickName: '',\n        playerLoginName: '',\n        agentName: '',\n        time: [+start, +end],\n        minAmount: '',\n        maxAmount: '',\n        tranType: this.$store.state.user.globalDics && this.$store.state.user.globalDics.trantype.map(function (val) {\n          return val.value;\n        })\n      };\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    exportCsv: function exportCsv() {\n      var params = {\n        startTransactionTime: this.form.time[0],\n        endTransactionTime: this.form.time[1],\n        playerLoginName: this.form.playerLoginName,\n        nickName: this.form.nickName,\n        searchAgentId: this.form.agentId,\n        tranType: this.form.tranType.join()\n      };\n      downloadSure(this.$api, 'queryAccountRecordCSV', params, this.$t('members_accounttransaction_index_507'));\n    }\n  }\n};",null]}