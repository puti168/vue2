{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\merchant\\limitManage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\merchant\\limitManage\\index.vue","mtime":1617695097424},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport SelectAgentTree from '@/components/SelectAgentTree2';\nimport { routerNames } from '@/utils/consts';\nimport router from '@/router';\nimport Cookies from 'js-cookie';\nimport { message } from '@/utils/message';\nexport default {\n  name: routerNames.membersbetrecord,\n  components: {\n    SelectAgentTree: SelectAgentTree\n  },\n  mixins: [list],\n  data: function data() {\n    return {\n      drawer: false,\n      ipData: null,\n      loading: false,\n      releaseTime: '',\n      betDialogVisible: false,\n      dialogShow: false,\n      betStatusList: [this.$t('members.members_16'), this.$t('members.members_17'), this.$t('members.members_18'), this.$t('members.members_19'), this.$t('members.members_20'), this.$t('members.members_21')],\n      form: {\n        time: '',\n        time2: '',\n        time3: '',\n        gameMode: -1,\n        playerLoginName: '',\n        id: '',\n        roundNo: '',\n        gameType: -1,\n        searchAgentId: '',\n        loginIp: '',\n        startBetAmount: '',\n        endBetAmount: '',\n        status: -1,\n        limitRed: -1,\n        minValidBetAmount: '',\n        maxValidBetAmount: '',\n        minNetAmount: '',\n        maxNetAmount: '',\n        minBetAmount: '',\n        maxBetAmount: '',\n        minBetCount: '',\n        maxBetCount: '',\n        minWinRate: '',\n        maxWinRate: ''\n      },\n      dialogform: {\n        limitRed: -1\n      },\n      amountData: {\n        totalPlayerNum: '-',\n        netAmountSum: '-',\n        apiRate: '-',\n        paymentAmountSum: '-',\n        netRate: '-'\n      },\n      videoSrc: '',\n      showVideo: false,\n      currentData: {},\n      userAgentType: '',\n      totalPeople: 0,\n      detailVisible: false,\n      // 是否展示列表选择\n      isShowChoiceColumn: false,\n      prevIndex: 1,\n      tableKey: +new Date(),\n      multipleSelection: [],\n      betLimits: [],\n      type: 1,\n      // 0是当前页面,1是单独,2是全部\n      pageSizes: [5, 10, 20, 50, 100, 200, 500, 2000],\n      handleLoading: false,\n      totalNum: 0,\n      handleText: this.$t('merchant_limitmanage_index_45'),\n      multipleSelectionLength: 0,\n      allDataLength: 0,\n      selectKey: +Date.now(),\n      tab: 'base',\n      activeName: 'base'\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['userInfo'])), mapGetters(['globalDics'])), {}, {\n    gametype: function gametype() {\n      var types = this.globalDics.gametype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    }\n  }),\n  destroyed: function destroyed() {\n    window.clearInterval(window.handleTimer);\n  },\n  methods: {\n    handleClick: function handleClick(_ref, event) {\n      var name = _ref.name;\n      this.tab = name;\n      this.activeName = name;\n      this.handleReset();\n      this.list = [];\n      this.total = 0;\n      this.allDataLength = 0;\n      this.totalNum = 0;\n    },\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    loadData: function loadData() {\n      var _this = this;\n\n      var reg = /(^(\\d|[1-9]\\d)(\\.\\d{1,2})?$)|(^100$)/;\n\n      if (this.form.minWinRate && !reg.test(this.form.minWinRate)) {\n        return this.$message({\n          message: this.$t('merchant_limitmanage_index_466'),\n          type: 'error'\n        });\n      }\n\n      if (this.form.maxWinRate && !reg.test(this.form.maxWinRate)) {\n        return this.$message({\n          message: this.$t('merchant_limitmanage_index_466'),\n          type: 'error'\n        });\n      }\n\n      if (this.form.minWinRate && this.form.maxWinRate && Number(this.form.minWinRate) > Number(this.form.maxWinRate)) {\n        return this.$message({\n          message: this.$t('merchant_limitmanage_index_466'),\n          type: 'error'\n        });\n      }\n\n      this.type = 0;\n      if (this.loading) return;\n      this.loading = true;\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startTime: this.form.time[0],\n        endTime: this.form.time[1],\n        searchAgentId: this.form.agentId,\n        startLoginTime: this.form.time2[0],\n        endLoginTime: this.form.time2[1],\n        status: this.form.status,\n        playerLoginName: this.form.playerLoginName,\n        limitRed: this.form.limitRed,\n        startBetTime: this.form.time3[0],\n        endBetTime: this.form.time3[1],\n        minValidBetAmount: this.form.minValidBetAmount,\n        maxValidBetAmount: this.form.maxValidBetAmount,\n        minNetAmount: this.form.minNetAmount,\n        maxNetAmount: this.form.maxNetAmount,\n        minBetAmount: this.form.minBetAmount,\n        maxBetAmount: this.form.maxBetAmount,\n        minBetCount: this.form.minBetCount,\n        maxBetCount: this.form.maxBetCount,\n        minWinRate: this.form.minWinRate,\n        maxWinRate: this.form.maxWinRate,\n        tab: this.tab,\n        type: this.activeName === 'base' ? 1 : 2\n      };\n      this.$api.playerLimitList(initData).then(function (_) {\n        _this.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this.list = data.record;\n          _this.amountData = data.summary || {\n            totalPlayerNum: '-',\n            netAmountSum: '-',\n            apiRate: '-',\n            paymentAmountSum: '-',\n            netRate: '-'\n          };\n        }\n      }).catch(function () {\n        _this.pageIndex = _this.prevIndex;\n        _this.list = [];\n        _this.amountData = {\n          totalPlayerNum: '-',\n          netAmountSum: '-',\n          apiRate: '-',\n          paymentAmountSum: '-',\n          netRate: '-'\n        };\n        _this.loading = false;\n      });\n      this.$api.playerLimitSum(initData).then(function (res) {\n        if (res.code === 200) {\n          var data = res.data;\n          _this.total = data.totalRecord;\n          _this.allDataLength = _this.total;\n        }\n      }).catch(function () {\n        _this.total = 0;\n        _this.allDataLength = 0;\n        _this.loading = false;\n      });\n      this.$api.memberBetLimitList({\n        type: 1\n      }).then(function (_) {\n        if (_.code === 200) {\n          _this.betLimits = _.data || [];\n          _this.dialogform.limitRed = _this.betLimits[0].id;\n        }\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var _this2 = this;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        router.push(this.$route.path, function () {\n          _this2.resetCommon();\n        });\n      } else {\n        this.resetCommon();\n      }\n    },\n    resetCommon: function resetCommon() {\n      this.form = {\n        time: '',\n        time2: '',\n        time3: '',\n        gameMode: -1,\n        playerLoginName: '',\n        id: '',\n        roundNo: '',\n        gameType: -1,\n        searchAgentId: '',\n        loginIp: '',\n        startBetAmount: '',\n        endBetAmount: '',\n        status: -1,\n        limitRed: -1,\n        minValidBetAmount: '',\n        maxValidBetAmount: '',\n        minNetAmount: '',\n        maxNetAmount: '',\n        minBetAmount: '',\n        maxBetAmount: '',\n        minBetCount: '',\n        maxBetCount: '',\n        minWinRate: '',\n        maxWinRate: ''\n      };\n      this.$refs.ParentTable.clearSort();\n      this.tableKey = +new Date();\n      this.selectKey = +Date.now();\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    getSummaries: function getSummaries(param) {\n      var _this3 = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (!column.property && index === 0) {\n          sums[index] = _this3.$t('members_betrecord_index_580');\n          return;\n        }\n\n        if (column.property === 'roundNo') {\n          sums[index] = _this3.$t('members_betrecord_index_554') + _this3.formatCurrency(_this3.amountData[\"betAmountSum\"]);\n        }\n\n        if (column.property === 'agentName') {\n          sums[index] = _this3.$t('members_betrecord_index_555') + _this3.formatCurrency(_this3.amountData[\"validBetAmountSum\"]);\n        }\n\n        if (column.property === 'playerLoginName') {\n          sums[index] = _this3.$t('members_betrecord_index_556') + _this3.formatCurrency(_this3.amountData[\"payAmountSum\"]);\n        }\n\n        if (column.property === 'betAt') {\n          sums[index] = _this3.$t('members_betrecord_index_557') + _this3.formatCurrency(_this3.amountData[\"netAmountSum\"]);\n        }\n\n        if (column.property === 'betPoint') {\n          sums[index] = _this3.$t('members_betrecord_index_558') + _this3.amountData[\"apiRate\"];\n        }\n\n        if (column.property === 'betAmount') {\n          sums[index] = _this3.$t('members_betrecord_index_559') + _this3.amountData[\"paymentAmountSum\"];\n        }\n\n        if (column.property === 'validBetAmount') {\n          sums[index] = _this3.$t('members_betrecord_index_560') + _this3.amountData[\"netRate\"];\n        }\n      });\n      return sums;\n    },\n    checkDetail: function checkDetail(type, row) {\n      var _this4 = this;\n\n      this.type = type; // \t0是当前页面,1是单独,2是全部\n\n      if (this.type === 0 && this.multipleSelection.length <= 0) {\n        return this.$message({\n          message: this.$t('merchant_limitmanage_index_46'),\n          type: 'error'\n        });\n      }\n\n      if (this.type === 2 && this.allDataLength <= 0) {\n        return this.$message({\n          message: this.$t('merchant_limitmanage_index_46'),\n          type: 'error'\n        });\n      }\n\n      if (this.type) {\n        if (this.type === 1) {\n          console.log('222');\n          this.dialogform.limitRed = row.limitRed;\n          this.$refs.ParentTable.clearSelection();\n          this.$nextTick(function () {\n            _this4.type = 1;\n            _this4.multipleSelection = [];\n            _this4.multipleSelectionLength = 1;\n          });\n        }\n\n        if (this.type === 2) {\n          this.$refs.ParentTable.clearSelection();\n          this.$nextTick(function () {\n            _this4.type = 2;\n            _this4.allDataLength = _this4.total;\n            _this4.multipleSelection = [];\n          });\n        }\n      } else {\n        this.multipleSelectionLength = this.multipleSelection.length;\n      }\n\n      this.detailVisible = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    showChoiceColumn: function showChoiceColumn() {\n      this.isShowChoiceColumn = !this.isShowChoiceColumn;\n    },\n    showResult: function showResult(row) {\n      this.dialogShow = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    handleShowVideo: function handleShowVideo(path, row) {\n      this.showVideo = true;\n      this.videoSrc = path;\n      this.currentData = _objectSpread({}, row);\n    },\n    clearSrc: function clearSrc() {\n      this.videoSrc = '';\n    },\n    showHistory: function showHistory(row) {\n      if (this.hasPermission(119000015)) {\n        if (row.betFlag === 2 || row.betFlag === 4) {\n          return true;\n        } else if (row.gameTypeId === 2012 && row.betFlag === 1) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    },\n    filterGametype: function filterGametype(c) {\n      var arr = this.gametype || [];\n      var find = arr.find(function (item) {\n        return item.label === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var _this5 = this;\n\n      this.type = 0;\n      this.$nextTick(function () {\n        _this5.multipleSelection = val;\n        _this5.multipleSelectionLength = val.length;\n      });\n    },\n    cancel: function cancel() {\n      this.multipleSelectionLength = this.multipleSelection.length;\n      this.dialogform.limitRed = this.betLimits[0].id;\n      this.detailVisible = false;\n    },\n    handleSure: function handleSure() {\n      var _this6 = this;\n\n      console.log('this.type :>> ', this.type);\n\n      if (this.type === 1) {\n        this.$api.updateLimit({\n          betLimitId: this.dialogform.limitRed,\n          playerId: this.currentData.playerId\n        }).then(function (res) {\n          message({\n            type: 'success',\n            message: _this6.$t('systemmanagement_domain_index_1380')\n          });\n          _this6.multipleSelectionLength = 0;\n\n          _this6.loadData();\n        });\n      }\n\n      if (this.type === 0) {\n        var playerIdList = this.multipleSelection.map(function (i) {\n          return i.playerId;\n        });\n        var length = this.multipleSelection.length;\n        this.$api.batchUpdateLimit({\n          playerIdList: playerIdList,\n          betLimitId: this.dialogform.limitRed\n        }).then(function (res) {\n          var data = res.data;\n          _this6.handleLoading = true;\n          window.handleTimer = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n            var response;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _this6.$api.checkUpdatedLimit({\n                      totalMessageId: data\n                    });\n\n                  case 2:\n                    response = _context.sent;\n                    _this6.totalNum = response.data.successTotalNum;\n\n                    if (_this6.totalNum) {\n                      _this6.handleText = _this6.$t('merchant_limitmanage_index_47') + parseInt(_this6.totalNum / length * 100) + '%';\n                    } else {\n                      _this6.handleText = _this6.$t('merchant_limitmanage_index_47') + '0%';\n                    }\n\n                    if (_this6.totalNum === _this6.multipleSelection.length) {\n                      _this6.loadData();\n\n                      window.clearInterval(window.handleTimer);\n                      window.handleTimer = null;\n                    }\n\n                    _this6.handleLoading = false;\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          })), 1500);\n          _this6.multipleSelectionLength = 0;\n        });\n      }\n\n      if (this.type === 2) {\n        this.$api.allSelectBatchUpdateLimit({\n          pageSize: this.pageSize,\n          pageIndex: this.pageIndex,\n          startTime: this.form.time[0],\n          endTime: this.form.time[1],\n          searchAgentId: this.form.agentId,\n          startLoginTime: this.form.time2[0],\n          endLoginTime: this.form.time2[1],\n          status: this.form.status,\n          playerLoginName: this.form.playerLoginName,\n          limitRed: this.form.limitRed,\n          startBetTime: this.form.time3[0],\n          endBetTime: this.form.time3[1],\n          minValidBetAmount: this.form.minValidBetAmount,\n          maxValidBetAmount: this.form.maxValidBetAmount,\n          minNetAmount: this.form.minNetAmount,\n          maxNetAmount: this.form.maxNetAmount,\n          minBetAmount: this.form.minBetAmount,\n          maxBetAmount: this.form.maxBetAmount,\n          minBetCount: this.form.minBetCount,\n          maxBetCount: this.form.maxBetCount,\n          minWinRate: this.form.minWinRate,\n          maxWinRate: this.form.maxWinRate,\n          updateLimitRed: this.dialogform.limitRed,\n          type: this.activeName === 'base' ? 1 : 2\n        }).then(function (res) {\n          var data = res.data;\n          _this6.handleLoading = true;\n          window.handleTimer = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n            var response;\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _this6.$api.checkUpdatedLimit({\n                      totalMessageId: data\n                    });\n\n                  case 2:\n                    response = _context2.sent;\n                    _this6.totalNum = response.data.successTotalNum;\n                    _this6.totalPeople = response.data.totalNum;\n\n                    if (_this6.totalNum) {\n                      _this6.handleText = _this6.$t('merchant_limitmanage_index_47') + parseInt(_this6.totalNum / _this6.totalPeople * 100) + '%';\n                    } else {\n                      _this6.handleText = _this6.$t('merchant_limitmanage_index_47') + '0%';\n                    }\n\n                    if (_this6.totalNum >= _this6.totalPeople) {\n                      _this6.loadData();\n\n                      window.clearInterval(window.handleTimer);\n                      window.handleTimer = null;\n                      _this6.handleLoading = false;\n                    }\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          })), 1500);\n        });\n      }\n\n      this.detailVisible = false;\n    }\n  }\n};",null]}