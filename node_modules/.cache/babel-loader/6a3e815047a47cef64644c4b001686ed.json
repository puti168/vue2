{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue","mtime":1617695097413},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { Message } from 'element-ui';\nimport { validPassword } from '@/utils/validate';\nimport { removeToken } from '@/utils/auth';\nimport Cookies from 'js-cookie';\nimport Finger from '@/utils/fingerprintjs2';\nimport { setPageTitle } from '@/utils/i18n';\nFinger.load();\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      loginForm: {\n        username: this.$store.state.user.userInfo.username,\n        password: Cookies.get('password'),\n        agentCode: Cookies.get('firstLogin') === 'true' ? this.$store.state.user.userInfo.agentName : this.$store.state.user.userInfo.agentCode,\n        googleAuth: '',\n        verifyCodeType: 0\n      },\n      midVal: '',\n      loading: false,\n      password: 'password',\n      // 登录密码眼睛\n      modifyPassword: 'modifyPassword',\n      rePassword: 'rePassword',\n      redirect: undefined,\n      baseUrl: process.env.VUE_APP_BASE_API,\n      timestamp: +new Date(),\n      rememberPassword: Cookies.get('rememberPassword'),\n      version: '',\n      firstLogin: Cookies.get('firstLogin') && Cookies.get('firstLogin') === 'true',\n      userInfo: this.$store.state.user.userInfo,\n      browerFinger: Finger.get(),\n      submitTime: 0 // 记录提交时间，防止多次提交\n\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['language'])), {}, {\n    loginRules: function loginRules() {\n      var _this = this;\n\n      var validatePassword = function validatePassword(rule, value, callback) {\n        if (value.length < 6) {\n          callback(new Error(_this.$t('login.less6Password')));\n        } else {\n          callback();\n        }\n      };\n\n      var validatePwd = function validatePwd(rule, value, callback) {\n        if (!validPassword(value)) {\n          callback(new Error(_this.$t('login_index_473')));\n        } else {\n          callback();\n        }\n      };\n\n      var validateRepwd = function validateRepwd(rule, value, callback) {\n        if (!validPassword(value)) {\n          callback(new Error(_this.$t(_this.$t('login_index_473'))));\n        } else if (value !== _this.loginForm.modifyPassword) {\n          callback(new Error(_this.$t(_this.$t('login_index_474'))));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        agentCode: [{\n          required: true,\n          message: this.$t('login_index_464'),\n          trigger: 'blur'\n        }],\n        modifyPassword: [{\n          required: true,\n          validator: validatePwd,\n          trigger: 'blur'\n        }],\n        rePassword: [{\n          required: true,\n          validator: validateRepwd,\n          trigger: 'blur'\n        }],\n        username: [{\n          required: true,\n          trigger: 'blur',\n          message: this.$t('login.username')\n        }],\n        password: [{\n          required: true,\n          message: this.$t('login.password')\n        }, {\n          trigger: 'blur',\n          validator: validatePassword\n        }],\n        googleAuth: [{\n          required: true,\n          trigger: 'blur',\n          message: this.$t('login_index_468')\n        }]\n      };\n    },\n    btnText: {\n      get: function get() {\n        return this.midVal ? this.midVal : this.$t('login_index_472');\n      },\n      set: function set() {}\n    }\n  }),\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    },\n    'loginForm.agentCode': {\n      handler: function handler(val) {\n        this.loginForm.agentCode = val.toLocaleUpperCase();\n      },\n      deep: true\n    },\n    'loginForm.googleAuth': {\n      handler: function handler(val) {\n        if (this.loginForm.verifyCodeType === 2) {\n          if (val.length >= 4) {\n            this.handleLogin();\n          }\n        }\n\n        if (this.loginForm.verifyCodeType === 1) {\n          if (val.length >= 6) {\n            this.handleLogin();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  destroyed: function destroyed() {\n    localStorage.removeItem('firstLogin');\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    localStorage.setItem('finger', this.browerFinger);\n    this.firstLogin = false;\n    var VERSION = Cookies.get('version') || '';\n    this.version = VERSION;\n    window.addEventListener('keyup', this.handleKeyup);\n\n    if (this.loginForm.agentCode && this.loginForm.username) {\n      this.$api.getVerifyCodeType({\n        agentCode: this.loginForm.agentCode,\n        username: this.loginForm.username\n      }).then(function (res) {\n        if (res && res.code === 200) {\n          _this2.loginForm.verifyCodeType = res.data;\n        } else {\n          _this2.loginForm.verifyCodeType = 0;\n        }\n      }).catch(function (error) {\n        console.log('error :>> ', error);\n        _this2.loginForm.verifyCodeType = 0;\n      });\n    }\n  },\n  methods: {\n    // 键盘事件\n    handleKeyup: function handleKeyup(event) {\n      var e = event || window.event;\n      if (!e) return;\n      var keyCode = e.keyCode;\n\n      if (keyCode === 13) {\n        this.handleLogin();\n      }\n    },\n    handleSetLanguage: function handleSetLanguage(value) {\n      Message.closeAll();\n      var actMessage;\n\n      switch (value) {\n        case 'zh':\n          actMessage = '语言切换成功';\n          break;\n\n        case 'tw':\n          actMessage = this.$t('login_index_476');\n          break;\n\n        default:\n          actMessage = 'Switch Language Success';\n      }\n\n      setPageTitle();\n      this.$i18n.locale = value;\n      this.$store.dispatch('app/setLanguage', value);\n      this.$message({\n        message: actMessage,\n        type: 'success'\n      });\n    },\n    showPwd: function showPwd(type) {\n      var _this3 = this;\n\n      if (this[type] === type) {\n        this[type] = '';\n      } else {\n        this[type] = type;\n      }\n\n      this.$nextTick(function () {\n        _this3.$refs[type].focus();\n      });\n    },\n    onChangeRemember: function onChangeRemember(value) {\n      if (value) {\n        this.rememberPassword = true;\n        Cookies.set('rememberPassword', true);\n      } else {\n        this.rememberPassword = false;\n        Cookies.set('rememberPassword', '');\n      }\n    },\n    // 第一次登录修改密码\n    changePwd: function changePwd(data) {\n      var _this4 = this;\n\n      this.$api.changePwd(_objectSpread({}, data)).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.code === 200)) {\n                    _context.next = 13;\n                    break;\n                  }\n\n                  _this4.$message({\n                    type: 'success',\n                    message: _this4.$t('login_index_477')\n                  });\n\n                  _context.next = 4;\n                  return _this4.$store.dispatch('user/logout');\n\n                case 4:\n                  _this4.$router.push('/login');\n\n                  _this4.firstLogin = false;\n                  Cookies.remove('firstLogin');\n                  _this4.loading = false;\n                  _this4.loginForm.googleAuth = '';\n                  _this4.password = '';\n                  _this4.userInfo = '';\n                  _this4.midVal = _this4.$t('login_index_472');\n                  _this4.loginForm.agentCode = data.agentCode;\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    handleLogin: function handleLogin() {\n      var _this5 = this;\n\n      if (this.loginTimer) return;\n      this.loginTimer = setTimeout(function () {\n        window.clearTimeout(_this5.loginTimer);\n        _this5.loginTimer = null;\n\n        _this5.login();\n      }, 2500);\n    },\n    login: function login() {\n      var _this6 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this6.loading = true;\n          removeToken();\n\n          var form = _objectSpread(_objectSpread({}, _this6.loginForm), {}, {\n            type: 0\n          });\n\n          if (_this6.submitTime) {\n            var now = +new Date();\n            if (now - _this6.submitTime < 1000) return;\n          }\n\n          _this6.submitTime = +new Date();\n\n          if (_this6.firstLogin) {\n            return _this6.changePwd({\n              agentCode: _this6.userInfo.agentCode,\n              agentId: _this6.userInfo.agentId,\n              agentName: _this6.userInfo.agentName,\n              password: _this6.loginForm.modifyPassword,\n              passwordAgain: _this6.loginForm.rePassword\n            });\n          }\n\n          _this6.$store.dispatch('user/login', form).then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(userInfo) {\n              var checkRes;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(Cookies.get('language') === 'zh' || Cookies.get('language') === 'en')) {\n                        Cookies.set('language', 'zh');\n                      }\n\n                      if (Cookies.get('rememberPassword')) {\n                        Cookies.set('password', _this6.loginForm.password);\n                      } else {\n                        Cookies.remove('password');\n                      }\n\n                      _this6.loading = false;\n                      _context2.next = 5;\n                      return _this6.$api.checkFirstLogin({\n                        loginName: form.username,\n                        agentCode: userInfo.agentCode\n                      });\n\n                    case 5:\n                      checkRes = _context2.sent;\n\n                      if (checkRes.data && checkRes.data.flag === 1) {\n                        // 第一次登录后续操作\n                        _this6.loginForm.password = '';\n                        _this6.firstLogin = true;\n                        localStorage.setItem('firstLogin', true);\n                        removeToken();\n                        _this6.userInfo = userInfo;\n                        _this6.midVal = _this6.$t('login_index_471');\n                      }\n\n                      !_this6.firstLogin && _this6.$router.push({\n                        path: '/'\n                      });\n\n                    case 8:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()).catch(function (err) {\n            if (err) console.log('err :', err);\n            _this6.timestamp = +new Date();\n            _this6.loading = false;\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    judgeCode: function judgeCode() {\n      if (!this.loginForm.agentCode) {\n        return; // message({\n        // \ttype: 'error',\n        // \tmessage: '请输入商户编码进行验证码获取'\n        // })\n      }\n\n      if (!this.loginForm.username) {\n        return; // message({\n        // \ttype: 'error',\n        // \tmessage: '请输入账号进行验证码获取'\n        // })\n      }\n\n      this.getCode();\n    },\n    getCode: function getCode() {\n      var _this7 = this;\n\n      this.$api.getVerifyCodeType({\n        agentCode: this.loginForm.agentCode,\n        username: this.loginForm.username\n      }).then(function (res) {\n        if (res && res.code === 200) {\n          _this7.loginForm.verifyCodeType = res.data;\n        } else {\n          _this7.loginForm.verifyCodeType = 0;\n        }\n      }).catch(function (error) {\n        console.log('error :>> ', error);\n        _this7.loginForm.verifyCodeType = 0;\n      });\n    }\n  }\n};",null]}