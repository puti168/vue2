{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\layout\\components\\Navbar.vue","mtime":1617691678353},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatCurrency } from '@/utils';\nimport { mapGetters } from 'vuex';\nimport Breadcrumb from '@/components/Breadcrumb';\nimport Hamburger from '@/components/Hamburger';\nimport LangSelect from '@/components/LangSelect';\nimport router from '@/router';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { getToken } from '@/utils/auth';\nexport default {\n  components: {\n    Breadcrumb: Breadcrumb,\n    Hamburger: Hamburger,\n    LangSelect: LangSelect\n  },\n  data: function data() {\n    return {\n      showMemberInfo: false,\n      tableData: [],\n      loading: false,\n      nowMonth: '',\n      nowSecond: '',\n      week: '',\n      timer2: '',\n      timer: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['name', 'sidebar', 'avatar', 'userInfo'])), {}, {\n    myavatar: function myavatar() {\n      return this.avatar || require('@/assets/img/avatar.png');\n    },\n    env: function env() {\n      return process.env.NODE_ENV === 'development';\n    },\n    weeks: function weeks() {\n      var arr = [this.$t('week0'), this.$t('week1'), this.$t('week2'), this.$t('week3'), this.$t('week4'), this.$t('week5'), this.$t('week6')];\n      return arr;\n    }\n  }),\n  mounted: function mounted() {\n    dayjs.extend(utc);\n    this.timer = setInterval(this.refresh, 1000);\n\n    if (Number(this.userInfo.mainFlag) === 1) {\n      this.onlineAgentList();\n      this.timer2 = setInterval(this.onlineAgentList, 300000);\n    }\n\n    console.log(getToken());\n\n    if (getToken()) {\n      this.$store.dispatch('user/queryUserInfo', this.$store.state.user.userInfo);\n    }\n\n    console.log('userInfo ===>');\n    console.log(this.userInfo);\n  },\n  destroyed: function destroyed() {\n    clearInterval(this.timer);\n    clearInterval(this.timer2);\n  },\n  methods: {\n    peopleNumber: function peopleNumber() {\n      this.onlineAgentList();\n    },\n    formatCurrency: formatCurrency,\n    toggleSideBar: function toggleSideBar() {\n      this.$store.dispatch('app/toggleSideBar');\n    },\n    getBeijingtime: function getBeijingtime() {\n      // 获得当前运行环境时间\n      var d = new Date();\n      var currentDate = new Date();\n      var tmpHours = currentDate.getHours(); // 算得时区\n\n      var time_zone = -d.getTimezoneOffset() / 60;\n\n      if (time_zone < 0) {\n        time_zone = Math.abs(time_zone) + 8;\n        currentDate.setHours(tmpHours + time_zone);\n      } else {\n        time_zone -= 8;\n        currentDate.setHours(tmpHours - time_zone);\n      }\n\n      return currentDate;\n    },\n    refresh: function refresh() {\n      this.nowMonth = dayjs().utc().utcOffset(8).format('YYYY-MM-DD');\n      this.nowSecond = dayjs().utc().utcOffset(8).format('HH:mm:ss');\n      var day = this.getBeijingtime().getDay();\n      this.week = this.weeks[day];\n    },\n    loginOut: function () {\n      var _loginOut = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.dispatch('user/logout');\n\n              case 2:\n                _context.next = 4;\n                return this.$store.dispatch('permission/clearRoutes');\n\n              case 4:\n                this.$store.dispatch('tree/setTree', []);\n                this.$store.dispatch('tree/setTreeData', []);\n                this.$router.push(\"/login?redirect=\".concat(router.history.current.fullPath));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loginOut() {\n        return _loginOut.apply(this, arguments);\n      }\n\n      return loginOut;\n    }(),\n    getRowClass: function getRowClass(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (rowIndex === 0) {\n        return 'background:#EFEFEF; text-align: center;';\n      } else {\n        return '';\n      }\n    },\n    onModify: function onModify() {\n      this.$store.dispatch('app/setModify', true);\n    },\n    goAPI: function goAPI() {\n      this.loading = true;\n      this.$api.getApiDocumentList({\n        textType: -1,\n        pageSize: 1,\n        pageIndex: 1\n      }).then(function (_) {\n        if (_.code === 200) {\n          var data = _.data;\n          window.open(data.record[0].fileLink);\n        }\n      }).catch(function () {});\n    },\n    onlineAgentList: function onlineAgentList() {\n      var _this = this;\n\n      this.$api.onlineAgentList({\n        agentId: this.userInfo.agentId\n      }).then(function (_) {\n        if (_.code === 200) {\n          _this.tableData = _.data;\n        }\n      }).catch(function () {});\n    }\n  }\n};",null]}