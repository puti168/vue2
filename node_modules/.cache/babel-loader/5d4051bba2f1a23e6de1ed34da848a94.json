{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\listPermissionItem\\components\\AuthoritySearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\listPermissionItem\\components\\AuthoritySearch.vue","mtime":1616384580043},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { message } from '@/utils/message';\nimport { generateTitle } from '@/utils/i18n';\nimport list from '@/mixins/list';\nimport { i18nRoute } from '@/utils/i18n';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'AuthoritySearch',\n  components: {\n    SelectAgentTree: SelectAgentTree\n  },\n  mixins: [list],\n  props: {\n    // 0为线路商模板配置 1为普通商户模板配置 2为默认角色配置\n    type: {\n      type: Number,\n      default: 0\n    },\n    drawer: Boolean,\n    limitPlanData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    permissions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      elDrawer: false,\n      checkedAll: false,\n      checkedKeys: [],\n      ps: [],\n      form: {\n        roleName: '',\n        remark: ''\n      },\n      direction: 'ttb',\n      restaurants: [],\n      state2: '',\n      list: [],\n      permissionId: '',\n      // 全部数据\n      data: [],\n      // 树数据\n      tree: [],\n      storeDatas: [],\n      selectKey: Date.now()\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['userInfo'])), {}, {\n    defaultProps: function defaultProps() {\n      return {\n        label: function label(data) {\n          return generateTitle(data.permissionName);\n        },\n        children: 'children'\n      };\n    }\n  }),\n  watch: {\n    'form.agentId': function formAgentId(val) {\n      val && this.hasPermission(15401) && this.loadData2();\n    },\n    drawer: function drawer(val) {\n      this.elDrawer = val;\n      this.selectKey = Date.now();\n    },\n    limitPlanData: {\n      handler: function handler(newVal, old) {\n        console.log('newVal :>> ', newVal);\n\n        if (newVal.id) {\n          this.form = _objectSpread({}, newVal);\n          this.hasPermission(15401) && this.loadData2();\n        } else {\n          this.resetForm();\n        }\n      },\n      deep: true\n    },\n    permissions: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          var arr = this.filterPS(newVal);\n          this.restaurants = arr.map(function (i) {\n            return {\n              value: i18nRoute(i.permissionName),\n              id: i.id\n            };\n          });\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    loadData2: function loadData2() {\n      var _this = this;\n\n      this.tree = [];\n      this.storeDatas = [];\n      if (!this.form.agentId) return;\n      var form = {\n        permissionId: this.form.id,\n        agentId: this.form.agentId\n      };\n      this.$api.searchPermissionAgent(form).then(function (res) {\n        if (res.code === 200) {\n          var organizations = res.data || [];\n          _this.data = organizations;\n          var index;\n\n          if (!_this.value) {\n            // 找到初始agentId\n            index = _this.data.findIndex(function (val) {\n              return val.agentCode === _this.agentCode;\n            });\n\n            if (index > -1) {\n              _this.agentName = _this.data[index].agentName;\n            }\n          } else {\n            index = _this.data.findIndex(function (v) {\n              return Number(v.id) === Number(_this.value);\n            });\n\n            if (index > -1) {\n              _this.agentName = _this.data[index].agentName;\n            }\n          }\n\n          _this.generateTree(_this.data);\n\n          _this.tree = _this.storeDatas;\n          console.log('this.tree1  :>> ', _this.tree);\n\n          _this.deleteItem(_this.tree);\n\n          console.log('this.tree2  :>> ', _this.tree);\n        } else {\n          _this.list = [];\n        }\n      }).catch(function (error) {\n        console.log('error :>> ', error);\n        _this.list = [];\n      });\n    },\n    deleteItem: function deleteItem(tree) {\n      for (var i = tree.length - 1; i >= 0; i--) {\n        if (tree[i].children.length > 0) {\n          this.deleteItem(tree[i].children);\n        }\n\n        if (tree[i].isExit === '0' && tree[i].canDelete) {\n          console.log('333');\n          tree.splice(i, 1);\n        }\n      } // tree.forEach((item, index) => {\n      // \tif (item.isExit === '0' && item.canDelete) {\n      // \t\ttree.splice(index, 1)\n      // \t}\n      // \tif (item.children.length > 0) {\n      // \t\tthis.deleteItem(item.children)\n      // \t}\n      // })\n\n    },\n    // 生成树形结构\n    generateTree: function generateTree(data) {\n      var _this2 = this;\n\n      var datas = _toConsumableArray(data); // 先找出父节点\n\n\n      datas.forEach(function (element, i) {\n        var index = data.findIndex(function (val) {\n          return val.id === element.parentId;\n        });\n\n        if (index < 0) {\n          _this2.storeDatas.push(_objectSpread({\n            id: element.id,\n            label: \"\".concat(element.agentName, \" \").concat(element.agentCode),\n            children: [],\n            canDelete: true\n          }, element));\n\n          datas.splice(i, 1);\n        }\n      });\n      this.recursionData(datas, this.storeDatas);\n    },\n    // 递归生成\n    recursionData: function recursionData(data, tree) {\n      var _this3 = this;\n\n      var datas = _toConsumableArray(data);\n\n      var pickIndex = [];\n      var leftDatas = [];\n      datas.forEach(function (element) {\n        var index = tree.findIndex(function (val) {\n          return val.id === element.parentId;\n        });\n        tree.forEach(function (item) {\n          if (item.id === element.parentId && element.isExit === '1') {\n            item.canDelete = false;\n          }\n        });\n\n        if (index > -1) {\n          tree[index].children.push(_objectSpread({\n            id: element.id,\n            label: \"\".concat(element.agentName, \" \").concat(element.agentCode),\n            children: [],\n            canDelete: true\n          }, element));\n          !pickIndex.includes(index) && pickIndex.push(index);\n        } else {\n          leftDatas.push(element);\n        }\n      });\n\n      if (pickIndex.length > 0) {\n        pickIndex.forEach(function (element) {\n          _this3.recursionData(leftDatas, tree[element].children);\n        });\n      }\n    },\n    // 点击复选框判断是否全选\n    clickIfAllChecked: function clickIfAllChecked(checkedKeys) {\n      var arr = this.filterPS(this.ps);\n\n      if (arr.length === checkedKeys.length) {\n        this.checkedAll = true;\n      } else {\n        this.checkedAll = false;\n      }\n    },\n    check: function check(data, obj) {\n      this.clickIfAllChecked(obj.checkedKeys);\n    },\n    filterPS: function filterPS(ps) {\n      var list = [];\n\n      var getList = function getList(ps) {\n        ps.forEach(function (item) {\n          if (item.children) {\n            list.push(item);\n            getList(item.children);\n          } else {\n            list.push(item);\n          }\n        });\n      };\n\n      getList(ps);\n      return list;\n    },\n    resetForm: function resetForm() {\n      this.form = {};\n      this.checkedAll = false;\n      this.resetTree();\n    },\n    handleClose: function handleClose() {\n      this.state2 = '';\n      this.permissionId = '';\n      this.selectKey = Date.now();\n      this.$emit('update:drawer', false);\n    },\n    querySearch: function querySearch(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(function (restaurant) {\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      }) : restaurants; // 调用 callback 返回建议列表的数据\n\n      cb(results);\n    },\n    handleSelect: function handleSelect(item) {\n      this.pageIndex = 1;\n      this.permissionId = item.id;\n      this.loadData2();\n    },\n    handleClearable: function handleClearable() {\n      this.permissionId = '';\n      this.loadData2();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.loadData2();\n    },\n    deleteRow: function deleteRow(index, row) {\n      var _this4 = this;\n\n      this.$confirm(this.$t('authoritymanagement_defaultrole_components_authoritysearch_1977'), this.$t('authoritymanagement_defaultrole_components_authoritysearch_198'), {\n        confirmButtonText: this.$t('authoritymanagement_defaultrole_components_authoritysearch_199'),\n        cancelButtonText: this.$t('authoritymanagement_defaultrole_components_authoritysearch_200'),\n        type: 'warning',\n        center: true\n      }).then(function () {\n        _this4.$api.deletePermissionAgent({\n          permissionId: _this4.form.id,\n          agentCode: row.agentCode\n        }).then(function (res) {\n          if (res.code === 200) {\n            _this4.loadData2();\n\n            return message({\n              type: 'success',\n              message: _this4.$t('authoritymanagement_defaultrole_components_authoritysearch_201')\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    // 改变列表条数\n    handleSizeChange: function handleSizeChange(value) {\n      this.pageSize = value;\n      localStorage.setItem('pageSize', value);\n      this.loadData2();\n    },\n    getNameByTran: function getNameByTran(row) {\n      return i18nRoute(row.permissionName);\n    },\n    getEnName: function getEnName(row) {\n      return i18nRoute(row.permissionName);\n    }\n  }\n};",null]}