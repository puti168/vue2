{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\defaultrole\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\defaultrole\\index.vue","mtime":1617695097405},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport EditRole from \"./components/EditRole\";\nimport AuthoritySearch from \"./components/AuthoritySearch\";\nimport { routerNames } from '@/utils/consts';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport { i18nRoute } from '@/utils/i18n';\nimport Modal from '@/components/Modal';\nimport dayjs from 'dayjs';\nexport default {\n  name: routerNames.systemRole,\n  components: {\n    EditRole: EditRole,\n    SelectAgentTree: SelectAgentTree,\n    AuthoritySearch: AuthoritySearch,\n    Modal: Modal\n  },\n  mixins: [list],\n  data: function data() {\n    return {\n      curOperation: '',\n      hadSearch: false,\n      loading: false,\n      lockVisible: false,\n      deleteDialog: false,\n      dialogVisible2: false,\n      editType: 0,\n      // 0为线路商模板配置 1为普通商户模板配置 2为默认角色配置\n      drawer: false,\n      currentPage: 1,\n      form: {\n        time: '',\n        systemType: -1,\n        agentId: '',\n        userName: '',\n        quickSearch: 'team'\n      },\n      roleData: {},\n      permissions: [],\n      assignedPermissions: [],\n      dialogVisible: false,\n      currentData: {},\n      currentIndex: -1,\n      remark: '',\n      list: [],\n      searchDrawer: false\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['name', 'userInfo'])), mapGetters(['buttonPermissions'])), {}, {\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: [{\n          text: this.$t(\"members_betrecord_index_584\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_585\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day').subtract(1, 'd');\n            var start = dayjs().startOf('day').subtract(1, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_586\"),\n          onClick: function onClick(picker) {\n            var start, end;\n            var weekNum = dayjs().day();\n\n            if (weekNum === 0) {\n              end = dayjs().endOf('day');\n              start = dayjs().subtract(1, 'd').startOf('week').startOf('day').add(1, 'd');\n            } else {\n              end = dayjs().endOf('day');\n              start = dayjs().startOf('day').startOf('week').add(1, 'd');\n            }\n\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"members_betrecord_index_587\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('month');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t(\"merchant_dailyrateaccount_index_799\"),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day').subtract(89, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }]\n      };\n    },\n    options: function options() {\n      return [{\n        value: 'self',\n        label: this.$t('systemmanagement_ipwhite_index_1458')\n      }, {\n        value: 'under',\n        label: this.$t('systemmanagement_ipwhite_index_1459')\n      }, {\n        value: 'team',\n        label: this.$t('systemmanagement_ipwhite_index_1460')\n      }];\n    }\n  }),\n  methods: {\n    loadData: function loadData() {\n      var _this2 = this;\n\n      this.loading = true;\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startDate: this.form.time ? this.form.time[0] : '',\n        endDate: this.form.time ? this.form.time[1] : '',\n        quickSearch: this.form.quickSearch,\n        userName: this.form.userName\n      };\n      var requestData = this.hadSearch ? {\n        agentId: this.form.agentId,\n        systemType: this.form.systemType\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.adminUserManager(form).then(function (_) {\n        _this2.loading = false;\n        var data = _.data;\n        _this2.total = data.totalRecord;\n        _this2.list = data.record;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      this.hadSearch = false;\n      this.form = {\n        time: '',\n        systemType: -1,\n        agentId: '',\n        userName: '',\n        quickSearch: 'team'\n      };\n      this.initList();\n    },\n    handleCancle: function handleCancle() {\n      this.dialogVisible = false;\n      this.curOperation = 'cancle';\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    // 给菜单加入查看\n    insertCheck: function insertCheck(permissions) {\n      var _this3 = this;\n\n      permissions.forEach(function (element) {\n        if (element.children && element.children.length !== 0) {\n          element.children.forEach(function (childElement) {\n            childElement.children = childElement.children || [];\n            childElement.children.unshift({\n              children: null,\n              id: 'list' + childElement.id,\n              isExist: null,\n              parentId: childElement.id,\n              path: childElement,\n              permissionName: _this3.$t('authoritymanagement_defaultrole_index_241'),\n              type: 1\n            });\n          });\n        }\n      });\n    },\n    // 获取已有权限 type为2的时候才有id\n    getRoleDetail: function getRoleDetail(type, id, row) {\n      var _this4 = this;\n\n      console.log('222');\n      console.log(id);\n\n      if (type === 0) {\n        var api = 'getLineAgentTemplateConfig';\n        this.$api[api]({\n          id: id\n        }).then(function (res) {\n          if (res.code === 200) {\n            if (!id) {\n              _this4.roleData = res.data;\n            }\n\n            var currentPermissions = [];\n            res.data.rolePermission && res.data.rolePermission.forEach(function (element) {\n              if (element.isExist === '1' && element.type !== '0') {\n                currentPermissions.push(element.id);\n              } else if (element.isExist === '1' && element.type === '0') {\n                currentPermissions.push(\"list\".concat(element.id));\n              }\n            });\n            _this4.assignedPermissions = currentPermissions;\n          }\n        });\n      }\n\n      if (type === 1) {\n        var _api = 'getAgentTemplateConfig';\n\n        this.$api[_api]({\n          id: id\n        }).then(function (res) {\n          if (res.code === 200) {\n            if (!id) {\n              _this4.roleData = res.data;\n            }\n\n            var currentPermissions = [];\n            res.data.rolePermission && res.data.rolePermission.forEach(function (element) {\n              if (element.isExist === '1' && element.type !== '0') {\n                currentPermissions.push(element.id);\n              } else if (element.isExist === '1' && element.type === '0') {\n                currentPermissions.push(\"list\".concat(element.id));\n              }\n            });\n            _this4.assignedPermissions = currentPermissions;\n          }\n        });\n      }\n\n      if (type === 2) {\n        var _api2 = 'userDetail';\n\n        this.$api[_api2]({\n          userId: row.userId\n        }).then(function (res) {\n          if (res.code === 200) {\n            if (!id) {\n              _this4.roleData = res.data;\n            }\n\n            var currentPermissions = [];\n            res.data.assignedPermissions && res.data.assignedPermissions.forEach(function (element) {\n              if (element.isExist === '1' && element.type !== '0') {\n                currentPermissions.push(element.id);\n              } else if (element.isExist === '1' && element.type === '0') {\n                currentPermissions.push(\"list\".concat(element.id));\n              }\n            });\n            _this4.assignedPermissions = currentPermissions;\n          }\n        });\n      }\n    },\n    Unlock: function Unlock(index, row) {\n      this.currentData = _objectSpread({}, row);\n      this.currentIndex = index;\n      this.lockVisible = true;\n      this.modalType = row.status === 1 ? 2 : 1;\n    },\n    handleSureLock: function handleSureLock() {\n      var _this5 = this;\n\n      var params = {\n        userId: this.currentData.userId\n      };\n      this.$api.unLockUser(params).then(function (res) {\n        if (res.code === 200) {\n          _this5.list[_this5.currentIndex].lockFlag = 0;\n          _this5.lockVisible = false;\n\n          _this5.$message({\n            message: _this5.$t('merchant_merchantinfo_components_keysmanage_1004'),\n            type: 'success'\n          });\n        }\n      });\n    },\n    // 找出父级\n    findRoots: function findRoots(data) {\n      if (!data || data.length === 0) return;\n      var roots = [];\n      var childrens = [];\n      data.forEach(function (element) {\n        if (element.parentId === 0) {\n          roots.push(_objectSpread(_objectSpread({}, element), {}, {\n            children: []\n          }));\n        } else {\n          childrens.push(_objectSpread(_objectSpread({}, element), {}, {\n            children: []\n          }));\n        }\n      });\n      this.generateTree(roots, childrens);\n      return roots;\n    },\n    handleSure: function handleSure() {\n      var _this6 = this;\n\n      // 重置管理员密码\n      this.$api.resetAdminPwd({\n        agentId: this.currentData.id,\n        agentName: this.currentData.agentName,\n        agentCode: this.currentData.agentCode\n      }).then(function (res) {\n        if (res.code === 200) {\n          _this6.dialogVisible2 = false;\n          return _this6.$message({\n            type: 'success',\n            message: _this6.$t('merchant_merchantinfo_index_1134')\n          });\n        }\n      });\n    },\n    // 生成树形结构\n    generateTree: function generateTree(parents, childrens) {\n      if (!childrens || childrens.length === 0) return;\n      var roots = [];\n      var lefts = [];\n      childrens.forEach(function (element) {\n        var index = parents.findIndex(function (val) {\n          return val.id === element.parentId;\n        });\n\n        if (index > -1) {\n          parents[index].children.push(element);\n          roots.push(element);\n        } else {\n          lefts.push(element);\n        }\n      });\n      this.generateTree(roots, lefts);\n    },\n    resetPassword: function resetPassword(row) {\n      this.currentData = _objectSpread({}, row);\n      this.dialogVisible2 = true;\n    },\n    editRow: function editRow(index, row) {\n      this.loadPermissions(row);\n      this.drawer = true;\n      this.editType = 2;\n      this.roleData = _objectSpread({}, row);\n      this.getRoleDetail(this.editType, row.id, row);\n    },\n    handleNewRole: function handleNewRole(editType) {\n      console.log('221122');\n      this.loadPermissions3();\n      this.drawer = true;\n      this.editType = editType;\n      this.getRoleDetail(editType);\n    },\n    showAuthoritySearch: function showAuthoritySearch() {\n      this.loadPermissions2();\n      this.searchDrawer = true;\n    },\n    loadPermissions3: function loadPermissions3() {\n      var _this7 = this;\n\n      this.$api.merchantPermissions().then(function (_) {\n        if (_.code === 200) {\n          _this7.permissions = _.data || []; // 增加查看权限，相当于菜单，这个是前端增加的，为了这个tree组件兼容，提交的时候需要过滤掉id为'list'的值\n\n          _this7.permissions.forEach(function (element) {\n            if (element.children && element.children.length !== 0) {\n              element.children.forEach(function (childElement) {\n                childElement.children = childElement.children || [];\n                childElement.children.unshift({\n                  children: null,\n                  id: 'list' + childElement.id,\n                  isExist: null,\n                  parentId: childElement.id,\n                  path: childElement,\n                  permissionName: 'view',\n                  type: 1\n                });\n              });\n            }\n          });\n\n          _this7.loopPermission(_this7.permissions);\n        } else {\n          _this7.$message({\n            type: 'error',\n            message: _this7.$t('systemmanagement.systemmanagement_111')\n          });\n        }\n      });\n    },\n    // 获取角色的所有可操作权限\n    loadPermissions: function loadPermissions(row) {\n      var _this8 = this;\n\n      this.$api.userManagerPermission({\n        searchUserId: row.userId,\n        agentCode: row.agentCode\n      }).then(function (_) {\n        if (_.code === 200) {\n          _this8.permissions = _.data || []; // 增加查看权限，相当于菜单，这个是前端增加的，为了这个tree组件兼容，提交的时候需要过滤掉id为'list'的值\n\n          _this8.permissions.forEach(function (element) {\n            if (element.children && element.children.length !== 0) {\n              element.children.forEach(function (childElement) {\n                childElement.children = childElement.children || [];\n                childElement.children.unshift({\n                  children: null,\n                  id: 'list' + childElement.id,\n                  isExist: null,\n                  parentId: childElement.id,\n                  path: childElement,\n                  permissionName: 'view',\n                  type: 1\n                });\n              });\n            }\n          });\n\n          _this8.loopPermission(_this8.permissions);\n        } else {\n          _this8.$message({\n            type: 'error',\n            message: _this8.$t('systemmanagement.systemmanagement_111')\n          });\n        }\n      });\n    },\n    // 获取权限项的筛选权限\n    loadPermissions2: function loadPermissions2() {\n      var _this9 = this;\n\n      this.$api.merchantPermissions().then(function (_) {\n        if (_.code === 200) {\n          _this9.permissions = _.data || []; // 增加查看权限，相当于菜单，这个是前端增加的，为了这个tree组件兼容，提交的时候需要过滤掉id为'list'的值\n\n          _this9.permissions.forEach(function (element) {\n            if (element.children && element.children.length !== 0) {\n              element.children.forEach(function (childElement) {\n                childElement.children = childElement.children || [];\n              });\n            }\n          });\n        } else {\n          _this9.$message({\n            type: 'error',\n            message: _this9.$t('systemmanagement.systemmanagement_111')\n          });\n        }\n      });\n    },\n    loopPermission: function loopPermission(datas) {\n      var _this10 = this;\n\n      datas.forEach(function (i) {\n        i.permissionName = i18nRoute(i.permissionName);\n\n        if (i.children && i.children.length !== 0) {\n          _this10.loopPermission(i.children);\n        }\n      });\n    },\n    filterRoleName: function filterRoleName() {\n      return this.$t('other_010');\n    },\n    filterRemark: function filterRemark() {\n      return this.$t('other_011');\n    }\n  }\n};",null]}