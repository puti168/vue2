{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\abnormalRound\\players\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\abnormalRound\\players\\index.vue","mtime":1617695097403},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport ResultShow from '@/components/ResultShow';\nimport dayjs from 'dayjs';\nimport { routerNames } from '@/utils/consts';\nimport router from '@/router';\nimport IPLogin from '@/views/abnormalRound/players/components/IPLogin';\nexport default {\n  name: routerNames.abnormalplayers,\n  components: {\n    SelectAgentTree: SelectAgentTree,\n    ResultShow: ResultShow,\n    IPLogin: IPLogin\n  },\n  mixins: [list],\n  data: function data() {\n    return {\n      drawer: false,\n      hadSearch: false,\n      loading: false,\n      releaseTime: '',\n      betDialogVisible: false,\n      dialogShow: false,\n      betStatusList: [this.$t('members.members_16'), this.$t('members.members_17'), this.$t('members.members_18'), this.$t('members.members_19'), this.$t('members.members_20'), this.$t('members.members_21')],\n      form: {\n        time: '',\n        playerName: '',\n        id: '',\n        roundNo: '',\n        abnormalType: -1,\n        searchAgentId: ''\n      },\n      amountData: {},\n      currentData: {},\n      userAgentType: '',\n      // 是否展示列表选择\n      isShowChoiceColumn: false,\n      prevIndex: 1,\n      ipData: null,\n      summary: {},\n      key: Date.now()\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['userInfo'])), mapGetters(['globalDics'])), {}, {\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: [{\n          text: this.$t('abnormalround_players_index_158'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('abnormalround_players_index_159'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day').subtract(1, 'd');\n            var start = dayjs().startOf('day').subtract(1, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('abnormalround_players_index_160'),\n          onClick: function onClick(picker) {\n            var start, end;\n            var weekNum = dayjs().day();\n\n            if (weekNum === 0) {\n              end = dayjs().endOf('day');\n              start = dayjs().subtract(1, 'd').startOf('week').startOf('day').add(1, 'd');\n            } else {\n              end = dayjs().endOf('day');\n              start = dayjs().startOf('day').startOf('week').add(1, 'd');\n            }\n\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('abnormalround_players_index_161'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('month');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }]\n      };\n    }\n  }),\n  mounted: function mounted() {\n    document.addEventListener('click', this.showColumn);\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('click', this.showColumn);\n  },\n  methods: {\n    classFilter: function classFilter(item) {\n      switch (item) {\n        case 1:\n          return 'dangerState';\n\n        case 2:\n          return 'warningState';\n\n        case 3:\n          return 'disableState';\n\n        default:\n          break;\n      }\n    },\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    showColumn: function showColumn(e) {\n      var icon = document.getElementById('icon');\n      var list = document.getElementById('list');\n\n      if (icon && !icon.contains(e.target) && list && !list.contains(e.target)) {\n        this.isShowChoiceColumn = false;\n      }\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      // 2020-4-28修改为开始和结束时间不能跨月\n      if (this.form.time) {\n        var month0 = dayjs(this.form.time[0]).month();\n        var month1 = dayjs(this.form.time[1]).month();\n\n        if (month0 !== month1) {\n          return this.$message({\n            message: this.$t('abnormalround_players_index_162'),\n            type: 'warning'\n          });\n        }\n      }\n\n      this.loading = true;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        var query = this.$route.query || {};\n        this.form.roundNo = query.roundNo;\n        this.form.agentId = query.agentId;\n        this.key = Date.now();\n        router.push(this.$route.path);\n      }\n\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startTime: this.form.time[0],\n        endTime: this.form.time[1],\n        playerName: this.form.playerName,\n        searchAgentId: this.form.agentId,\n        roundNo: this.form.roundNo,\n        id: this.form.id,\n        abnormalType: this.form.abnormalType\n      };\n\n      var form = _objectSpread({}, initData);\n\n      this.$api.pageAbnormalRoundAccountBad(form).then(function (_) {\n        _this2.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this2.list = data.record;\n          _this2.summary = data.summary || {};\n          _this2.total = data.totalRecord;\n        }\n      }).catch(function () {\n        _this2.pageIndex = _this2.prevIndex;\n        _this2.list = [];\n        _this2.amountData = {};\n        _this2.total = 0;\n        _this2.loading = false;\n      });\n    },\n    filterAbnormalType: function filterAbnormalType(value) {\n      return value === 1 ? this.$t('abnormalround_players_index_132') : value === 2 ? this.$t('abnormalround_players_index_133') : value === 3 ? this.$t('abnormalround_players_index_2') : '-';\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var _this3 = this;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        router.push(this.$route.path, function () {\n          _this3.resetCommon();\n        });\n      } else {\n        this.resetCommon();\n      }\n    },\n    resetCommon: function resetCommon() {\n      this.hadSearch = false;\n      this.form = {\n        time: '',\n        playerName: '',\n        id: '',\n        roundNo: '',\n        betStatus: -1,\n        searchAgentId: ''\n      };\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.pageIndex = 1;\n      this.hadSearch = true;\n      this.loadData();\n    },\n    getSummaries: function getSummaries(param) {\n      var _this4 = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = _this4.$t('abnormalround_players_index_155');\n        }\n\n        if (column.property === 'badAmount') {\n          sums[index] = _this4.formatCurrency(_this4.summary[\"totalBadAmount\"]);\n        }\n      });\n      return sums;\n    },\n    showChoiceColumn: function showChoiceColumn() {\n      this.isShowChoiceColumn = !this.isShowChoiceColumn;\n    },\n    showResult: function showResult(row) {\n      this.dialogShow = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    // ip登录轨迹\n    checkLoginIp: function checkLoginIp(row) {\n      this.drawer = true;\n      this.ipData = _objectSpread({}, row);\n    }\n  }\n};",null]}