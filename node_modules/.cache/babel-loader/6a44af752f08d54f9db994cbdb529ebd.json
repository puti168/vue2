{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\gameresult\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\gameresult\\index.vue","mtime":1617695097412},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport list from '@/mixins/list';\nimport dayjs from 'dayjs';\nimport { mapGetters } from 'vuex';\nimport Video from '@/components/Video';\nimport { routerNames } from '@/utils/consts';\nimport ResultShow from '@/components/ResultShow';\nimport Cookies from 'js-cookie';\nimport QklModal from '@/components/QklModal';\nexport default {\n  name: routerNames.reportGameResult,\n  components: {\n    Video: Video,\n    ResultShow: ResultShow,\n    QklModal: QklModal\n  },\n  mixins: [list],\n  data: function data() {\n    var start = dayjs().startOf('day').valueOf();\n    var end = dayjs().endOf('day').valueOf();\n    return {\n      hadSearch: false,\n      // 判断是否点击，解决分页不点搜索带上搜索条件的问题\n      loading: false,\n      drawer: false,\n      dialogShow: false,\n      dialogShow2: false,\n      form: {\n        time: [start, end],\n        operateStatus: -1,\n        physicsTableNo: '',\n        roundNo: '',\n        roundStatus: -1,\n        gameTypeId: -1,\n        platformId: -1\n      },\n      list: [],\n      videoSrc: '',\n      showVideo: false,\n      currentData: {},\n      currentData2: {},\n      roundNo: '',\n      platforms: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['globalDics'])), {}, {\n    gametype: function gametype() {\n      var types = this.globalDics.gametype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    gamemode: function gamemode() {\n      return this.globalDics.gamemode;\n    },\n    gameresultstatus: function gameresultstatus() {\n      var types = this.globalDics.gameresultstatus || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    betstatus: function betstatus() {\n      return this.globalDics.betstatus;\n    },\n    betflag: function betflag() {\n      var types = this.globalDics.betflag || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n\n          if (_this.minDate) {\n            var before = dayjs(_this.minDate).startOf('day').subtract(6, 'd').valueOf();\n            var after = dayjs(_this.minDate).endOf('day').add(6, 'd').valueOf();\n            return time.getTime() > now || time.getTime() < before || time.getTime() > after;\n          }\n\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: [{\n          text: this.$t('members_accounttransaction_index_508'),\n          onClick: function onClick(picker) {\n            var start = dayjs().subtract(15, 'minute');\n            var end = dayjs();\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('members_accounttransaction_index_509'),\n          onClick: function onClick(picker) {\n            var start = dayjs().subtract(1, 'hour');\n            var end = dayjs();\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('gamemanagement_gameresult_index_372'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day');\n            var start = dayjs().startOf('day');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('gamemanagement_gameresult_index_373'),\n          onClick: function onClick(picker) {\n            var end = dayjs().endOf('day').subtract(1, 'd');\n            var start = dayjs().startOf('day').subtract(1, 'd');\n            picker.$emit('pick', [+start, +end]);\n          }\n        }, {\n          text: this.$t('gamemanagement_gameresult_index_374'),\n          onClick: function onClick(picker) {\n            var start, end;\n            var weekNum = dayjs().day();\n\n            if (weekNum === 0) {\n              end = new Date();\n              start = dayjs().subtract(1, 'd').startOf('week').startOf('day').add(1, 'd');\n            } else {\n              end = new Date();\n              start = dayjs().startOf('day').startOf('week').add(1, 'd');\n            }\n\n            picker.$emit('pick', [+start, +end]);\n          }\n        }]\n      };\n    }\n  }),\n  methods: {\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    classFilter2: function classFilter2(item) {\n      console.log(item);\n\n      switch (item) {\n        case 2:\n          return 'infoState';\n\n        case 3:\n          return 'infoState';\n\n        case 4:\n          return 'infoState';\n\n        case 5:\n          return 'successState';\n\n        case 6:\n          return 'disableState';\n\n        case 7:\n          return 'dangerState';\n\n        case 8:\n          return 'warningState';\n\n        default:\n          break;\n      }\n    },\n    classFilter: function classFilter(item) {\n      switch (item) {\n        case 0:\n          return 'successState';\n\n        case 1:\n          return 'disableState';\n\n        case 2:\n          return 'dangerState';\n\n        case 4:\n          return 'warningState';\n\n        case 6:\n          return 'infoState';\n\n        default:\n          break;\n      }\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      this.loading = true;\n      var pageData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startTime: this.form.time ? this.form.time[0] : '',\n        endTime: this.form.time ? this.form.time[1] : '',\n        platformId: this.form.platformId\n      };\n      var requestData = this.hadSearch ? {\n        roundStatus: this.form.roundStatus,\n        operateStatus: this.form.operateStatus,\n        bootNo: this.form.bootNo,\n        physicsTableNo: this.form.physicsTableNo,\n        roundNo: this.form.roundNo,\n        gameTypeId: this.form.gameTypeId\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, pageData), requestData);\n\n      this.$api.gameResultSearch(form).then(function (_) {\n        _this2.loading = false;\n        var data = _.data;\n        _this2.list = data.record;\n        _this2.total = data.totalRecord;\n      }).catch(function () {\n        _this2.loading = false;\n      });\n      this.$api.queryGamingRoom().then(function (res) {\n        console.log('res :>> ', res);\n        _this2.platforms = res.data;\n      });\n    },\n    filterList: function filterList(list) {\n      return list.map(function (_) {\n        if (_.status === 1) {\n          _.switchStatus = true;\n        } else if (_.status === 0) {\n          _.switchStatus = false;\n        }\n\n        return _;\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      console.log(this.$t('detailrecord.detailrecord_32', [val]));\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var start = dayjs().startOf('day').valueOf();\n      var end = dayjs().endOf('day').valueOf();\n      this.form = {\n        time: [start, end],\n        physicsTableNo: '',\n        roundId: '',\n        roundStatus: -1,\n        gameTypeId: -1,\n        operateStatus: -1\n      };\n      this.hadSearch = false;\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.hadSearch = true;\n      this.pageIndex = 1;\n      this.loadData();\n    },\n    handleShowVideo: function handleShowVideo(path, row) {\n      this.showVideo = true;\n      this.videoSrc = path;\n      this.currentData = _objectSpread({}, row);\n    },\n    showResult: function showResult(row) {\n      this.dialogShow = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    showResult2: function showResult2(row) {\n      var _this3 = this;\n\n      this.dialogShow = true;\n      this.$api.recalculateBureau({\n        gameTypeId: row.gameTypeId,\n        operateStatus: 4,\n        roundNo: row.roundNo\n      }).then(function (res) {\n        _this3.currentData = res.data;\n      });\n    },\n    showCardDetail: function showCardDetail(row) {\n      this.dialogShow2 = true;\n      this.roundNo = row.roundNo;\n    },\n    clearSrc: function clearSrc() {\n      this.videoSrc = '';\n    },\n    filterGametype: function filterGametype(c) {\n      var arr = this.gametype || [];\n      var find = arr.find(function (item) {\n        return item.label === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterGameresultstatus: function filterGameresultstatus(c) {\n      var arr = this.gameresultstatus || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterBetflag: function filterBetflag(c) {\n      var arr = this.betflag || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    }\n  }\n};",null]}