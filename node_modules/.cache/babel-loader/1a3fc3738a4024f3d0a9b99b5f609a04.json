{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\mixins\\list.js","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\mixins\\list.js","mtime":1617695097390},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport dayjs from 'dayjs';\nimport { shortcuts, shortcutsNoToday, shortcutsM } from '@/utils/consts';\nimport { formatCurrency } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      // 时间选择器格式\n      dateType: 'daterange',\n      pageIndex: 1,\n      pageSize: 10,\n      total: 0,\n      pageSizes: [5, 10, 20, 50, 100, 200, 500],\n      layout: 'total, sizes, prev, pager, next, jumper',\n      defaultTime: ['00:00:00', '23:59:59'],\n      hadSearch: false,\n      loading: false\n    };\n  },\n  computed: {\n    // pickerOptions 可以超90天\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: shortcuts\n      };\n    },\n    pickerOptionsM: function pickerOptionsM() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          var now = dayjs().endOf('day').valueOf();\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref2) {\n          var maxDate = _ref2.maxDate,\n              minDate = _ref2.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: shortcutsM\n      };\n    },\n    pickerOptionsNoToday: function pickerOptionsNoToday() {\n      var _this = this;\n\n      return {\n        // disabledDate(time) {\n        // \tconst now = dayjs()\n        // \t\t.endOf('day').subtract(1, 'd')\n        // \t\t.valueOf()\n        // \treturn time.getTime() > now\n        // },\n        onPick: function onPick(_ref3) {\n          var maxDate = _ref3.maxDate,\n              minDate = _ref3.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: shortcutsNoToday\n      };\n    },\n    pickerOptions_no_90: function pickerOptions_no_90() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          // 1.超过90天的查询时间，提示“起止时间不可超过90天”\n          // 2.查询截至时间不可以超过当前时间\n          // const before = dayjs(_this.minDate)\n          // \t.subtract(90, 'days')\n          // \t.valueOf()\n          // const after = dayjs(_this.minDate)\n          // \t.add(90, 'days')\n          // \t.valueOf()\n          var now = dayjs(dayjs().add(1, 'd').format('YYYY-MM-DD')).valueOf(); // // 如果after-now大于0,说明选择时间在当前时间90天之前\n          // if (after - now < 0) {\n          // \treturn time.getTime() > after || time.getTime() < before\n          // } else {\n          // \treturn time.getTime() > now\n          // }\n\n          return time.getTime() > now;\n        },\n        onPick: function onPick(_ref4) {\n          var maxDate = _ref4.maxDate,\n              minDate = _ref4.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        },\n        shortcuts: shortcuts\n      };\n    }\n  },\n  created: function created() {\n    // this.pageSize = localStorage.getItem('pageSize')\n    // \t? Number(localStorage.getItem('pageSize'))\n    // \t: 10\n    var option = this.$options.doNotInit;\n\n    if (!option && !localStorage.getItem('betPoint') && !localStorage.getItem('roundNo2')) {\n      this.initList();\n    }\n  },\n  updated: function updated() {// this.$forceUpdate()\n  },\n  mounted: function mounted() {},\n  destroyed: function destroyed() {},\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    next();\n  },\n  watch: {\n    page: 'loadData'\n  },\n  methods: {\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    formatCurrency: formatCurrency,\n    onSelectTimeFocus: function onSelectTimeFocus() {\n      var dayNum = dayjs().date();\n      var weekNum = dayjs().day();\n\n      if (weekNum === 1) {\n        var nodeLists = document.querySelectorAll('.el-picker-panel__shortcut');\n        nodeLists && nodeLists.forEach(function (val) {\n          if (val.textContent === '当周') {\n            val.className = 'el-picker-panel__shortcut disabled-week';\n            val.setAttribute('disabled', true);\n          }\n        });\n      }\n\n      if (dayNum === 1) {\n        var _nodeLists = document.querySelectorAll('.el-picker-panel__shortcut');\n\n        _nodeLists && _nodeLists.forEach(function (val) {\n          if (val.textContent === '当月') {\n            val.className = 'el-picker-panel__shortcut disabled-week';\n            val.setAttribute('disabled', true);\n          }\n        });\n      }\n    },\n    getSummaries: function getSummaries(param) {\n      var columns = param.columns,\n          data = param.data;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = '总价';\n          return;\n        }\n\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n\n        if (!values.every(function (value) {\n          return isNaN(value);\n        })) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n\n            if (!isNaN(value)) {\n              return prev + curr;\n            } else {\n              return prev;\n            }\n          }, 0);\n          sums[index] += ' 元';\n        } else {\n          sums[index] = 'N/A';\n        }\n      });\n      return sums;\n    },\n    getRowClass: function getRowClass(_ref5) {\n      var row = _ref5.row,\n          column = _ref5.column,\n          rowIndex = _ref5.rowIndex,\n          columnIndex = _ref5.columnIndex;\n\n      if (rowIndex === 0) {\n        return 'background:#EFEFEF;';\n      } else {\n        return '';\n      }\n    },\n\n    /**\r\n     * 获取请求参数 默认只传递index(页码) pageSize(每页条数) 可以由调用方传递指定对象合并(或者覆盖)原参数\r\n     * @param params\r\n     * @returns {*}\r\n     */\n    getParams: function getParams(params) {\n      return Object.assign({\n        pageIndex: this.pageIndex,\n        pageSize: this.pageSize\n      }, params);\n    },\n\n    /**\r\n     * 加载更多\r\n     */\n    loadMore: function loadMore() {\n      this.pageIndex++;\n    },\n\n    /**\r\n     * 推送到list中 因为vue的监听特性 只能用push进行数据的添加 如果有特殊处理 通过传递一个filter来过滤数据\r\n     * @param list\r\n     * @param filter\r\n     */\n    pushToList: function pushToList(list, filter) {\n      var _this2 = this;\n\n      list.forEach(function (item) {\n        if (typeof filter === 'function') {\n          _this2.list.push(filter(item));\n        } else {\n          _this2.list.push(item);\n        }\n      });\n    },\n\n    /**\r\n     * 初始化列表\r\n     */\n    initList: function initList() {\n      this.pageIndex = 1;\n      this.list = [];\n      this.loadData();\n    },\n\n    /**\r\n     * @overwrite\r\n     * 加载有筛选条件的页面\r\n     */\n    reloadData: function reloadData() {},\n\n    /**\r\n     * @overwrite\r\n     * 加载数据方法 用到该mixin的都应该重写该方法 否则无法实现加载数据\r\n     */\n    loadData: function loadData() {// 每个列表自己的获取数据的方法需要重写\n    },\n    // 改变列表条数\n    handleSizeChange: function handleSizeChange(value) {\n      this.pageSize = value;\n      this.pageIndex = 1; // localStorage.setItem('pageSize', value)\n\n      this.loadData();\n    },\n    enterSearch: function enterSearch(e) {\n      var event = e || window.event;\n      console.log(event);\n      var key = event.which || event.keyCode || event.charCode;\n\n      if (key === 13) {\n        this.hadSearch = true;\n        this.pageIndex = 1;\n        this.loadData();\n      }\n    }\n  }\n};",null]}