{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\list\\components\\IPLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\list\\components\\IPLogin.vue","mtime":1616384580066},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HistoryRecord from \"./HistoryRecord\";\nimport list from '@/mixins/list';\nimport { mapGetters } from 'vuex';\nimport dayjs from 'dayjs';\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'IPLogin',\n  components: {\n    HistoryRecord: HistoryRecord\n  },\n  mixins: [list],\n  props: {\n    drawer: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    },\n    ipdata: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  doNotInit: true,\n  data: function data() {\n    var end = dayjs().endOf('day').valueOf();\n    var start = dayjs().startOf('day').subtract(6, 'd').valueOf();\n    return {\n      loading: false,\n      elDrawer: true,\n      form: {\n        time: [start, end]\n      },\n      recordData: null,\n      historyRecordShow: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['globalDics'])), {}, {\n    agenttype: function agenttype() {\n      return this.globalDics.agenttype;\n    },\n    pickerOptions2: function pickerOptions2() {\n      var _this = this;\n\n      return {\n        disabledDate: function disabledDate(time) {\n          // 1.超过90天的查询时间，提示“起止时间不可超过90天”\n          // 2.查询截至时间不可以超过当前时间\n          var before = dayjs(_this.minDate).startOf('day').subtract(89, 'days').valueOf();\n          var after = dayjs(_this.minDate).endOf('day').add(89, 'days').valueOf();\n          var now = dayjs().endOf('day').valueOf(); // 如果after-now大于0,说明选择时间在当前时间90天之前\n\n          if (after - now < 0) {\n            // message({\n            // \ttype: 'error',\n            // \tmessage: '起止时间不可超过90天'\n            // })\n            return time.getTime() > after || time.getTime() < before;\n          } else if (_this.minDate) {\n            return time.getTime() > now || time.getTime() < before;\n          } else {\n            return time.getTime() > now;\n          }\n        },\n        onPick: function onPick(_ref) {\n          var maxDate = _ref.maxDate,\n              minDate = _ref.minDate;\n\n          if (!maxDate) {\n            _this.minDate = minDate;\n          }\n        }\n      };\n    }\n  }),\n  watch: {\n    drawer: {\n      handler: function handler(val) {\n        this.elDrawer = val;\n      },\n      immediate: true\n    },\n    ipdata: {\n      handler: function handler(val) {\n        var _this2 = this;\n\n        console.log('val :', val);\n\n        if (val) {\n          this.$nextTick(function () {\n            _this2.$refs.ipform.resetFields();\n          });\n          this.loadData();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    loadData: function loadData() {\n      var _this3 = this;\n\n      this.loading = true;\n      var form = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startTime: this.form.time ? this.form.time[0] : this.form.time[0],\n        endTime: this.form.time ? this.form.time[1] : this.form.time[1],\n        playerId: this.ipdata.playerId,\n        type: 0\n      };\n      this.$api.memberLoginLog(form).then(function (_) {\n        if (_.code === 200) {\n          var data = _.data;\n          _this3.list = data.record;\n          _this3.total = data.totalRecord;\n        }\n\n        _this3.loading = false;\n      }).catch(function (err) {\n        if (err) {\n          _this3.loading = false;\n        }\n      });\n    },\n    handleIP: function handleIP(data) {\n      this.historyRecordShow = true;\n      this.recordData = data;\n    },\n    handleSearch: function handleSearch() {\n      if (!this.form.time || this.form.time === '') {\n        return this.$message({\n          message: this.$t('members_list_components_iplogin_667'),\n          type: 'error',\n          duration: 5 * 1000\n        });\n      }\n\n      this.minDate = null;\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var end = dayjs().endOf('day').valueOf();\n      var start = dayjs().startOf('day').subtract(6, 'd').valueOf();\n      this.minDate = null;\n      this.form = {\n        time: [start, end]\n      };\n      this.initList();\n    },\n    handleCurrentChange: function handleCurrentChange() {\n      this.loadData();\n    },\n    handleClose: function handleClose() {\n      this.$emit('update:drawer', false);\n    },\n    getEnName: function getEnName(row) {\n      if (Cookies.get('language') === 'zh') {\n        return row.city;\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return row.cityEnglish;\n      }\n\n      return '-';\n    }\n  }\n};",null]}