{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\subAccount\\components\\RoleDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\subAccount\\components\\RoleDetail.vue","mtime":1615171048109},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { generateTitle } from '@/utils/i18n';\nimport { message } from '@/utils/message';\nexport default {\n  name: 'Editrole',\n  props: {\n    type: {\n      type: Number,\n      default: 0\n    },\n    assignedPermissions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    detailPermissions: {\n      type: Array,\n      default: function _default() {\n        return {};\n      }\n    },\n    roledata: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      transferKey: 0,\n      checkedKeys: [],\n      ps: [],\n      form: {\n        roleName: '',\n        remark: ''\n      },\n      direction: 'ttb',\n      memoryRemark: '',\n      // 用于判断是否做修改,\n      memoryIds: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['userInfo'])), {}, {\n    defaultProps: function defaultProps() {\n      return {\n        label: function label(data) {\n          return generateTitle(data.permissionName);\n        },\n        children: 'children'\n      };\n    },\n    rules: function rules() {\n      var _this = this;\n\n      var validRoleName = function validRoleName(rule, value, callback) {\n        if (!value) {\n          callback(new Error(_this.$t('authoritymanagement_rolemanage_components_roledetail_4')));\n        } else if (value && value.length > 20) {\n          callback(new Error(_this.$t('authoritymanagement_rolemanage_components_roledetail_5')));\n        } else if (!/^[\\u4e00-\\u9fa5]{1,20}$/.test(value)) {\n          callback(new Error(_this.$t('authoritymanagement_rolemanage_components_roledetail_6')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        roleName: [{\n          required: true,\n          validator: validRoleName,\n          trigger: 'blur'\n        }]\n      };\n    }\n  }),\n  watch: {\n    roledata: {\n      handler: function handler(newVal, old) {\n        if (newVal.id) {\n          this.form.roleName = newVal.roleName;\n          this.form.remark = newVal.remark;\n          this.memoryRemark = newVal.remark;\n          this.form.id = newVal.id;\n          this.form.systemType = newVal.systemType;\n        } else {\n          this.resetForm();\n        }\n      },\n      immediate: true,\n      deep: true\n    },\n    detailPermissions: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal) {\n          this.ps = newVal;\n          this.$nextTick(function () {\n            // 叶子节点平铺\n            var doms = document.querySelectorAll('.el-tree-node__content > .is-leaf') || [];\n            doms.length !== 0 && doms.forEach(function (node) {\n              node.parentNode.classList.add('tile');\n            });\n          });\n        }\n      },\n      deep: true\n    },\n    assignedPermissions: {\n      handler: function handler(newVal, oldVal) {\n        var _this2 = this;\n\n        if (newVal.length && newVal.length > 0) {\n          newVal.forEach(function (element) {\n            if (element.includes('list')) {\n              _this2.memoryIds.push(element.replace('list', ''));\n            } else {\n              _this2.memoryIds.push(element);\n            }\n          });\n          this.$refs.tree.setCheckedKeys([]);\n          this.$nextTick(function () {\n            _this2.checkIfAllChecked();\n          });\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    checkIfAllChecked: function checkIfAllChecked() {\n      var arr = this.filterPS(this.ps);\n      arr = arr.filter(function (val) {\n        return !val.id.includes('list');\n      });\n\n      if (arr.length <= this.assignedPermissions.length) {\n        this.checkedAll = true;\n      } else {\n        this.checkedAll = false;\n      }\n    },\n    filterPS: function filterPS(ps) {\n      var list = [];\n\n      var getList = function getList(ps) {\n        ps.forEach(function (item) {\n          // item.disabled = true\n          if (item.children) {\n            list.push(item);\n            getList(item.children);\n          } else {\n            list.push(item);\n          }\n        });\n      };\n\n      getList(ps);\n      return list;\n    },\n    resetForm: function resetForm() {\n      this.form = {};\n      this.checkedAll = false;\n    },\n    handleSure: function handleSure() {\n      var _this3 = this;\n\n      var permissionKeys = [];\n      var keys = this.$refs.tree.getCheckedKeys() || [];\n      var halfKeys = this.$refs.tree.getHalfCheckedKeys() || [];\n      permissionKeys = keys.concat(halfKeys); // 过滤掉id为'list'的值\n\n      permissionKeys = permissionKeys.filter(function (element) {\n        return !element.includes('list');\n      });\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          if (keys.length === 0) {\n            return message({\n              type: 'error',\n              message: _this3.$t('authoritymanagement_rolemanage_components_roledetail_7')\n            });\n          } // 获取参数\n\n\n          var form = _objectSpread({\n            permissionIds: permissionKeys\n          }, _this3.form);\n\n          console.log('form :', form);\n\n          if (_this3.type === 0) {\n            _this3.$api.merchantAddRole(form).then(function (_) {\n              if (_.code === 200) {\n                message({\n                  type: 'success',\n                  message: _this3.$t('authoritymanagement_rolemanage_components_roledetail_8', [form.roleName])\n                });\n\n                _this3.$emit('handleCallBack');\n\n                _this3.$emit('closeDetail');\n              }\n            });\n          } else {\n            var beforeData = {\n              remark: _this3.memoryRemark,\n              ids: _this3.memoryIds.sort()\n            };\n            var nowData = {\n              remark: _this3.form.remark,\n              ids: form.permissionIds.sort()\n            };\n\n            if (JSON.stringify(beforeData) === JSON.stringify(nowData)) {\n              return message({\n                message: _this3.$t('authoritymanagement_rolemanage_components_roledetail_9'),\n                type: 'warning'\n              });\n            }\n\n            _this3.$api.merchantEditRole(form).then(function (_) {\n              if (_.code === 200) {\n                _this3.resetDialog();\n\n                message({\n                  type: 'success',\n                  message: _this3.$t('authoritymanagement_rolemanage_components_roledetail_10', [form.roleName])\n                });\n\n                _this3.$emit('handleCallBack');\n\n                _this3.$emit('closeDetail');\n              }\n            });\n          }\n        } else {\n          var isError = document.getElementsByClassName('is-error');\n          setTimeout(function () {\n            isError[0].querySelector('input').focus();\n          }, 500);\n        }\n      });\n    },\n    handleClose: function handleClose() {\n      this.$emit('closeDetail');\n    },\n    handleClosed: function handleClosed() {\n      this.resetDialog();\n    },\n    resetDialog: function resetDialog() {\n      this.$refs.form.resetFields();\n      this.transferKey = +new Date();\n      this.memoryRemark = '';\n      this.memoryIds = [];\n    }\n  }\n};",null]}