{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\mixins\\tier.js","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\mixins\\tier.js","mtime":1615171048049},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _toConsumableArray from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// 层级表格\nexport default {\n  data: function data() {\n    return {\n      tableLists: [{}],\n      levels: []\n    };\n  },\n  methods: {\n    showChildren: function showChildren(same, level, opened, params) {\n      var tableIndex = level - 1;\n\n      if (same && opened || this.hasSearch && opened) {\n        this.tableLists[tableIndex].opened = false;\n        this.tableLists = this.tableLists.slice(0, tableIndex + 1);\n        this.levels = this.levels.slice(0, tableIndex);\n      } else if (!opened) {\n        if (level === 1) this.hasSearch = false;\n        this.tableLists[tableIndex].opened = true;\n        this.tableLists[tableIndex].iconLoading = true;\n        this.tableLists[tableIndex].currentAgentId = params.agentId;\n        this.tableLists[tableIndex].currentType = params.accountType;\n        this.modifyData(level + 1, params, tableIndex);\n      } else {\n        this.tableLists = this.tableLists.slice(0, tableIndex + 1);\n        this.tableLists[tableIndex].iconLoading = true;\n        this.tableLists[tableIndex].currentAgentId = params.agentId;\n        this.tableLists[tableIndex].currentType = params.accountType;\n        this.levels = this.levels.slice(0, tableIndex);\n        this.modifyData(level + 1, params, tableIndex);\n      }\n\n      console.log(this.tableLists);\n    },\n\n    /**\r\n     * actType 1为增加 2为修改\r\n     */\n    mixinModifyData: function mixinModifyData(level, params, tableIndex, actType, api) {\n      var _this = this;\n\n      var extraParams = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (actType !== 2) {\n        this.levels.push({\n          level: level,\n          name: params.agentName\n        });\n      } else {\n        this.tableLists.splice(tableIndex, 1, _objectSpread(_objectSpread({}, this.tableLists[tableIndex]), {}, {\n          loading: true\n        }));\n      }\n\n      var newParams = _objectSpread({\n        pageSize: params.pageSize,\n        pageIndex: params.pageIndex,\n        type: 2\n      }, extraParams);\n\n      this.$api[api](newParams).then(function (_) {\n        if (_.code === 200) {\n          var data = _.data;\n          var total = data.totalRecord;\n          var list = data.record;\n\n          if (actType !== 2) {\n            var modifyData = {\n              level: level,\n              total: total,\n              parentName: params.agentName,\n              parentId: params.agentId,\n              accountType: params.accountType,\n              levels: _toConsumableArray(_this.levels),\n              opened: false,\n              data: list\n            };\n\n            _this.tableLists.splice(tableIndex, 1, _objectSpread(_objectSpread({}, _this.tableLists[tableIndex]), {}, {\n              iconLoading: false\n            }));\n\n            _this.tableLists.push(modifyData);\n\n            _this.scrollToBottom();\n          } else {\n            var _modifyData = _objectSpread(_objectSpread({}, _this.tableLists[tableIndex]), {}, {\n              total: total,\n              data: list,\n              loading: false\n            });\n\n            _this.tableLists.splice(tableIndex, 1, _modifyData);\n          }\n        }\n      }).catch(function () {\n        if (actType !== 2) {\n          _this.tableLists.splice(tableIndex, 1, _objectSpread(_objectSpread({}, _this.tableLists[tableIndex]), {}, {\n            iconLoading: false\n          }));\n        } else {\n          _this.tableLists.splice(tableIndex, 1, _objectSpread(_objectSpread({}, _this.tableLists[tableIndex]), {}, {\n            loading: false\n          }));\n        }\n      });\n    },\n    scrollToBottom: function scrollToBottom() {\n      this.$nextTick(function () {\n        var elm = document.querySelector('.game-container');\n        var h = elm && elm.getBoundingClientRect().height;\n        window && window.scrollTo(0, h + 100);\n      });\n    },\n    mixinHandleSearch: function mixinHandleSearch(api, extraParams) {\n      var _this2 = this;\n\n      this.levels = [];\n      this.hasSearch = true;\n      this.pageIndex = 1;\n      this.tableLists = [];\n      this.$api.reportSearch({\n        searchAgentId: this.form.agentId\n      }).then(function (res) {\n        if (res.code === 200) {\n          var parentPath = res.data.parentPath || '';\n          var ids = parentPath.split('/') || [];\n          var finalIds = ids.filter(function (val) {\n            return val;\n          }); // 过滤掉空值\n\n          Promise.all(finalIds.map(function (val, index) {\n            return _this2.getDataInturn(val, index + 1, api, extraParams);\n          })).then(function (result) {\n            localStorage.setItem('mixSearch', '1');\n            setTimeout(function () {\n              localStorage.removeItem('mixSearch');\n            }, 10000);\n            var lists = result || [];\n            var levels = [];\n            lists.forEach(function (element, index) {\n              if (index !== 0) {\n                levels.push({\n                  level: element.level,\n                  agentId: lists[index - 1].data[0] && lists[index - 1].data[0].agentId,\n                  name: lists[index - 1].data[0] && lists[index - 1].data[0].agentName\n                });\n                element.levels = [].concat(levels);\n              }\n            });\n            _this2.levels = levels;\n            lists.forEach(function (element, index) {\n              if (!lists[index + 1]) {\n                element.opened = false;\n              }\n            });\n            _this2.tableLists = lists;\n          });\n        }\n      });\n    },\n    // 依次调用，得到结果\n    getDataInturn: function getDataInturn(id, level, api, extraParams) {\n      var _this3 = this;\n\n      var params = _objectSpread({\n        pageSize: 10,\n        pageIndex: 1,\n        searchAgentId: id,\n        agentId: id,\n        type: 1\n      }, extraParams);\n\n      return new Promise(function (resolve, reject) {\n        _this3.$api[api](params).then(function (res) {\n          if (res.code === 200) {\n            var list = res.data.record;\n            var total = res.data.totalRecord;\n            var data = {\n              level: level,\n              total: total,\n              opened: true,\n              iconLoading: false,\n              currentAgentId: id,\n              data: list\n            };\n            resolve(data);\n          } else {\n            reject(res);\n          }\n        });\n      });\n    }\n  }\n};",null]}