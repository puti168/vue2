{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\betrecord\\components\\BetDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\betrecord\\components\\BetDetail.vue","mtime":1617695097415},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ResultShow from '@/components/ResultShow';\nimport { mapGetters } from 'vuex';\nimport { formatCurrency } from '@/utils';\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'BetDetail',\n  components: {\n    ResultShow: ResultShow\n  },\n  props: {\n    detailVisible: {\n      type: Boolean,\n      default: false\n    },\n    currentData: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      form: {\n        limitRed: -1,\n        accountStatus: 1,\n        ifBet: 1,\n        mostHigh: 0\n      },\n      recordList: [{\n        value: 0,\n        label: this.$t('abnormalround_players_components_historyrecord_96')\n      }, {\n        value: 1,\n        label: this.$t('abnormalround_players_components_historyrecord_97')\n      }, {\n        value: 2,\n        label: this.$t('abnormalround_players_components_historyrecord_98')\n      }, {\n        value: 3,\n        label: this.$t('abnormalround_players_components_historyrecord_99')\n      }, {\n        value: 4,\n        label: this.$t('agent_24')\n      }],\n      deviceTypeList: [{\n        value: 1,\n        label: 'PC'\n      }, {\n        value: 2,\n        label: 'H5'\n      }, {\n        value: 3,\n        label: 'APP'\n      }, {\n        value: 4,\n        label: 'APP'\n      }, {\n        value: 5,\n        label: this.$t('new_69')\n      }],\n      detailData: {},\n      visible: false\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['userInfo'])), mapGetters(['globalDics'])), {}, {\n    gamemode: function gamemode() {\n      var types = this.globalDics.gamemode || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    betflag: function betflag() {\n      var types = this.globalDics.betflag || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    gametype: function gametype() {\n      var types = this.globalDics.gametype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    }\n  }),\n  watch: {\n    detailVisible: function detailVisible(val) {\n      this.visible = val;\n    },\n    currentData: function currentData(val) {\n      this.detailData = val;\n    }\n  },\n  methods: {\n    formatCurrency: formatCurrency,\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    cancel: function cancel() {\n      this.$emit('update:detailVisible', false);\n    },\n    deviceTypeFilter: function deviceTypeFilter(value) {\n      var label = '';\n      this.deviceTypeList.forEach(function (item) {\n        if (Number(item.value) === Number(value)) {\n          label = item.label;\n        }\n      });\n      return label;\n    },\n    recordTypeFilter: function recordTypeFilter(value) {\n      var label = '';\n      this.recordList.forEach(function (item) {\n        if (Number(item.value) === Number(value)) {\n          label = item.label;\n        }\n      });\n      return label;\n    },\n    filterGameMode: function filterGameMode(c) {\n      var arr = this.gamemode || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterBetflag: function filterBetflag(c) {\n      var arr = this.betflag || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterRoom: function filterRoom(value) {\n      var val = value === 1 ? this.$t('members_list_index_682') : this.$t('members_list_index_683');\n      return val;\n    },\n    filterGametype: function filterGametype(c) {\n      var arr = this.gametype || [];\n      var find = arr.find(function (item) {\n        return item.label === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    }\n  }\n};",null]}