{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\betrecord\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\members\\betrecord\\index.vue","mtime":1617695097416},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport store from 'storejs';\nimport { mapGetters } from 'vuex';\nimport list from '@/mixins/list';\nimport BetDetail from \"./components/BetDetail\";\nimport SelectAgentTree from '@/components/SelectAgentTree';\nimport ResultShow from '@/components/ResultShow';\nimport Video from '@/components/Video';\nimport dayjs from 'dayjs';\nimport { routerNames } from '@/utils/consts';\nimport { i18nName } from '@/utils/i18n';\nimport router from '@/router';\nimport IPLogin from '@/views/abnormalRound/players/components/IPLogin';\nimport Cookies from 'js-cookie';\nimport QklModal from '@/components/QklModal';\nexport default {\n  name: routerNames.membersbetrecord,\n  components: {\n    BetDetail: BetDetail,\n    SelectAgentTree: SelectAgentTree,\n    ResultShow: ResultShow,\n    Video: Video,\n    IPLogin: IPLogin,\n    QklModal: QklModal\n  },\n  mixins: [list],\n  data: function data() {\n    var end = dayjs().endOf('day');\n    var start = dayjs().startOf('day');\n    return {\n      cardDeatilText1: '',\n      cardDeatilText2: '',\n      cardDeatilText3: '',\n      drawer: false,\n      ipData: null,\n      hadSearch: false,\n      loading: false,\n      releaseTime: '',\n      betDialogVisible: false,\n      dialogShow: false,\n      currencyList: [],\n      dialogShow2: false,\n      deviceList: [{\n        value: 'APP',\n        label: 'APP'\n      }, {\n        value: 'H5',\n        label: 'H5'\n      }, {\n        value: 'PC',\n        label: 'PC'\n      }],\n      deviceTypeList: [{\n        value: 1,\n        label: 'PC'\n      }, {\n        value: 2,\n        label: 'H5'\n      }, {\n        value: 3,\n        label: 'APP'\n      }, {\n        value: 4,\n        label: 'APP'\n      }, {\n        value: 5,\n        label: this.$t('new_69')\n      }],\n      recordList: [{\n        value: 0,\n        label: this.$t('abnormalround_players_components_historyrecord_96')\n      }, {\n        value: 1,\n        label: this.$t('abnormalround_players_components_historyrecord_97')\n      }, {\n        value: 2,\n        label: this.$t('abnormalround_players_components_historyrecord_98')\n      }, {\n        value: 3,\n        label: this.$t('abnormalround_players_components_historyrecord_99')\n      }, {\n        value: 4,\n        label: this.$t('agent_24')\n      }],\n      betStatusList: [this.$t('members.members_16'), this.$t('members.members_17'), this.$t('members.members_18'), this.$t('members.members_19'), this.$t('members.members_20'), this.$t('members.members_21')],\n      form: {\n        time: [+start, +end],\n        time2: '',\n        gameMode: -1,\n        playerLoginName: '',\n        id: '',\n        roundNo: '',\n        gameType: -1,\n        betStatus: -1,\n        anchorRoom: -1,\n        currency: -1,\n        betPoint: -1,\n        recordType: -1,\n        isEqLoginName: 0,\n        betflag: -1,\n        searchAgentId: '',\n        playerId: '',\n        loginIp: '',\n        startBetAmount: '',\n        endBetAmount: '',\n        orderProp: 'betAt',\n        order: 'descending',\n        platformId: -1,\n        deviceType: -1\n      },\n      amountData: {\n        totalPlayerNum: '-',\n        netAmountSum: '-',\n        apiRate: '-',\n        paymentAmountSum: '-',\n        betAmountSum: '-',\n        payAmountSum: '-',\n        totalNum: '-',\n        validBetAmountSum: '-',\n        netRate: '-'\n      },\n      videoSrc: '',\n      showVideo: false,\n      currentData: {},\n      currentData2: {},\n      userAgentType: '',\n      detailVisible: false,\n      defaultColumn: store.get('betrecordColumn') ? store.get('betrecordColumn') : [{\n        id: 1,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_591'\n      }, {\n        id: 2,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_592'\n      }, {\n        id: 4,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_593'\n      }, {\n        id: 15,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_594'\n      }, {\n        id: 12,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_595'\n      }, {\n        id: 13,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_596'\n      }, {\n        id: 14,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_597'\n      }, {\n        id: 17,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_598'\n      }, {\n        id: 18,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_599'\n      }, {\n        id: 19,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_600'\n      }, {\n        id: 7,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_601'\n      }, {\n        id: 10,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_602'\n      }, {\n        id: 11,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_603'\n      }, {\n        id: 22,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_604'\n      }, {\n        id: 16,\n        checked: true,\n        cancel: true,\n        show: false,\n        name: 'members_betrecord_listcolumn_605'\n      }, // 默认不展示\n      {\n        id: 3,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_606'\n      }, {\n        id: 5,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_607'\n      }, {\n        id: 8,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_608'\n      }, {\n        id: 9,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_609'\n      }, {\n        id: 20,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_610'\n      }, {\n        id: 21,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_betrecord_listcolumn_611'\n      }, {\n        id: 25,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'new_68'\n      }, {\n        id: 31,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'members_list_components_historyrecord_638'\n      }, {\n        id: 32,\n        checked: false,\n        cancel: true,\n        show: true,\n        name: 'merchant_dailyrateaccount_components_tablecomp_764'\n      }],\n      // 是否展示列表选择\n      isShowChoiceColumn: false,\n      prevIndex: 1,\n      defaultSort: {\n        prop: 'betAt',\n        order: 'descending'\n      },\n      tableKey: +new Date(),\n      roundNo: '',\n      betPointList: {},\n      platforms: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters(['userInfo'])), mapGetters(['globalDics'])), {}, {\n    gametype: function gametype() {\n      var types = this.globalDics.gametype || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    gamemode: function gamemode() {\n      var types = this.globalDics.gamemode || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    betstatus: function betstatus() {\n      var types = this.globalDics.betstatus || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    betflag: function betflag() {\n      var types = this.globalDics.betflag || [];\n      return types.map(function (item) {\n        return {\n          value: item.value,\n          label: item.text,\n          zh: item.text,\n          en: item.englishText\n        };\n      });\n    },\n    columns: function columns() {\n      var arr = this.defaultColumn;\n\n      if (this.userInfo.agentCode !== 'AAAAA') {\n        arr = arr.filter(function (_ref) {\n          var id = _ref.id;\n          return id !== 32;\n        });\n        arr = arr.filter(function (_ref2) {\n          var id = _ref2.id;\n          return id !== 31;\n        });\n      }\n\n      return arr;\n    }\n  }),\n  watch: {\n    'form.time': function formTime(val) {\n      if (val) {\n        this.form.time2 = '';\n      }\n    },\n    'form.time2': function formTime2(val) {\n      if (val) {\n        this.form.time = '';\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.loadCurrenyDate();\n    this.loadbetPoint();\n    document.addEventListener('click', this.showColumn);\n    var w = this.$refs.content.getBoundingClientRect().width;\n    this.$refs.footerCon.style.width = w - 25 + 'px';\n\n    window.onresize = function () {\n      var w = _this.$refs.content.getBoundingClientRect().width;\n\n      _this.$refs.footerCon.style.width = w - 25 + 'px';\n    };\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('click', this.showColumn);\n  },\n  activated: function activated() {\n    if (localStorage.getItem('betPoint')) {\n      this.form.isEqLoginName = 1;\n      this.reloadData();\n    }\n\n    if (localStorage.getItem('roundNo2')) {\n      this.form.roundNo = localStorage.getItem('roundNo2');\n      this.form.playerId = localStorage.getItem('playerId2');\n      localStorage.removeItem('roundNo2');\n      localStorage.removeItem('playerId2');\n      this.form.isEqLoginName = 1;\n      this.form.time = [];\n      this.loadData();\n    }\n  },\n  methods: {\n    classFilter: function classFilter(item) {\n      switch (item) {\n        case 0:\n          return 'successState';\n\n        case 1:\n          return 'disableState';\n\n        case 2:\n          return 'dangerState';\n\n        case 4:\n          return 'warningState';\n\n        case 6:\n          return 'infoState';\n\n        default:\n          break;\n      }\n    },\n    // 失去焦点的时候重置\n    onTimeBlur: function onTimeBlur() {\n      this.minDate = null;\n    },\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    loadCurrenyDate: function loadCurrenyDate() {\n      var _this2 = this;\n\n      this.$api.getCurrencyComboBoxList({\n        pageIndex: 1,\n        pageSize: 1000\n      }).then(function (_) {\n        var data = _.data;\n        _this2.currencyList = data.record;\n      });\n    },\n    loadbetPoint: function loadbetPoint() {\n      var _this3 = this;\n\n      this.$api.betPoint().then(function (_) {\n        var data = _.data;\n        _this3.betPointList = data;\n      });\n    },\n    deviceTypeFilter: function deviceTypeFilter(value) {\n      console.log(value);\n      var label = '';\n      this.deviceTypeList.forEach(function (item) {\n        if (Number(item.value) === Number(value)) {\n          label = item.label;\n        }\n      });\n      return label;\n    },\n    showColumn: function showColumn(e) {\n      var icon = document.getElementById('icon');\n      var list = document.getElementById('list');\n\n      if (icon && !icon.contains(e.target) && list && !list.contains(e.target)) {\n        this.isShowChoiceColumn = false;\n      }\n    },\n    gameTypeChange: function gameTypeChange() {\n      this.form.betPoint = -1;\n    },\n    reloadData: function reloadData() {\n      var _this4 = this;\n\n      this.loading = true;\n      var initData = {\n        pageSize: 100000,\n        pageIndex: this.pageIndex\n      };\n      var requestData = {\n        roundNo: localStorage.getItem('roundNo'),\n        playerId: localStorage.getItem('playerId'),\n        betPointName: localStorage.getItem('betPoint')\n      };\n      localStorage.removeItem('roundNo');\n      localStorage.removeItem('playerId');\n      localStorage.removeItem('betPoint');\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.memberQueryBetRecord(form).then(function (_) {\n        _this4.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this4.list = data.record;\n          _this4.amountData = data.summary || {\n            totalPlayerNum: '-',\n            netAmountSum: '-',\n            apiRate: '-',\n            paymentAmountSum: '-',\n            betAmountSum: '-',\n            payAmountSum: '-',\n            totalNum: '-',\n            validBetAmountSum: '-',\n            netRate: '-'\n          };\n          _this4.total = data.totalRecord;\n        }\n      }).catch(function () {\n        _this4.pageIndex = _this4.prevIndex;\n        _this4.list = [];\n        _this4.amountData = {\n          totalPlayerNum: '-',\n          netAmountSum: '-',\n          apiRate: '-',\n          paymentAmountSum: '-',\n          betAmountSum: '-',\n          payAmountSum: '-',\n          totalNum: '-',\n          validBetAmountSum: '-',\n          netRate: '-'\n        };\n        _this4.total = 0;\n        _this4.loading = false;\n      });\n      this.$api.queryGamingRoom().then(function (res) {\n        _this4.platforms = res.data;\n      });\n    },\n    recordTypeFilter: function recordTypeFilter(value) {\n      var label = '';\n      this.recordList.forEach(function (item) {\n        if (Number(item.value) === Number(value)) {\n          label = item.label;\n        }\n      });\n      return label;\n    },\n    loadData: function loadData() {\n      var _this5 = this;\n\n      if (localStorage.getItem('playerId')) {\n        this.form.playerLoginName = localStorage.getItem('playerLoginName');\n        this.form.playerId = localStorage.getItem('playerId');\n        this.form.isEqLoginName = 1;\n        localStorage.removeItem('playerId');\n        localStorage.removeItem('playerLoginName');\n      }\n\n      if (!this.form.time[0] && !this.form.roundNo && !this.form.time2[0]) {\n        this.$message({\n          type: 'error',\n          message: this.$t('wallet_11')\n        });\n        return;\n      }\n\n      if (this.form.time[0] < 1556640000000) {\n        this.$message({\n          message: this.$t('timeerror'),\n          type: 'error'\n        });\n        return;\n      }\n\n      this.loading = true;\n      var initData = {\n        pageSize: this.pageSize,\n        pageIndex: this.pageIndex,\n        startBetTime: this.form.time[0],\n        endBetTime: this.form.time[1],\n        startUpdateTime: this.form.time2[0],\n        endUpdateTime: this.form.time2[1],\n        playerLoginName: this.form.playerLoginName,\n        anchorRoom: this.form.anchorRoom,\n        searchAgentId: this.form.agentId,\n        recordType: this.form.recordType,\n        currency: this.form.currency,\n        isEqLoginName: this.form.isEqLoginName,\n        betPoint: this.form.betPoint,\n        loginIp: this.form.loginIp,\n        startBetAmount: this.form.startBetAmount,\n        endBetAmount: this.form.endBetAmount,\n        orderProp: this.form.orderProp,\n        order: this.form.order,\n        roundNo: this.form.roundNo,\n        playerId: this.form.playerId,\n        platformId: this.form.platformId,\n        deviceType: this.form.deviceType\n      };\n      var requestData = this.hadSearch ? {\n        gameMode: this.form.gameMode,\n        id: this.form.id,\n        gameType: this.form.gameType,\n        betStatus: this.form.betStatus,\n        betFlag: this.form.betflag\n      } : {};\n\n      var form = _objectSpread(_objectSpread({}, initData), requestData);\n\n      this.$api.memberQueryBetRecord(form).then(function (_) {\n        _this5.loading = false;\n\n        if (_.code === 200) {\n          var data = _.data;\n          _this5.list = data.record;\n          _this5.amountData = data.summary || {\n            totalPlayerNum: '-',\n            netAmountSum: '-',\n            apiRate: '-',\n            paymentAmountSum: '-',\n            betAmountSum: '-',\n            payAmountSum: '-',\n            totalNum: '-',\n            validBetAmountSum: '-',\n            netRate: '-'\n          };\n          _this5.total = data.totalRecord;\n        }\n      }).catch(function () {\n        _this5.pageIndex = _this5.prevIndex;\n        _this5.list = [];\n        _this5.amountData = {\n          totalPlayerNum: '-',\n          netAmountSum: '-',\n          apiRate: '-',\n          paymentAmountSum: '-',\n          betAmountSum: '-',\n          payAmountSum: '-',\n          totalNum: '-',\n          validBetAmountSum: '-',\n          netRate: '-'\n        };\n        _this5.total = 0;\n        _this5.loading = false;\n      });\n      this.$api.queryGamingRoom().then(function (res) {\n        console.log('res :>> ', res);\n        _this5.platforms = res.data;\n      });\n    },\n    filterGameMode: function filterGameMode(c) {\n      var arr = this.gamemode || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterBetflag: function filterBetflag(c) {\n      var arr = this.betflag || [];\n      var find = arr.find(function (item) {\n        return Number(item.value) === Number(c);\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.prevIndex = this.pageIndex;\n      this.pageIndex = val;\n      this.loadData();\n    },\n    handleReset: function handleReset() {\n      var _this6 = this;\n\n      if (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\n        router.push(this.$route.path, function () {\n          _this6.resetCommon();\n        });\n      } else {\n        this.resetCommon();\n      }\n    },\n    resetCommon: function resetCommon() {\n      var end = dayjs().endOf('day');\n      var start = dayjs().startOf('day');\n      this.hadSearch = false;\n      this.form = {\n        time: '',\n        time2: [+start, +end],\n        gameMode: -1,\n        playerLoginName: '',\n        id: '',\n        roundNo: '',\n        playerId: '',\n        gameType: -1,\n        anchorRoom: -1,\n        betStatus: -1,\n        currency: -1,\n        isEqLoginName: 0,\n        betPoint: -1,\n        recordType: -1,\n        platformId: -1,\n        deviceType: -1,\n        betflag: -1,\n        searchAgentId: '',\n        orderProp: 'betAt',\n        order: 'descending'\n      };\n      this.defaultSort = {\n        prop: 'betAt',\n        order: 'descending'\n      };\n      this.$refs.ParentTable.clearSort();\n      this.tableKey = +new Date();\n      this.initList();\n    },\n    handleSearch: function handleSearch() {\n      this.pageIndex = 1;\n      this.hadSearch = true;\n      this.loadData();\n    },\n    getSummaries: function getSummaries(param) {\n      var _this7 = this;\n\n      var columns = param.columns;\n      var sums = [];\n      columns.forEach(function (column, index) {\n        if (!column.property && index === 0) {\n          sums[index] = _this7.$t('members_betrecord_index_580');\n          return;\n        }\n\n        if (column.property === 'roundNo') {\n          sums[index] = _this7.$t('members_betrecord_index_554') + _this7.formatCurrency(_this7.amountData[\"betAmountSum\"]);\n        }\n\n        if (column.property === 'agentName') {\n          sums[index] = _this7.$t('members_betrecord_index_555') + _this7.formatCurrency(_this7.amountData[\"validBetAmountSum\"]);\n        }\n\n        if (column.property === 'playerLoginName') {\n          sums[index] = _this7.$t('members_betrecord_index_556') + _this7.formatCurrency(_this7.amountData[\"payAmountSum\"]);\n        }\n\n        if (column.property === 'betAt') {\n          sums[index] = _this7.$t('members_betrecord_index_557') + _this7.formatCurrency(_this7.amountData[\"netAmountSum\"]);\n        }\n\n        if (column.property === 'betPoint') {\n          sums[index] = _this7.$t('members_betrecord_index_558') + _this7.amountData[\"apiRate\"];\n        }\n\n        if (column.property === 'betAmount') {\n          sums[index] = _this7.$t('members_betrecord_index_559') + _this7.amountData[\"paymentAmountSum\"];\n        }\n\n        if (column.property === 'validBetAmount') {\n          sums[index] = _this7.$t('members_betrecord_index_560') + _this7.amountData[\"netRate\"];\n        }\n      });\n      return sums;\n    },\n    checkDetail: function checkDetail(row) {\n      this.detailVisible = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    showChoiceColumn: function showChoiceColumn() {\n      this.isShowChoiceColumn = !this.isShowChoiceColumn;\n    },\n    showResult: function showResult(row) {\n      this.dialogShow = true;\n      this.currentData = _objectSpread({}, row);\n    },\n    showCardDetail: function showCardDetail(row) {\n      this.dialogShow2 = true;\n      this.roundNo = row.roundNo;\n    },\n    handleShowVideo: function handleShowVideo(path, row) {\n      this.showVideo = true;\n      this.videoSrc = path;\n      this.currentData = _objectSpread({}, row);\n    },\n    checked: function checked(id) {\n      var index = this.columns.findIndex(function (val) {\n        return val.id === id;\n      });\n\n      if (index > -1) {\n        return this.columns[index].checked;\n      }\n    },\n    onCheckBoxChange: function onCheckBoxChange(value, id) {\n      var index = this.defaultColumn.findIndex(function (val) {\n        return val.id === id;\n      });\n\n      if (index > -1) {\n        this.defaultColumn.splice(index, 1, _objectSpread(_objectSpread({}, this.columns[index]), {}, {\n          checked: value\n        }));\n        store.set('betrecordColumn', this.defaultColumn);\n      }\n    },\n    // ip登录轨迹\n    checkLoginIp: function checkLoginIp(row) {\n      this.drawer = true;\n      this.ipData = _objectSpread({}, row);\n    },\n    sortChange: function sortChange(val) {\n      if (localStorage.getItem('betPoint')) {\n        return localStorage.removeItem('betPoint');\n      }\n\n      if (localStorage.getItem('playerId')) {\n        return;\n      }\n\n      if (this.loading) {\n        return;\n      }\n\n      var prop = val.prop,\n          order = val.order;\n\n      if (order === null) {\n        this.form.orderProp === 'descending' ? val.order = 'descending' : val.order = 'ascending';\n        val.column.order = val.order;\n        this.form.orderProp = prop;\n        this.form.order = val.order;\n        this.loadData();\n        return val;\n      }\n\n      this.form.orderProp = prop;\n      this.form.order = order;\n      this.defaultSort = {\n        prop: prop,\n        order: order || 'descending'\n      };\n      this.loadData();\n      return val;\n    },\n    clearSrc: function clearSrc() {\n      this.videoSrc = '';\n    },\n    showHistory: function showHistory(row) {\n      if (this.hasPermission(119000015)) {\n        if (row.betFlag === 2 || row.betFlag === 4) {\n          return true;\n        } else if (row.gameTypeId === 2012 && row.betFlag === 1) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    },\n    filterGametype: function filterGametype(c) {\n      var arr = this.gametype || [];\n      var find = arr.find(function (item) {\n        return item.label === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    filterBetstatus: function filterBetstatus(c) {\n      var arr = this.betstatus || [];\n      var find = arr.find(function (item) {\n        return item.value === c;\n      });\n\n      if (Cookies.get('language') === 'zh') {\n        return find && find.zh || '-';\n      }\n\n      if (Cookies.get('language') === 'en') {\n        return find && find.en || '-';\n      }\n\n      return '-';\n    },\n    getTrueName: function getTrueName(name) {\n      return i18nName(name);\n    }\n  }\n};",null]}