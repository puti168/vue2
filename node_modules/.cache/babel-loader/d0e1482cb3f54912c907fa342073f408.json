{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\apiDocument\\components\\ApiUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\apiDocument\\components\\ApiUpload.vue","mtime":1617695097435},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/admin/Desktop/merchant-manager-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'BetDetail',\n  props: {\n    detailVisible: {\n      type: Boolean,\n      default: false\n    },\n    currentData: {\n      type: Object,\n      default: function _default() {}\n    },\n    types: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      accountForm: {\n        file: '',\n        textType: 1,\n        updateContent: '',\n        versionDate: ''\n      },\n      fileName: '',\n      formData: null,\n      file: null,\n      uploadKey: Date.now()\n    };\n  },\n  computed: {\n    accountFormRules: function accountFormRules() {\n      var _this = this;\n\n      /* eslint-disable */\n      var versionDateValidate = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(rule, value, callback) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log('value :>> ', value);\n\n                  if ((value + '').length !== 8) {\n                    callback(new Error(_this.$t('apidocument_components_apiupload_9')));\n                  } else {\n                    callback();\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function versionDateValidate(_x, _x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      var updateContentValidate = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(rule, value, callback) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!value || value.length > 500) {\n                    callback(new Error(_this.$t('merchant_merchantinfo_components_editaccount_9611')));\n                  } else {\n                    callback();\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function updateContentValidate(_x4, _x5, _x6) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var fileValidate = function fileValidate(rule, value, callback) {\n        if (!value) {\n          callback(new Error(_this.$t('merchant_merchantinfo_components_editaccount_96111')));\n        } else {\n          callback();\n        }\n      };\n\n      return {\n        versionDate: [{\n          required: true,\n          trigger: 'blur',\n          message: this.$t('apidocument_components_apiupload_9')\n        }, {\n          validator: versionDateValidate,\n          trigger: 'blur'\n        }],\n        updateContent: [{\n          required: true,\n          validator: updateContentValidate,\n          trigger: 'blur'\n        }],\n        file: [{\n          required: true,\n          trigger: 'blur',\n          validator: fileValidate\n        }]\n      };\n    }\n  },\n  watch: {\n    detailVisible: function detailVisible(val) {\n      this.visible = val;\n      this.reset();\n    }\n  },\n  methods: {\n    getAmoutColor: function getAmoutColor(value) {\n      if (value > 0) {\n        return 'green';\n      } else if (value < 0) {\n        return 'red';\n      }\n\n      return '';\n    },\n    cancel: function cancel() {\n      this.$emit('update:detailVisible', false);\n    },\n    uploadFiles: function uploadFiles(e) {\n      var files = e.target.files;\n      var file = files[0];\n      var formData = new FormData(); // formData重复的往一个值添加数据并不会被覆盖掉，可以全部接收到，可以通过formData.getAll('files')来查看所有插入的数据\n\n      formData.append('file', file);\n      this.file = file;\n      this.fileName = file.name;\n      this.accountForm.file = file.name;\n      this.formData = formData;\n    },\n    getFormData: function getFormData() {\n      var formData = new FormData();\n      formData.append('updateContent', this.accountForm.updateContent);\n      formData.append('textType', this.accountForm.textType);\n      formData.append('versionDate', this.accountForm.versionDate);\n      this.file && formData.append('file', this.file);\n      return formData;\n    },\n    commitAccount: function commitAccount() {\n      var _this2 = this;\n\n      this.$refs.accountForm.validate(function (valid) {\n        if (valid) {\n          var loading = _this2.$loading({\n            lock: true,\n            text: 'Loading',\n            spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.7)'\n          });\n\n          _this2.$api.addApiDocument(_this2.getFormData()).then(function (_) {\n            if (_.code === 200) {\n              _this2.$message({\n                message: _this2.$t('merchant.merchant_88'),\n                type: 'success'\n              });\n\n              _this2.$parent.updateList();\n\n              _this2.$emit('input', false);\n\n              _this2.$emit('update:detailVisible', false);\n            }\n\n            loading.close();\n          }).catch(function () {\n            loading.close();\n          });\n        }\n      });\n    },\n    reset: function reset() {\n      this.uploadKey = Date.now();\n      this.accountForm = {\n        file: '',\n        textType: 1,\n        updateContent: '',\n        versionDate: ''\n      };\n      this.fileName = '';\n      this.formData = null;\n      this.file = null;\n    }\n  }\n};",null]}