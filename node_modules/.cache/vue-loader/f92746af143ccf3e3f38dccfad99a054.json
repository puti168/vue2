{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\betlimit\\component\\LimitPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\gamemanagement\\betlimit\\component\\LimitPlan.vue","mtime":1615171048113},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { formatCurrency } from '@/utils'\r\nimport { mapGetters } from 'vuex'\r\nimport Cookies from 'js-cookie'\r\n\r\nexport default {\r\n\tprops: {\r\n\t\tdata: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => {}\r\n\t\t},\r\n\t\tvalue: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tstatus: 0,\r\n\t\t\tlimit: {},\r\n\t\t\toriginList: [],\r\n\t\t\tlist: [],\r\n\t\t\ttabList: []\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(['globalDics']),\r\n\t\tgametype() {\r\n\t\t\tconst types = this.globalDics.gametype || []\r\n\t\t\treturn types.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tlabel: item.text,\r\n\t\t\t\t\tzh: item.text,\r\n\t\t\t\t\ten: item.englishText\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tdata: {\r\n\t\t\thandler(val) {\r\n\t\t\t\tconsole.log('val :', val)\r\n\t\t\t\tif (val.id) {\r\n\t\t\t\t\tthis.status = 0\r\n\t\t\t\t\tthis.limit = val\r\n\t\t\t\t\tthis.loadData(val)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tformatCurrency,\r\n\t\tgetRowClass({ row, column, rowIndex, columnIndex }) {\r\n\t\t\tif (rowIndex === 0) {\r\n\t\t\t\treturn 'background:#EFEFEF;text-align: center;'\r\n\t\t\t} else {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tloadData({ id, type }, tabIndex) {\r\n\t\t\tthis.$api.merchantGetLimitRedDetail({ id, type }).then((_) => {\r\n\t\t\t\tif (_.code === 200) {\r\n\t\t\t\t\tthis.originList = _.data\r\n\t\t\t\t\t// 初始化列表\r\n\t\t\t\t\tthis.tabList = this.filterTabs(this.originList)\r\n\t\t\t\t\tthis.list = this.filterList(tabIndex, this.originList)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tfilterTabs(list) {\r\n\t\t\tconst arr = []\r\n\t\t\tlist.forEach((element) => {\r\n\t\t\t\tarr.push(element.gameName)\r\n\t\t\t})\r\n\t\t\treturn arr\r\n\t\t},\r\n\t\tfilterList(index, list) {\r\n\t\t\tif (index) {\r\n\t\t\t\treturn list[index].limits\r\n\t\t\t}\r\n\t\t\treturn list[0].limits\r\n\t\t},\r\n\t\tchangestatus(index) {\r\n\t\t\tthis.status = index\r\n\t\t\tthis.list = this.filterList(index, this.originList)\r\n\t\t},\r\n\t\thandleClose() {\r\n\t\t\tthis.$emit('input', false)\r\n\t\t},\r\n\t\tfilterGametype(c) {\r\n\t\t\tconst arr = this.gametype || []\r\n\t\t\tconst find = arr.find((item) => item.label === c)\r\n\t\t\tif (Cookies.get('language') === 'zh') {\r\n\t\t\t\treturn (find && find.zh) || '-'\r\n\t\t\t}\r\n\t\t\tif (Cookies.get('language') === 'en') {\r\n\t\t\t\treturn (find && find.en) || '-'\r\n\t\t\t}\r\n\t\t\treturn '-'\r\n\t\t}\r\n\t}\r\n}\r\n",null]}