{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\Ellipsis\\Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\Ellipsis\\Ellipsis.vue","mtime":1617594855281},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgVG9vbHRpcCBmcm9tICdhbnQtZGVzaWduLXZ1ZS9lcy90b29sdGlwJw0KaW1wb3J0IHsgY3V0U3RyQnlGdWxsTGVuZ3RoLCBnZXRTdHJGdWxsTGVuZ3RoIH0gZnJvbSAnQC9jb21wb25lbnRzL191dGlsL3V0aWwnDQovKg0KICAgIGNvbnN0IGlzU3VwcG9ydExpbmVDbGFtcCA9IGRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0TGluZUNsYW1wICE9PSB1bmRlZmluZWQ7DQoNCiAgICBjb25zdCBUb29sdGlwT3ZlcmxheVN0eWxlID0gew0KICAgICAgb3ZlcmZsb3dXcmFwOiAnYnJlYWstd29yZCcsDQogICAgICB3b3JkV3JhcDogJ2JyZWFrLXdvcmQnLA0KICAgIH07DQogICovDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0VsbGlwc2lzJywNCiAgY29tcG9uZW50czogew0KICAgIFRvb2x0aXANCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBwcmVmaXhDbHM6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICdhbnQtcHJvLWVsbGlwc2lzJw0KICAgIH0sDQogICAgdG9vbHRpcDogew0KICAgICAgdHlwZTogQm9vbGVhbg0KICAgIH0sDQogICAgbGVuZ3RoOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgbGluZXM6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIGRlZmF1bHQ6IDENCiAgICB9LA0KICAgIGZ1bGxXaWR0aFJlY29nbml0aW9uOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogZmFsc2UNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRTdHJEb20gKHN0ciwgZnVsbExlbmd0aCkgew0KICAgICAgcmV0dXJuICgNCiAgICAgICAgPHNwYW4+eyBjdXRTdHJCeUZ1bGxMZW5ndGgoc3RyLCB0aGlzLmxlbmd0aCkgKyAoZnVsbExlbmd0aCA+IHRoaXMubGVuZ3RoID8gJy4uLicgOiAnJykgfTwvc3Bhbj4NCiAgICAgICkNCiAgICB9LA0KICAgIGdldFRvb2x0aXAgKGZ1bGxTdHIsIGZ1bGxMZW5ndGgpIHsNCiAgICAgIHJldHVybiAoDQogICAgICAgIDxUb29sdGlwPg0KICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJ0aXRsZSI+eyBmdWxsU3RyIH08L3RlbXBsYXRlPg0KICAgICAgICAgIHsgdGhpcy5nZXRTdHJEb20oZnVsbFN0ciwgZnVsbExlbmd0aCkgfQ0KICAgICAgICA8L1Rvb2x0aXA+DQogICAgICApDQogICAgfQ0KICB9LA0KICByZW5kZXIgKCkgew0KICAgIGNvbnN0IHsgdG9vbHRpcCwgbGVuZ3RoIH0gPSB0aGlzLiRwcm9wcw0KICAgIGNvbnN0IHN0ciA9IHRoaXMuJHNsb3RzLmRlZmF1bHQubWFwKHZOb2RlID0+IHZOb2RlLnRleHQpLmpvaW4oJycpDQogICAgY29uc3QgZnVsbExlbmd0aCA9IGdldFN0ckZ1bGxMZW5ndGgoc3RyKQ0KICAgIGNvbnN0IHN0ckRvbSA9IHRvb2x0aXAgJiYgZnVsbExlbmd0aCA+IGxlbmd0aCA/IHRoaXMuZ2V0VG9vbHRpcChzdHIsIGZ1bGxMZW5ndGgpIDogdGhpcy5nZXRTdHJEb20oc3RyLCBmdWxsTGVuZ3RoKQ0KICAgIHJldHVybiAoDQogICAgICBzdHJEb20NCiAgICApDQogIH0NCn0NCg=="},{"version":3,"sources":["Ellipsis.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ellipsis.vue","sourceRoot":"src/components/Ellipsis","sourcesContent":["<script>\r\nimport Tooltip from 'ant-design-vue/es/tooltip'\r\nimport { cutStrByFullLength, getStrFullLength } from '@/components/_util/util'\r\n/*\r\n    const isSupportLineClamp = document.body.style.webkitLineClamp !== undefined;\r\n\r\n    const TooltipOverlayStyle = {\r\n      overflowWrap: 'break-word',\r\n      wordWrap: 'break-word',\r\n    };\r\n  */\r\n\r\nexport default {\r\n  name: 'Ellipsis',\r\n  components: {\r\n    Tooltip\r\n  },\r\n  props: {\r\n    prefixCls: {\r\n      type: String,\r\n      default: 'ant-pro-ellipsis'\r\n    },\r\n    tooltip: {\r\n      type: Boolean\r\n    },\r\n    length: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    lines: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    fullWidthRecognition: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  methods: {\r\n    getStrDom (str, fullLength) {\r\n      return (\r\n        <span>{ cutStrByFullLength(str, this.length) + (fullLength > this.length ? '...' : '') }</span>\r\n      )\r\n    },\r\n    getTooltip (fullStr, fullLength) {\r\n      return (\r\n        <Tooltip>\r\n          <template slot=\"title\">{ fullStr }</template>\r\n          { this.getStrDom(fullStr, fullLength) }\r\n        </Tooltip>\r\n      )\r\n    }\r\n  },\r\n  render () {\r\n    const { tooltip, length } = this.$props\r\n    const str = this.$slots.default.map(vNode => vNode.text).join('')\r\n    const fullLength = getStrFullLength(str)\r\n    const strDom = tooltip && fullLength > length ? this.getTooltip(str, fullLength) : this.getStrDom(str, fullLength)\r\n    return (\r\n      strDom\r\n    )\r\n  }\r\n}\r\n</script>\r\n"]}]}