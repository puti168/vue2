{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue","mtime":1617695097413},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { Message } from 'element-ui'\r\nimport { validPassword } from '@/utils/validate'\r\nimport { removeToken } from '@/utils/auth'\r\nimport Cookies from 'js-cookie'\r\nimport Finger from '@/utils/fingerprintjs2'\r\nimport { setPageTitle } from '@/utils/i18n'\r\nFinger.load()\r\nexport default {\r\n\tname: 'Login',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tloginForm: {\r\n\t\t\t\tusername: this.$store.state.user.userInfo.username,\r\n\t\t\t\tpassword: Cookies.get('password'),\r\n\t\t\t\tagentCode:\r\n\t\t\t\t\tCookies.get('firstLogin') === 'true'\r\n\t\t\t\t\t\t? this.$store.state.user.userInfo.agentName\r\n\t\t\t\t\t\t: this.$store.state.user.userInfo.agentCode,\r\n\t\t\t\tgoogleAuth: '',\r\n\t\t\t\tverifyCodeType: 0\r\n\t\t\t},\r\n\t\t\tmidVal: '',\r\n\t\t\tloading: false,\r\n\t\t\tpassword: 'password', // 登录密码眼睛\r\n\t\t\tmodifyPassword: 'modifyPassword',\r\n\t\t\trePassword: 'rePassword',\r\n\t\t\tredirect: undefined,\r\n\t\t\tbaseUrl: process.env.VUE_APP_BASE_API,\r\n\t\t\ttimestamp: +new Date(),\r\n\t\t\trememberPassword: Cookies.get('rememberPassword'),\r\n\t\t\tversion: '',\r\n\t\t\tfirstLogin:\r\n\t\t\t\tCookies.get('firstLogin') && Cookies.get('firstLogin') === 'true',\r\n\t\t\tuserInfo: this.$store.state.user.userInfo,\r\n\t\t\tbrowerFinger: Finger.get(),\r\n\t\t\tsubmitTime: 0 // 记录提交时间，防止多次提交\r\n\t\t}\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\t...mapGetters(['language']),\r\n\t\tloginRules() {\r\n\t\t\tconst validatePassword = (rule, value, callback) => {\r\n\t\t\t\tif (value.length < 6) {\r\n\t\t\t\t\tcallback(new Error(this.$t('login.less6Password')))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst validatePwd = (rule, value, callback) => {\r\n\t\t\t\tif (!validPassword(value)) {\r\n\t\t\t\t\tcallback(new Error(this.$t('login_index_473')))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst validateRepwd = (rule, value, callback) => {\r\n\t\t\t\tif (!validPassword(value)) {\r\n\t\t\t\t\tcallback(new Error(this.$t(this.$t('login_index_473'))))\r\n\t\t\t\t} else if (value !== this.loginForm.modifyPassword) {\r\n\t\t\t\t\tcallback(new Error(this.$t(this.$t('login_index_474'))))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tagentCode: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tmessage: this.$t('login_index_464'),\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tmodifyPassword: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: validatePwd,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\trePassword: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tvalidator: validateRepwd,\r\n\t\t\t\t\t\ttrigger: 'blur'\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tusername: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\ttrigger: 'blur',\r\n\t\t\t\t\t\tmessage: this.$t('login.username')\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tpassword: [\r\n\t\t\t\t\t{ required: true, message: this.$t('login.password') },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrigger: 'blur',\r\n\t\t\t\t\t\tvalidator: validatePassword\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tgoogleAuth: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\ttrigger: 'blur',\r\n\t\t\t\t\t\tmessage: this.$t('login_index_468')\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\tbtnText: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.midVal\r\n\t\t\t\t? this.midVal\r\n\t\t\t\t: this.$t('login_index_472')\r\n\t\t\t},\r\n\t\t\tset() {\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\t$route: {\r\n\t\t\thandler: function (route) {\r\n\t\t\t\tthis.redirect = route.query && route.query.redirect\r\n\t\t\t},\r\n\t\t\timmediate: true\r\n\t\t},\r\n\t\t'loginForm.agentCode': {\r\n\t\t\thandler(val) {\r\n\t\t\t\tthis.loginForm.agentCode = val.toLocaleUpperCase()\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t},\r\n\t\t'loginForm.googleAuth': {\r\n\t\t\thandler(val) {\r\n\t\t\t\tif (this.loginForm.verifyCodeType === 2) {\r\n\t\t\t\t\tif (val.length >= 4) {\r\n\t\t\t\t\t\tthis.handleLogin()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.loginForm.verifyCodeType === 1) {\r\n\t\t\t\t\tif (val.length >= 6) {\r\n\t\t\t\t\t\tthis.handleLogin()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t}\r\n\t},\r\n\tdestroyed() {\r\n\t\tlocalStorage.removeItem('firstLogin')\r\n\t},\r\n\tmounted() {\r\n\t\tlocalStorage.setItem('finger', this.browerFinger)\r\n\t\tthis.firstLogin = false\r\n\t\tconst VERSION = Cookies.get('version') || ''\r\n\t\tthis.version = VERSION\r\n\r\n\t\twindow.addEventListener('keyup', this.handleKeyup)\r\n\r\n\t\tif (this.loginForm.agentCode && this.loginForm.username) {\r\n\t\t\tthis.$api\r\n\t\t\t\t.getVerifyCodeType({\r\n\t\t\t\t\tagentCode: this.loginForm.agentCode,\r\n\t\t\t\t\tusername: this.loginForm.username\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res && res.code === 200) {\r\n\t\t\t\t\t\tthis.loginForm.verifyCodeType = res.data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.loginForm.verifyCodeType = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log('error :>> ', error)\r\n\t\t\t\t\tthis.loginForm.verifyCodeType = 0\r\n\t\t\t\t})\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// 键盘事件\r\n\t\thandleKeyup(event) {\r\n\t\t\tconst e = event || window.event\r\n\t\t\tif (!e) return\r\n\t\t\tconst { keyCode } = e\r\n\t\t\tif (keyCode === 13) {\r\n\t\t\t\tthis.handleLogin()\r\n\t\t\t}\r\n\t\t},\r\n\t\thandleSetLanguage(value) {\r\n\t\t\tMessage.closeAll()\r\n\t\t\tlet actMessage\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase 'zh':\r\n\t\t\t\t\tactMessage = '语言切换成功'\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'tw':\r\n\t\t\t\t\tactMessage = this.$t('login_index_476')\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tactMessage = 'Switch Language Success'\r\n\t\t\t}\r\n\t\t\tsetPageTitle()\r\n\t\t\tthis.$i18n.locale = value\r\n\t\t\tthis.$store.dispatch('app/setLanguage', value)\r\n\t\t\tthis.$message({\r\n\t\t\t\tmessage: actMessage,\r\n\t\t\t\ttype: 'success'\r\n\t\t\t})\r\n\t\t},\r\n\t\tshowPwd(type) {\r\n\t\t\tif (this[type] === type) {\r\n\t\t\t\tthis[type] = ''\r\n\t\t\t} else {\r\n\t\t\t\tthis[type] = type\r\n\t\t\t}\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.$refs[type].focus()\r\n\t\t\t})\r\n\t\t},\r\n\t\tonChangeRemember(value) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.rememberPassword = true\r\n\t\t\t\tCookies.set('rememberPassword', true)\r\n\t\t\t} else {\r\n\t\t\t\tthis.rememberPassword = false\r\n\t\t\t\tCookies.set('rememberPassword', '')\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 第一次登录修改密码\r\n\t\tchangePwd(data) {\r\n\t\t\tthis.$api\r\n\t\t\t\t.changePwd({\r\n\t\t\t\t\t...data\r\n\t\t\t\t})\r\n\t\t\t\t.then(async (res) => {\r\n\t\t\t\t\tif (res.code === 200) {\r\n\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\tmessage: this.$t('login_index_477')\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tawait this.$store.dispatch('user/logout')\r\n\t\t\t\t\t\tthis.$router.push('/login')\r\n\t\t\t\t\t\tthis.firstLogin = false\r\n\t\t\t\t\t\tCookies.remove('firstLogin')\r\n\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t\tthis.loginForm.googleAuth = ''\r\n\t\t\t\t\t\tthis.password = ''\r\n\t\t\t\t\t\tthis.userInfo = ''\r\n\t\t\t\t\t\tthis.midVal = this.$t('login_index_472')\r\n\t\t\t\t\t\tthis.loginForm.agentCode = data.agentCode\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t},\r\n\t\thandleLogin() {\r\n\t\t\tif (this.loginTimer) return\r\n\t\t\tthis.loginTimer = setTimeout(() => {\r\n\t\t\t\twindow.clearTimeout(this.loginTimer)\r\n\t\t\t\tthis.loginTimer = null\r\n\t\t\t\tthis.login()\r\n\t\t\t}, 2500)\r\n\t\t},\r\n\t\tlogin() {\r\n\t\t\tthis.$refs.loginForm.validate((valid) => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tthis.loading = true\r\n\t\t\t\t\tremoveToken()\r\n\t\t\t\t\tconst form = {\r\n\t\t\t\t\t\t...this.loginForm,\r\n\t\t\t\t\t\ttype: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.submitTime) {\r\n\t\t\t\t\t\tconst now = +new Date()\r\n\t\t\t\t\t\tif (now - this.submitTime < 1000) return\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.submitTime = +new Date()\r\n\t\t\t\t\tif (this.firstLogin) {\r\n\t\t\t\t\t\treturn this.changePwd({\r\n\t\t\t\t\t\t\tagentCode: this.userInfo.agentCode,\r\n\t\t\t\t\t\t\tagentId: this.userInfo.agentId,\r\n\t\t\t\t\t\t\tagentName: this.userInfo.agentName,\r\n\t\t\t\t\t\t\tpassword: this.loginForm.modifyPassword,\r\n\t\t\t\t\t\t\tpasswordAgain: this.loginForm.rePassword\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.$store\r\n\t\t\t\t\t\t.dispatch('user/login', form)\r\n\t\t\t\t\t\t.then(async (userInfo) => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!(Cookies.get('language') === 'zh' || Cookies.get('language') === 'en')\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tCookies.set('language', 'zh')\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (Cookies.get('rememberPassword')) {\r\n\t\t\t\t\t\t\t\tCookies.set('password', this.loginForm.password)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tCookies.remove('password')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t\t\tconst checkRes = await this.$api.checkFirstLogin({\r\n\t\t\t\t\t\t\t\tloginName: form.username,\r\n\t\t\t\t\t\t\t\tagentCode: userInfo.agentCode\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tif (checkRes.data && checkRes.data.flag === 1) {\r\n\t\t\t\t\t\t\t\t// 第一次登录后续操作\r\n\t\t\t\t\t\t\t\tthis.loginForm.password = ''\r\n\t\t\t\t\t\t\t\tthis.firstLogin = true\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('firstLogin', true)\r\n\t\t\t\t\t\t\t\tremoveToken()\r\n\t\t\t\t\t\t\t\tthis.userInfo = userInfo\r\n\t\t\t\t\t\t\t\tthis.midVal = this.$t('login_index_471')\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t!this.firstLogin && this.$router.push({ path: '/' })\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tif (err) console.log('err :', err)\r\n\t\t\t\t\t\t\tthis.timestamp = +new Date()\r\n\t\t\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('error submit!!')\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tjudgeCode() {\r\n\t\t\tif (!this.loginForm.agentCode) {\r\n\t\t\t\treturn\r\n\t\t\t\t// message({\r\n\t\t\t\t// \ttype: 'error',\r\n\t\t\t\t// \tmessage: '请输入商户编码进行验证码获取'\r\n\t\t\t\t// })\r\n\t\t\t}\r\n\t\t\tif (!this.loginForm.username) {\r\n\t\t\t\treturn\r\n\t\t\t\t// message({\r\n\t\t\t\t// \ttype: 'error',\r\n\t\t\t\t// \tmessage: '请输入账号进行验证码获取'\r\n\t\t\t\t// })\r\n\t\t\t}\r\n\t\t\tthis.getCode()\r\n\t\t},\r\n\t\tgetCode() {\r\n\t\t\tthis.$api\r\n\t\t\t\t.getVerifyCodeType({\r\n\t\t\t\t\tagentCode: this.loginForm.agentCode,\r\n\t\t\t\t\tusername: this.loginForm.username\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res && res.code === 200) {\r\n\t\t\t\t\t\tthis.loginForm.verifyCodeType = res.data\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.loginForm.verifyCodeType = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log('error :>> ', error)\r\n\t\t\t\t\tthis.loginForm.verifyCodeType = 0\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n",null]}