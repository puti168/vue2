{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\apiDocument\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\systemmanagement\\apiDocument\\index.vue","mtime":1617695097436},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport list from '@/mixins/list'\r\nimport ApiUpload from './components/ApiUpload'\r\nimport dayjs from 'dayjs'\r\nimport { routerNames } from '@/utils/consts'\r\nimport router from '@/router'\r\nimport Cookies from 'js-cookie'\r\nimport Modal from '@/components/Modal'\r\nexport default {\r\n\tname: routerNames.membersbetrecord,\r\n\tcomponents: { ApiUpload, Modal },\r\n\tmixins: [list],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\ttypes: ['rar', 'pdf', 'doc'],\r\n\t\t\tdrawer: false,\r\n\t\t\tipData: null,\r\n\t\t\tloading: false,\r\n\t\t\treleaseTime: '',\r\n\t\t\tbetDialogVisible: false,\r\n\t\t\tdialogShow: false,\r\n\t\t\tbetStatusList: [\r\n\t\t\t\tthis.$t('members.members_16'),\r\n\t\t\t\tthis.$t('members.members_17'),\r\n\t\t\t\tthis.$t('members.members_18'),\r\n\t\t\t\tthis.$t('members.members_19'),\r\n\t\t\t\tthis.$t('members.members_20'),\r\n\t\t\t\tthis.$t('members.members_21')\r\n\t\t\t],\r\n\t\t\tform: {\r\n\t\t\t\tfileType: -1\r\n\t\t\t},\r\n\t\t\tid: '',\r\n\t\t\tvideoSrc: '',\r\n\t\t\tshowVideo: false,\r\n\t\t\tdialogVisible: false,\r\n\t\t\tcurrentData: {},\r\n\t\t\tuserAgentType: '',\r\n\t\t\tdetailVisible: false,\r\n\t\t\tprevIndex: 1,\r\n\t\t\ttableKey: +new Date()\r\n\t\t}\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\t...mapGetters(['userInfo']),\r\n\t\t...mapGetters(['globalDics']),\r\n\t\tpickerOptions() {\r\n\t\t\tconst _this = this\r\n\t\t\treturn {\r\n\t\t\t\tdisabledDate(time) {\r\n\t\t\t\t\tconst now = dayjs()\r\n\t\t\t\t\t\t.endOf('day')\r\n\t\t\t\t\t\t.valueOf()\r\n\t\t\t\t\treturn time.getTime() > now\r\n\t\t\t\t},\r\n\t\t\t\tonPick({ maxDate, minDate }) {\r\n\t\t\t\t\tif (!maxDate) {\r\n\t\t\t\t\t\t_this.minDate = minDate\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tshortcuts: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: this.$t('members_betrecord_index_584'),\r\n\t\t\t\t\t\tonClick(picker) {\r\n\t\t\t\t\t\t\tconst end = dayjs().endOf('day')\r\n\t\t\t\t\t\t\tconst start = dayjs().startOf('day')\r\n\t\t\t\t\t\t\tpicker.$emit('pick', [+start, +end])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: this.$t('members_betrecord_index_585'),\r\n\t\t\t\t\t\tonClick(picker) {\r\n\t\t\t\t\t\t\tconst end = dayjs()\r\n\t\t\t\t\t\t\t\t.endOf('day')\r\n\t\t\t\t\t\t\t\t.subtract(1, 'd')\r\n\t\t\t\t\t\t\tconst start = dayjs()\r\n\t\t\t\t\t\t\t\t.startOf('day')\r\n\t\t\t\t\t\t\t\t.subtract(1, 'd')\r\n\t\t\t\t\t\t\tpicker.$emit('pick', [+start, +end])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: this.$t('members_betrecord_index_586'),\r\n\t\t\t\t\t\tonClick(picker) {\r\n\t\t\t\t\t\t\tlet start, end\r\n\t\t\t\t\t\t\tconst weekNum = dayjs().day()\r\n\t\t\t\t\t\t\tif (weekNum === 0) {\r\n\t\t\t\t\t\t\t\tend = dayjs().endOf('day')\r\n\t\t\t\t\t\t\t\tstart = dayjs()\r\n\t\t\t\t\t\t\t\t\t.subtract(1, 'd')\r\n\t\t\t\t\t\t\t\t\t.startOf('week')\r\n\t\t\t\t\t\t\t\t\t.startOf('day')\r\n\t\t\t\t\t\t\t\t\t.add(1, 'd')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tend = dayjs().endOf('day')\r\n\t\t\t\t\t\t\t\tstart = dayjs()\r\n\t\t\t\t\t\t\t\t\t.startOf('day')\r\n\t\t\t\t\t\t\t\t\t.startOf('week')\r\n\t\t\t\t\t\t\t\t\t.add(1, 'd')\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpicker.$emit('pick', [+start, +end])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: this.$t('members_betrecord_index_587'),\r\n\t\t\t\t\t\tonClick(picker) {\r\n\t\t\t\t\t\t\tconst end = dayjs().endOf('day')\r\n\t\t\t\t\t\t\tconst start = dayjs().startOf('month')\r\n\t\t\t\t\t\t\tpicker.$emit('pick', [+start, +end])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\tgametype() {\r\n\t\t\tconst types = this.globalDics.gametype || []\r\n\t\t\treturn types.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tlabel: item.text,\r\n\t\t\t\t\tzh: item.text,\r\n\t\t\t\t\ten: item.englishText\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tgamemode() {\r\n\t\t\tconst types = this.globalDics.gamemode || []\r\n\t\t\treturn types.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tlabel: item.text,\r\n\t\t\t\t\tzh: item.text,\r\n\t\t\t\t\ten: item.englishText\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tbetstatus() {\r\n\t\t\tconst types = this.globalDics.betstatus || []\r\n\t\t\treturn types.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tlabel: item.text,\r\n\t\t\t\t\tzh: item.text,\r\n\t\t\t\t\ten: item.englishText\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tbetflag() {\r\n\t\t\tconst types = this.globalDics.betflag || []\r\n\t\t\treturn types.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: item.value,\r\n\t\t\t\t\tlabel: item.text,\r\n\t\t\t\t\tzh: item.text,\r\n\t\t\t\t\ten: item.englishText\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\t// 失去焦点的时候重置\r\n\t\tonTimeBlur() {\r\n\t\t\tthis.minDate = null\r\n\t\t},\r\n\t\tgetAmoutColor(value) {\r\n\t\t\tif (value > 0) {\r\n\t\t\t\treturn 'green'\r\n\t\t\t} else if (value < 0) {\r\n\t\t\t\treturn 'red'\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t},\r\n\t\tupdateList() {\r\n\t\t\tthis.loadData()\r\n\t\t},\r\n\t\tdeleteItem(row) {\r\n\t\t\tthis.id = row.id\r\n\t\t\tthis.dialogVisible = true\r\n\t\t},\r\n\t\tloadData() {\r\n\t\t\tthis.loading = true\r\n\r\n\t\t\tthis.$api\r\n\t\t\t\t.getApiDocumentList({\r\n\t\t\t\t\ttextType: this.form.fileType,\r\n\t\t\t\t\tpageSize: this.pageSize,\r\n\t\t\t\t\tpageIndex: this.pageIndex\r\n\t\t\t\t})\r\n\t\t\t\t.then((_) => {\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\tif (_.code === 200) {\r\n\t\t\t\t\t\tconst data = _.data\r\n\t\t\t\t\t\tthis.list = data.record\r\n\t\t\t\t\t\tthis.total = data.totalRecord\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tthis.pageIndex = this.prevIndex\r\n\t\t\t\t\tthis.list = []\r\n\t\t\t\t\tthis.total = 0\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t},\r\n\t\tfilterGameMode(c) {\r\n\t\t\tconst arr = this.gamemode || []\r\n\t\t\tconst find = arr.find((item) => Number(item.value) === Number(c))\r\n\t\t\tif (Cookies.get('language') === 'zh') {\r\n\t\t\t\treturn (find && find.zh) || '-'\r\n\t\t\t}\r\n\t\t\tif (Cookies.get('language') === 'en') {\r\n\t\t\t\treturn (find && find.en) || '-'\r\n\t\t\t}\r\n\t\t\treturn '-'\r\n\t\t},\r\n\t\thandleSure() {\r\n\t\t\tthis.$api\r\n\t\t\t\t.deleteApi({\r\n\t\t\t\t\tid: this.id\r\n\t\t\t\t})\r\n\t\t\t\t.then((_) => {\r\n\t\t\t\t\tif (_.code === 200) {\r\n\t\t\t\t\t\tthis.loadData()\r\n\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\tmessage: this.$t('notice.notice_39'),\r\n\t\t\t\t\t\t\ttype: 'success'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tthis.dialogVisible = false\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {})\r\n\t\t},\r\n\t\tfilterBetflag(c) {\r\n\t\t\tconst arr = this.betflag || []\r\n\t\t\tconst find = arr.find((item) => Number(item.value) === Number(c))\r\n\t\t\tif (Cookies.get('language') === 'zh') {\r\n\t\t\t\treturn (find && find.zh) || '-'\r\n\t\t\t}\r\n\t\t\tif (Cookies.get('language') === 'en') {\r\n\t\t\t\treturn (find && find.en) || '-'\r\n\t\t\t}\r\n\t\t\treturn '-'\r\n\t\t},\r\n\t\t// 改变列表条数\r\n\t\thandleSizeChange(value) {\r\n\t\t\tthis.pageSize = value\r\n\t\t\tthis.pageIndex = 1\r\n\t\t\tlocalStorage.setItem('pageSize', value)\r\n\t\t\tthis.loadData()\r\n\t\t},\r\n\t\thandleCurrentChange(val) {\r\n\t\t\tthis.prevIndex = this.pageIndex\r\n\t\t\tthis.pageIndex = val\r\n\t\t\tthis.loadData()\r\n\t\t},\r\n\t\thandleReset() {\r\n\t\t\tif (this.$route.query && JSON.stringify(this.$route.query) !== '{}') {\r\n\t\t\t\trouter.push(this.$route.path, () => {\r\n\t\t\t\t\tthis.resetCommon()\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.resetCommon()\r\n\t\t\t}\r\n\t\t},\r\n\t\tresetCommon() {\r\n\t\t\tthis.form = {\r\n\t\t\t\tfileType: -1\r\n\t\t\t}\r\n\t\t\tthis.tableKey = +new Date()\r\n\t\t\tthis.initList()\r\n\t\t},\r\n\t\thandleSearch() {\r\n\t\t\tthis.pageIndex = 1\r\n\t\t\tthis.loadData()\r\n\t\t},\r\n\t\tcheckDetail(row) {\r\n\t\t\tthis.detailVisible = true\r\n\t\t\tthis.currentData = { ...row }\r\n\t\t},\r\n\t\tfilterTextType(type) {\r\n\t\t\treturn this.types[type - 1]\r\n\t\t},\r\n\t\tdownload(row) {\r\n\t\t\t// const url = window.URL.createObjectURL(new Blob([res.data]))\r\n\t\t\t// const link = document.createElement('a')\r\n\t\t\t// link.href = row.fileLink\r\n\t\t\t// link.setAttribute('download', `${row.id}`)\r\n\t\t\t// link.setAttribute('target', `_blank`)\r\n\t\t\t// document.body.appendChild(link)\r\n\t\t\t// link.click()\r\n\t\t\tthis.$api\r\n\t\t\t\t.downloadApi({\r\n\t\t\t\t\tid: row.id\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\twindow.open(res.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err.msg)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n",null]}