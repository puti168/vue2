{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\SelectAgentTree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\components\\SelectAgentTree\\index.vue","mtime":1617695097387},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport store from '@/store'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n\tname: 'SelectAgentTree',\r\n\tprops: {\r\n\t\tvalue: {\r\n\t\t\ttype: [String, Number],\r\n\t\t\tdefault: function() {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tnode: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: function() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tagentName: store.state.user.name,\r\n\t\t\t\t\tagentCode: store.state.user.agentCode\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 获取当前点击的节点\r\n\t\tgetNode: {\r\n\t\t\ttype: Function,\r\n\t\t\tdefault: function() {}\r\n\t\t},\r\n\t\tshowForm: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t},\r\n\t\twidth: {\r\n\t\t\ttype: [String, Number],\r\n\t\t\tdefault: 218\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tshowTree: false,\r\n\t\t\tfilterText: '',\r\n\t\t\t// 全部数据\r\n\t\t\tdata: [],\r\n\t\t\t// 树数据\r\n\t\t\ttree: [],\r\n\t\t\tdefaultProps: {\r\n\t\t\t\tchildren: 'children',\r\n\t\t\t\tlabel: 'label'\r\n\t\t\t},\r\n\t\t\tagentName: '',\r\n\t\t\tagentCode: '',\r\n\t\t\tisFirstEnter: true,\r\n\t\t\t// 最终生成的树结构\r\n\t\t\tstoreDatas: []\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(['userInfo']),\r\n\t\tlabel() {\r\n\t\t\treturn this.$t('other_001')\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tfilterText(val) {\r\n\t\t\tthis.$refs.tree && this.$refs.tree.filter(val)\r\n\t\t},\r\n\t\tnode: {\r\n\t\t\thandler(val) {\r\n\t\t\t\t// this.agentName = val.agentName\r\n\t\t\t\tthis.agentCode = val.agentCode\r\n\t\t\t},\r\n\t\t\timmediate: true,\r\n\t\t\tdeep: true\r\n\t\t},\r\n\t\tvalue: {\r\n\t\t\thandler(val) {\r\n\t\t\t\tlet index = 0\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tindex = this.data.findIndex((v) => v.id === Number(val))\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$emit('input', this.tree[0].id)\r\n\t\t\t\t\tthis.agentName = this.tree[0] && this.tree[0].agentName\r\n\t\t\t\t}\r\n\t\t\t\t// 添加必定浏览器崩溃\r\n\t\t\t\t// if (this.getNode) this.$emit('getNode', this.data[index] || {})\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\t// if (this.isFirstEnter) {\r\n\t\t// \tconsole.log('缓存组件初始化')\r\n\t\t// \tthis.initData()\r\n\t\t// }\r\n\t\tif (this.$store.state.tree.data.length === 0 && this.isFirstEnter) {\r\n\t\t\tthis.initData()\r\n\t\t} else {\r\n\t\t\tthis.data = this.$store.state.tree.data\r\n\t\t\tthis.tree = this.$store.state.tree.tree\r\n\t\t\tlet index\r\n\t\t\tif (!this.value) {\r\n\t\t\t\t// 找到初始agentId\r\n\t\t\t\tindex = this.data.findIndex((val) => val.agentCode === this.agentCode)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tthis.$emit('input', this.data[index].id)\r\n\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tindex = this.data.findIndex((v) => Number(v.id) === Number(this.value))\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\tdocument.addEventListener('click', this.closeTree)\r\n\t},\r\n\tdestroyed() {\r\n\t\tthis.storeDatas = []\r\n\t\tdocument.removeEventListener('click', this.closeTree)\r\n\t},\r\n\tactivated() {\r\n\t\tif (this.$store.state.tree.data.length === 0) {\r\n\t\t\tthis.initData()\r\n\t\t} else {\r\n\t\t\tthis.data = this.$store.state.tree.data\r\n\t\t\tthis.tree = this.$store.state.tree.tree\r\n\t\t\tlet index\r\n\t\t\tif (!this.value) {\r\n\t\t\t\t// 找到初始agentId\r\n\t\t\t\tindex = this.data.findIndex((val) => val.agentCode === this.agentCode)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tthis.$emit('input', this.data[index].id)\r\n\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tindex = this.data.findIndex((v) => Number(v.id) === Number(this.value))\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tselectParent() {\r\n\t\t\tlet index = ''\r\n\t\t\tindex = this.data.findIndex((v) => Number(v.id) === Number(this.value))\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t}\r\n\t\t},\r\n\t\tinitData() {\r\n\t\t\tthis.storeDatas = []\r\n\t\t\tthis.isFirstEnter = false\r\n\t\t\tthis.$api.searchOrganization().then((res) => {\r\n\t\t\t\tif (res.code === 200) {\r\n\t\t\t\t\tif (this.tree.length > 0) return\r\n\t\t\t\t\tconst organizations = res.data || []\r\n\t\t\t\t\tthis.data = organizations\r\n\t\t\t\t\tlet index\r\n\t\t\t\t\tif (!this.value) {\r\n\t\t\t\t\t\t// 找到初始agentId\r\n\t\t\t\t\t\tindex = this.data.findIndex((val) => val.agentCode === this.agentCode)\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\tthis.$emit('input', this.data[index].id)\r\n\t\t\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindex = this.data.findIndex((v) => Number(v.id) === Number(this.value))\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\tthis.agentName = this.data[index].agentName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.generateTree(this.data)\r\n\t\t\t\t\tthis.tree = this.storeDatas\r\n\t\t\t\t\tthis.$store.dispatch('tree/setTree', this.storeDatas)\r\n\t\t\t\t\tthis.$store.dispatch('tree/setTreeData', this.data)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tcloseTree(e) {\r\n\t\t\tconst wrapper = document.getElementById('treeWrapper')\r\n\t\t\tif (wrapper && !wrapper.contains(e.target)) {\r\n\t\t\t\tthis.showTree = false\r\n\t\t\t}\r\n\t\t},\r\n\t\tonShowThree() {\r\n\t\t\tif (this.userInfo.agentType !== 2) {\r\n\t\t\t\tthis.filterText = ''\r\n\t\t\t\tthis.showTree = true\r\n\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.$refs.input.focus()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tfilterNode(value, data, node) {\r\n\t\t\tconsole.log(value)\r\n\t\t\t// console.log(this.filterText)\r\n\t\t\tif (!value) return true\r\n\t\t\tconst value2 = value.toUpperCase()\r\n\t\t\tif (node.parent && !node.parent.parent) {\r\n\t\t\t\treturn data.label.indexOf(value) !== -1 || data.label.indexOf(value2) !== -1\r\n\t\t\t}\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst value3 = this.filterText.toUpperCase()\r\n\t\t\t\tif (data.label.indexOf(this.filterText) !== -1 || data.label.indexOf(value3) !== -1) {\r\n\t\t\t\t\tnode.expanded = false\r\n\t\t\t\t}\r\n\t\t\t}, 1000)\r\n\t\t\treturn (\r\n\t\t\t\tdata.label.indexOf(value) !== -1 ||\r\n\t\t\t\tdata.label.indexOf(value2) !== -1 ||\r\n\t\t\t\tnode.parent.visible\r\n\t\t\t)\r\n\t\t},\r\n\t\t// 生成树形结构\r\n\t\tgenerateTree(data) {\r\n\t\t\tconst datas = [...data]\r\n\t\t\t// 先找出父节点\r\n\t\t\tdatas.forEach((element, i) => {\r\n\t\t\t\tconst index = data.findIndex((val) => val.id === element.parentId)\r\n\t\t\t\tif (index < 0) {\r\n\t\t\t\t\tthis.storeDatas.push({\r\n\t\t\t\t\t\tid: element.id,\r\n\t\t\t\t\t\tlabel: `${element.agentName} ${element.agentCode}`,\r\n\t\t\t\t\t\tchildren: [],\r\n\t\t\t\t\t\t...element\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdatas.splice(i, 1)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.recursionData(datas, this.storeDatas)\r\n\t\t},\r\n\t\t// 递归生成\r\n\t\trecursionData(data, tree) {\r\n\t\t\tconst datas = [...data]\r\n\t\t\tconst pickIndex = []\r\n\t\t\tconst leftDatas = []\r\n\t\t\tdatas.forEach((element) => {\r\n\t\t\t\tconst index = tree.findIndex((val) => val.id === element.parentId)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\ttree[index].children.push({\r\n\t\t\t\t\t\tid: element.id,\r\n\t\t\t\t\t\tlabel: `${element.agentName} ${element.agentCode}`,\r\n\t\t\t\t\t\tchildren: [],\r\n\t\t\t\t\t\t...element\r\n\t\t\t\t\t})\r\n\t\t\t\t\t!pickIndex.includes(index) && pickIndex.push(index)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tleftDatas.push(element)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (pickIndex.length > 0) {\r\n\t\t\t\tpickIndex.forEach((element) => {\r\n\t\t\t\t\tthis.recursionData(leftDatas, tree[element].children)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tnodeClick(node) {\r\n\t\t\tthis.showTree = false\r\n\t\t\tthis.agentName = node.agentName\r\n\t\t\tthis.$emit('input', node.id)\r\n\t\t\tif (this.getNode) {\r\n\t\t\t\tthis.$emit('getNode', node)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",null]}