{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue?vue&type=template&id=37dfd6fc&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\login\\index.vue","mtime":1617695097413},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"login-container\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"loginForm\",\n          staticClass: \"login-form\",\n          attrs: {\n            model: _vm.loginForm,\n            rules: _vm.loginRules,\n            \"auto-complete\": \"on\",\n            \"label-position\": \"left\"\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"login-content\" },\n            [\n              _c(\"h3\", [\n                _c(\n                  \"span\",\n                  [\n                    _c(\"svg-icon\", {\n                      staticClass: \"login-logo\",\n                      attrs: { \"icon-class\": \"bb_logo\" }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"logo-text\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"login_index_463\")))\n                    ])\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"agentCode\" } },\n                    [\n                      _c(\"span\", { staticClass: \"svg-container\" }, [\n                        _c(\"i\", {\n                          staticClass: \"el-icon-office-building svg-active\"\n                        })\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"el-input\", {\n                        ref: \"agentCode\",\n                        attrs: {\n                          placeholder: _vm.$t(\"login_index_464\"),\n                          name: \"agentCode\",\n                          type: \"text\",\n                          tabindex: \"1\",\n                          \"auto-complete\": \"off\",\n                          readonly: _vm.firstLogin,\n                          maxlength: \"20\"\n                        },\n                        on: { blur: _vm.judgeCode },\n                        model: {\n                          value: _vm.loginForm.agentCode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.loginForm, \"agentCode\", $$v)\n                          },\n                          expression: \"loginForm.agentCode\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { prop: \"username\" } },\n                    [\n                      _c(\n                        \"span\",\n                        { staticClass: \"svg-container\" },\n                        [\n                          _c(\"svg-icon\", {\n                            staticClass: \"svg-active\",\n                            attrs: { \"icon-class\": \"user\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"el-input\", {\n                        ref: \"username\",\n                        attrs: {\n                          placeholder: _vm.$t(\"login.username\"),\n                          name: \"username\",\n                          type: \"text\",\n                          tabindex: \"1\",\n                          \"auto-complete\": \"off\",\n                          maxlength: \"12\",\n                          readonly: _vm.firstLogin\n                        },\n                        on: { blur: _vm.judgeCode },\n                        model: {\n                          value: _vm.loginForm.username,\n                          callback: function($$v) {\n                            _vm.$set(_vm.loginForm, \"username\", $$v)\n                          },\n                          expression: \"loginForm.username\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.firstLogin\n                ? [\n                    _c(\n                      \"el-row\",\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"modifyPassword\" } },\n                          [\n                            _c(\n                              \"span\",\n                              { staticClass: \"svg-container\" },\n                              [\n                                _c(\"svg-icon\", {\n                                  staticClass: \"svg-active\",\n                                  attrs: { \"icon-class\": \"password\" }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-input\", {\n                              key: _vm.modifyPassword,\n                              ref: \"modifyPassword\",\n                              attrs: {\n                                type:\n                                  _vm.modifyPassword === \"modifyPassword\"\n                                    ? \"password\"\n                                    : \"\",\n                                placeholder: _vm.$t(\"login_index_465\"),\n                                name: \"modifyPassword\",\n                                tabindex: \"2\",\n                                \"auto-complete\": \"on\"\n                              },\n                              model: {\n                                value: _vm.loginForm.modifyPassword,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.loginForm, \"modifyPassword\", $$v)\n                                },\n                                expression: \"loginForm.modifyPassword\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"show-pwd\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.showPwd(\"modifyPassword\")\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"svg-icon\", {\n                                  attrs: {\n                                    \"icon-class\":\n                                      _vm.modifyPassword === \"modifyPassword\"\n                                        ? \"eye\"\n                                        : \"eye-open\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-row\",\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"rePassword\" } },\n                          [\n                            _c(\n                              \"span\",\n                              { staticClass: \"svg-container\" },\n                              [\n                                _c(\"svg-icon\", {\n                                  staticClass: \"svg-active\",\n                                  attrs: { \"icon-class\": \"password\" }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-input\", {\n                              key: _vm.rePassword,\n                              ref: \"rePassword\",\n                              attrs: {\n                                type:\n                                  _vm.rePassword === \"rePassword\"\n                                    ? \"password\"\n                                    : \"\",\n                                placeholder: _vm.$t(\"login_index_466\"),\n                                name: \"rePassword\",\n                                tabindex: \"3\",\n                                \"auto-complete\": \"on\"\n                              },\n                              model: {\n                                value: _vm.loginForm.rePassword,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.loginForm, \"rePassword\", $$v)\n                                },\n                                expression: \"loginForm.rePassword\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"show-pwd\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.showPwd(\"rePassword\")\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"svg-icon\", {\n                                  attrs: {\n                                    \"icon-class\":\n                                      _vm.rePassword === \"rePassword\"\n                                        ? \"eye\"\n                                        : \"eye-open\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : [\n                    _c(\n                      \"el-row\",\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { prop: \"password\" } },\n                          [\n                            _c(\n                              \"span\",\n                              { staticClass: \"svg-container\" },\n                              [\n                                _c(\"svg-icon\", {\n                                  staticClass: \"svg-active\",\n                                  attrs: { \"icon-class\": \"password\" }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-input\", {\n                              key: _vm.password,\n                              ref: \"password\",\n                              attrs: {\n                                type: _vm.password,\n                                placeholder: _vm.$t(\"login.password\"),\n                                name: \"password\",\n                                tabindex: \"2\",\n                                \"auto-complete\": \"on\"\n                              },\n                              model: {\n                                value: _vm.loginForm.password,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.loginForm, \"password\", $$v)\n                                },\n                                expression: \"loginForm.password\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"show-pwd\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.showPwd(\"password\")\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"svg-icon\", {\n                                  attrs: {\n                                    \"icon-class\":\n                                      _vm.password === \"password\"\n                                        ? \"eye\"\n                                        : \"eye-open\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _vm.loginForm.verifyCodeType === 1\n                      ? _c(\n                          \"el-row\",\n                          [\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { prop: \"googleAuth\" } },\n                              [\n                                _c(\n                                  \"span\",\n                                  { staticClass: \"svg-container\" },\n                                  [\n                                    _c(\"svg-icon\", {\n                                      staticClass: \"svg-active\",\n                                      attrs: { \"icon-class\": \"security\" }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"el-input\", {\n                                  ref: \"security\",\n                                  attrs: {\n                                    placeholder: _vm.$t(\"login_index_467\"),\n                                    name: \"security\",\n                                    type: \"text\",\n                                    tabindex: \"3\",\n                                    maxlength: \"6\"\n                                  },\n                                  model: {\n                                    value: _vm.loginForm.googleAuth,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.loginForm, \"googleAuth\", $$v)\n                                    },\n                                    expression: \"loginForm.googleAuth\"\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.loginForm.verifyCodeType === 2\n                      ? _c(\n                          \"el-row\",\n                          { attrs: { gutter: 10 } },\n                          [\n                            _c(\n                              \"el-col\",\n                              { attrs: { span: 16 } },\n                              [\n                                _c(\n                                  \"el-form-item\",\n                                  { attrs: { prop: \"googleAuth\" } },\n                                  [\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"svg-container\" },\n                                      [\n                                        _c(\"svg-icon\", {\n                                          staticClass: \"svg-active\",\n                                          attrs: { \"icon-class\": \"security\" }\n                                        })\n                                      ],\n                                      1\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"el-input\", {\n                                      ref: \"googleAuth\",\n                                      attrs: {\n                                        placeholder: _vm.$t(\"login_index_468\"),\n                                        name: \"security\",\n                                        type: \"text\",\n                                        tabindex: \"3\",\n                                        \"auto-complete\": \"on\"\n                                      },\n                                      model: {\n                                        value: _vm.loginForm.googleAuth,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.loginForm,\n                                            \"googleAuth\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"loginForm.googleAuth\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-col\", { attrs: { span: 8 } }, [\n                              _c(\"img\", {\n                                staticClass: \"kaptcha\",\n                                attrs: {\n                                  src:\n                                    _vm.baseUrl +\n                                    \"/kaptcha?type=0&brower=\" +\n                                    _vm.browerFinger +\n                                    \"&t=\" +\n                                    _vm.timestamp,\n                                  alt: \"\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    _vm.timestamp = +new Date()\n                                  }\n                                }\n                              })\n                            ])\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-row\",\n                      { staticStyle: { \"margin-bottom\": \"10px\" } },\n                      [\n                        _c(\n                          \"el-col\",\n                          { attrs: { span: 12 } },\n                          [\n                            _c(\n                              \"el-checkbox\",\n                              {\n                                attrs: { value: Boolean(_vm.rememberPassword) },\n                                on: { change: _vm.onChangeRemember }\n                              },\n                              [_vm._v(_vm._s(_vm.$t(\"login_index_469\")))]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"login-btn\",\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.handleLogin($event)\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.btnText))]\n              ),\n              _vm._v(\" \"),\n              _vm.firstLogin\n                ? _c(\n                    \"div\",\n                    { staticStyle: { color: \"#D9001B\", \"margin-top\": \"10px\" } },\n                    [_vm._v(_vm._s(_vm.$t(\"login_index_470\")))]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"switch-language flex-bc\" }, [\n                _c(\n                  \"a\",\n                  {\n                    class: { aActive: _vm.language === \"zh\" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.handleSetLanguage(\"zh\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"中文简体\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"a\",\n                  {\n                    class: { aActive: _vm.language === \"en\" },\n                    on: {\n                      click: function($event) {\n                        $event.preventDefault()\n                        return _vm.handleSetLanguage(\"en\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"English\")]\n                )\n              ])\n            ],\n            2\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"version\" }, [\n        _vm._v(\"version: \" + _vm._s(_vm.version))\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}