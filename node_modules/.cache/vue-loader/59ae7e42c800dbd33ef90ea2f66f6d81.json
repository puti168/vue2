{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\activitySettings\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\operationManage\\activitySettings\\index.vue","mtime":1615171048158},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport EditAll from './components/EditAll'\r\nimport EditOpen from './components/EditOpen'\r\nimport TableComp from './components/TableComp'\r\nimport SelectAgentTree from '@/components/SelectAgentTree'\r\nimport list from '@/mixins/list'\r\nimport tier from '@/mixins/tier'\r\nimport { routerNames } from '@/utils/consts'\r\nimport { mapGetters } from 'vuex'\r\nimport Modal from '@/components/Modal'\r\nexport default {\r\n\tname: routerNames.activitySettings,\r\n\tcomponents: {\r\n\t\tEditAll,\r\n\t\tEditOpen,\r\n\t\tSelectAgentTree,\r\n\t\tModal,\r\n\t\tTableComp\r\n\t},\r\n\tmixins: [list, tier],\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tloading: false,\r\n\t\t\topenVisible: false,\r\n\t\t\tdialogVisible2: false,\r\n\t\t\tallVisible: false,\r\n\t\t\tdialogVisible: false,\r\n\t\t\thasSearch: false,\r\n\t\t\tmodalType: 1,\r\n\t\t\tform: {\r\n\t\t\t\tagentId: ''\r\n\t\t\t},\r\n\t\t\tdownForm: {\r\n\t\t\t\ttime: [],\r\n\t\t\t\tagentType: -1,\r\n\t\t\t\tstatus: -1,\r\n\t\t\t\twalletType: '',\r\n\t\t\t\tmerchantType: ''\r\n\t\t\t},\r\n\t\t\tstatusName: '',\r\n\t\t\ttype: '',\r\n\t\t\tallType: '',\r\n\t\t\topenData: {},\r\n\t\t\tcurrentIndex: '',\r\n\t\t\tchange: '',\r\n\t\t\tcurrentLevel: '',\r\n\t\t\tcurrentData: {},\r\n\t\t\tcurrencyList: []\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(['userInfo']),\r\n\t\tmodalTitle() {\r\n\t\t\tlet text\r\n\t\t\tswitch (this.modalType) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\ttext = this.$t('new_40')\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\ttext = this.$t('new_42')\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\treturn text\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tdownForm: {\r\n\t\t\thandler(val) {\r\n\t\t\t\tthis.loadData()\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tloadData() {\r\n\t\t\tthis.loading = true\r\n\t\t\tthis.levels = []\r\n\t\t\tconst form = {\r\n\t\t\t\tpageSize: this.pageSize,\r\n\t\t\t\tpageIndex: this.pageIndex,\r\n\t\t\t\tagentId: this.form.agentId,\r\n\t\t\t\ttype: 1\r\n\t\t\t}\r\n\r\n\t\t\tthis.$api\r\n\t\t\t\t.activitySettings(form)\r\n\t\t\t\t.then((_) => {\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t\tif (_.code === 200) {\r\n\t\t\t\t\t\tconst data = _.data\r\n\t\t\t\t\t\tthis.total = data.totalRecord\r\n\t\t\t\t\t\tconst list = data.record\r\n\t\t\t\t\t\tthis.tableLists = [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\topened: false,\r\n\t\t\t\t\t\t\t\ticonLoading: false,\r\n\t\t\t\t\t\t\t\tlevel: 1,\r\n\t\t\t\t\t\t\t\tdata: list\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tthis.loading = false\r\n\t\t\t\t})\r\n\t\t},\r\n\t\tmodifyData(level, params, tableIndex, actType) {\r\n\t\t\tconst extraParams = {\r\n\t\t\t\tstartTime: this.downForm.time && this.downForm.time[0],\r\n\t\t\t\tendTime: this.downForm.time && this.downForm.time[1],\r\n\t\t\t\tagentType: this.downForm.agentType,\r\n\t\t\t\tstatus: this.downForm.status,\r\n\t\t\t\tagentId: params.agentId\r\n\t\t\t}\r\n\t\t\tthis.mixinModifyData(\r\n\t\t\t\tlevel,\r\n\t\t\t\tparams,\r\n\t\t\t\ttableIndex,\r\n\t\t\t\tactType,\r\n\t\t\t\t'activitySettings',\r\n\t\t\t\textraParams\r\n\t\t\t)\r\n\t\t},\r\n\t\thandleSure() {\r\n\t\t\tconst params = {\r\n\t\t\t\tagentId: this.currentData.agentId\r\n\t\t\t}\r\n\t\t\tparams[this.statusName] = this.modalType\r\n\t\t\tthis.$api.updateAgentSetting(params).then((res) => {\r\n\t\t\t\tif (res.code === 200) {\r\n\t\t\t\t\tthis.tableLists[this.currentLevel - 1].data[this.currentIndex][\r\n\t\t\t\t\t\tthis.statusName\r\n\t\t\t\t\t] = params[this.statusName]\r\n\t\t\t\t\tthis.tableLists = [...this.tableLists]\r\n\t\t\t\t\tthis.dialogVisible = false\r\n\t\t\t\t\tthis.dialogVisible2 = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\teditFree(index, row, level, status) {\r\n\t\t\tif (row['chatStatus'] !== 0 && status === 'chatFreeStatus') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (row['anchorTableChatStatus'] !== 0 && status === 'anchorTableFreeChatStatus') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.statusName = status\r\n\t\t\tthis.currentData = { ...row }\r\n\t\t\tthis.currentIndex = index\r\n\t\t\tthis.currentLevel = level\r\n\t\t\tthis.dialogVisible2 = true\r\n\t\t\tthis.modalType = row[status] === 1 ? 0 : 1\r\n\t\t},\r\n\t\teditAll(type) {\r\n\t\t\tthis.allType = type\r\n\t\t\tthis.allVisible = true\r\n\t\t},\r\n\t\teditStatus(index, row, level, status) {\r\n\t\t\tthis.statusName = status\r\n\t\t\tthis.currentData = { ...row }\r\n\t\t\tthis.currentIndex = index\r\n\t\t\tthis.currentLevel = level\r\n\t\t\tthis.dialogVisible = true\r\n\t\t\tthis.modalType = row[status] === 1 ? 0 : 1\r\n\t\t},\r\n\t\tselectChange(value) {\r\n\t\t\tthis.change = value\r\n\t\t\tthis.$store.dispatch('tree/setSelectValue', value)\r\n\t\t},\r\n\t\thandleSearch() {\r\n\t\t\tconst extraParams = {}\r\n\t\t\tthis.mixinHandleSearch('activitySettings', extraParams)\r\n\t\t},\r\n\t\thandleReset() {\r\n\t\t\tthis.form = {\r\n\t\t\t\tagentId: ''\r\n\t\t\t}\r\n\t\t\tthis.hasSearch = false\r\n\t\t\tthis.loadData()\r\n\t\t},\r\n\t\teditOpen(index, row, level, type) {\r\n\t\t\tthis.currentIndex = index\r\n\t\t\tthis.currentLevel = level\r\n\t\t\tthis.type = type\r\n\t\t\tthis.openData = { ...row }\r\n\t\t\tthis.openVisible = true\r\n\t\t},\r\n\t\tcloseAll() {\r\n\t\t\tthis.handleSearch()\r\n\t\t},\r\n\t\tcloseEdit(number) {\r\n\t\t\tif (this.type === 'rewardAnthorAgentRate') {\r\n\t\t\t\tthis.tableLists[this.currentLevel - 1].data[this.currentIndex][\r\n\t\t\t\t\t'rewardAnthorAgentRateStr'\r\n\t\t\t\t] = number + '.00%'\r\n\t\t\t} else if (this.type === 'rewardDealerAgentRate') {\r\n\t\t\t\tthis.tableLists[this.currentLevel - 1].data[this.currentIndex][\r\n\t\t\t\t\t'rewardDealerAgentRateStr'\r\n\t\t\t\t] = number + '.00%'\r\n\t\t\t} else {\r\n\t\t\t\tthis.tableLists[this.currentLevel - 1].data[this.currentIndex][\r\n\t\t\t\t\t'rewardTableAnchorAgentRateStr'\r\n\t\t\t\t] = number + '.00%'\r\n\t\t\t}\r\n\t\t\tthis.tableLists[this.currentLevel - 1].data[this.currentIndex][\r\n\t\t\t\tthis.type\r\n\t\t\t] = Number(number / 100)\r\n\t\t\tthis.tableLists = [...this.tableLists]\r\n\t\t\t// this.loadData()\r\n\t\t}\r\n\t}\r\n}\r\n",null]}