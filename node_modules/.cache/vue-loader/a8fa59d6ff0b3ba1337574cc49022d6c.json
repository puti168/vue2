{"remainingRequest":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\agentRelation\\components\\TableComp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\src\\views\\authoritymanagement\\agentRelation\\components\\TableComp.vue","mtime":1617695097404},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\merchant-manager-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { routerNames } from '@/utils/consts'\r\nimport list from '@/mixins/list'\r\nexport default {\r\n\tname: 'LevelTableComp',\r\n\tmixins: [list],\r\n\tprops: {\r\n\t\ttableData: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: function() {\r\n\t\t\t\treturn {}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcurrency: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: function() {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tpageSize: 5,\r\n\t\t\tcurrentAgentId: ''\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapGetters(['userInfo', 'globalDics'])\r\n\t},\r\n\tmethods: {\r\n\t\tifArrow(levels, index) {\r\n\t\t\tconst levelsLength = levels.length\r\n\t\t\tif (levelsLength > 1 && index !== levelsLength - 1) return true\r\n\t\t},\r\n\t\teditOpen(index, row, level) {\r\n\t\t\tthis.$emit('editOpen', index, row, this.tableData)\r\n\t\t},\r\n\t\thandlePaginationChange(val, type) {\r\n\t\t\tthis.$emit(\r\n\t\t\t\t'modifyData',\r\n\t\t\t\tthis.tableData.level,\r\n\t\t\t\t{\r\n\t\t\t\t\tpageSize: type === 1 ? val : this.pageSize,\r\n\t\t\t\t\tpageIndex: type === 2 ? val : this.pageIndex,\r\n\t\t\t\t\tagentId: this.tableData.parentId,\r\n\t\t\t\t\tagentName: this.tableData.parentName\r\n\t\t\t\t},\r\n\t\t\t\tthis.tableData.level - 1,\r\n\t\t\t\t2\r\n\t\t\t)\r\n\t\t},\r\n\t\tshowChildren(level, opened, row) {\r\n\t\t\tthis.$emit(\r\n\t\t\t\t'showChildren',\r\n\t\t\t\tthis.currentAgentId === row.agentId,\r\n\t\t\t\tlevel,\r\n\t\t\t\topened,\r\n\t\t\t\t{\r\n\t\t\t\t\tagentId: row.agentId,\r\n\t\t\t\t\tagentName: row.agentName,\r\n\t\t\t\t\tpageSize: 5,\r\n\t\t\t\t\tpageIndex: 1\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.currentAgentId = row.agentId\r\n\t\t},\r\n\t\tgoSub (row) {\r\n\t\t\tthis.$store.dispatch('tagsView/delView', {\r\n\t\t\t\tname: routerNames.subAccount\r\n\t\t\t})\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tconst targetUrl = '/authoritymanagement/subAccount'\r\n\t\t\t\tthis.$router.push(`${targetUrl}`)\r\n\t\t\t\tlocalStorage.setItem('agentId', row.agentId)\r\n\t\t\t})\r\n\t\t},\r\n\t\thandleNewBusiness(type, row) {\r\n\t\t\tif (Number(row.availableAccountLimit) === 0) {\r\n\t\t\t\tthis.$message({\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\tmessage: this.$t('wallet_10')\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.$emit(\r\n\t\t\t\t'handleNewBusiness',\r\n\t\t\t\ttype,\r\n\t\t\t\trow.agentsLevel,\r\n\t\t\t\t'bottom',\r\n\t\t\t\trow.apiRate,\r\n\t\t\t\trow.agentId,\r\n\t\t\t\trow.currency,\r\n\t\t\t\trow.countPercentage,\r\n\t\t\t\trow.cooperationModel,\r\n\t\t\t\trow.agentType,\r\n\t\t\t\trow.availableAccountLimit\r\n\t\t\t)\r\n\t\t},\r\n\t\t// 获取货币类型\r\n\t\tgetCurrency(id) {\r\n\t\t\tconst index = this.currency.findIndex((val) => Number(val.id) === id)\r\n\t\t\tif (index > -1) {\r\n\t\t\t\treturn this.currency[index].code\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",null]}